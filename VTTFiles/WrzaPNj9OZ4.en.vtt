WEBVTT
Kind: captions
Language: en

00:00:05.600 --> 00:00:07.110 align:start position:0%
 
hello<00:00:05.839><c> everyone</c><00:00:06.440><c> welcome</c><00:00:06.720><c> to</c><00:00:06.839><c> the</c><00:00:06.919><c> next</c>

00:00:07.110 --> 00:00:07.120 align:start position:0%
hello everyone welcome to the next
 

00:00:07.120 --> 00:00:09.150 align:start position:0%
hello everyone welcome to the next
lecture<00:00:07.359><c> in</c><00:00:07.480><c> theory</c><00:00:07.720><c> of</c><00:00:07.839><c> computation</c><00:00:08.800><c> and</c><00:00:09.000><c> in</c>

00:00:09.150 --> 00:00:09.160 align:start position:0%
lecture in theory of computation and in
 

00:00:09.160 --> 00:00:10.870 align:start position:0%
lecture in theory of computation and in
this<00:00:09.320><c> lecture</c><00:00:09.639><c> we</c><00:00:09.719><c> will</c><00:00:09.880><c> be</c><00:00:10.040><c> discussing</c><00:00:10.480><c> about</c>

00:00:10.870 --> 00:00:10.880 align:start position:0%
this lecture we will be discussing about
 

00:00:10.880 --> 00:00:13.190 align:start position:0%
this lecture we will be discussing about
regular<00:00:11.320><c> languages</c><00:00:12.200><c> we</c><00:00:12.320><c> will</c><00:00:12.440><c> be</c><00:00:12.599><c> seeing</c><00:00:13.080><c> what</c>

00:00:13.190 --> 00:00:13.200 align:start position:0%
regular languages we will be seeing what
 

00:00:13.200 --> 00:00:15.669 align:start position:0%
regular languages we will be seeing what
are<00:00:13.400><c> regular</c><00:00:13.759><c> languages</c><00:00:14.480><c> and</c><00:00:14.719><c> what</c><00:00:14.920><c> are</c><00:00:15.320><c> not</c>

00:00:15.669 --> 00:00:15.679 align:start position:0%
are regular languages and what are not
 

00:00:15.679 --> 00:00:18.269 align:start position:0%
are regular languages and what are not
regular<00:00:16.199><c> languages</c><00:00:17.199><c> all</c><00:00:17.359><c> right</c><00:00:17.560><c> so</c><00:00:17.720><c> let's</c><00:00:17.960><c> get</c>

00:00:18.269 --> 00:00:18.279 align:start position:0%
regular languages all right so let's get
 

00:00:18.279 --> 00:00:22.349 align:start position:0%
regular languages all right so let's get
started<00:00:19.279><c> so</c><00:00:19.760><c> what</c><00:00:19.960><c> is</c><00:00:20.199><c> a</c><00:00:20.359><c> regular</c><00:00:21.160><c> language</c><00:00:22.160><c> a</c>

00:00:22.349 --> 00:00:22.359 align:start position:0%
started so what is a regular language a
 

00:00:22.359 --> 00:00:23.790 align:start position:0%
started so what is a regular language a
language<00:00:22.680><c> is</c><00:00:22.800><c> said</c><00:00:23.000><c> to</c><00:00:23.160><c> be</c><00:00:23.279><c> a</c><00:00:23.439><c> regular</c>

00:00:23.790 --> 00:00:23.800 align:start position:0%
language is said to be a regular
 

00:00:23.800 --> 00:00:26.830 align:start position:0%
language is said to be a regular
language<00:00:24.720><c> if</c><00:00:25.000><c> and</c><00:00:25.240><c> only</c><00:00:25.680><c> if</c><00:00:26.039><c> some</c><00:00:26.439><c> finite</c>

00:00:26.830 --> 00:00:26.840 align:start position:0%
language if and only if some finite
 

00:00:26.840 --> 00:00:29.790 align:start position:0%
language if and only if some finite
State<00:00:27.160><c> machine</c><00:00:27.800><c> recognizes</c><00:00:28.519><c> it</c><00:00:29.240><c> so</c><00:00:29.519><c> what</c><00:00:29.640><c> is</c>

00:00:29.790 --> 00:00:29.800 align:start position:0%
State machine recognizes it so what is
 

00:00:29.800 --> 00:00:32.150 align:start position:0%
State machine recognizes it so what is
this<00:00:30.080><c> mean</c><00:00:31.000><c> in</c><00:00:31.119><c> the</c><00:00:31.320><c> previous</c><00:00:31.640><c> lectures</c><00:00:32.040><c> we</c>

00:00:32.150 --> 00:00:32.160 align:start position:0%
this mean in the previous lectures we
 

00:00:32.160 --> 00:00:34.229 align:start position:0%
this mean in the previous lectures we
have<00:00:32.279><c> seen</c><00:00:32.559><c> many</c><00:00:32.840><c> examples</c><00:00:33.320><c> of</c><00:00:33.600><c> finite</c><00:00:34.000><c> set</c>

00:00:34.229 --> 00:00:34.239 align:start position:0%
have seen many examples of finite set
 

00:00:34.239 --> 00:00:37.270 align:start position:0%
have seen many examples of finite set
machine<00:00:34.719><c> particularly</c><00:00:35.680><c> DFA</c><00:00:36.680><c> where</c><00:00:36.920><c> we</c><00:00:37.040><c> have</c>

00:00:37.270 --> 00:00:37.280 align:start position:0%
machine particularly DFA where we have
 

00:00:37.280 --> 00:00:40.549 align:start position:0%
machine particularly DFA where we have
designed<00:00:37.719><c> particular</c><00:00:38.239><c> DFAS</c><00:00:39.160><c> and</c><00:00:39.440><c> we</c><00:00:39.600><c> saw</c><00:00:39.960><c> that</c>

00:00:40.549 --> 00:00:40.559 align:start position:0%
designed particular DFAS and we saw that
 

00:00:40.559 --> 00:00:43.229 align:start position:0%
designed particular DFAS and we saw that
there<00:00:40.760><c> were</c><00:00:41.600><c> certain</c><00:00:42.039><c> languages</c><00:00:42.800><c> that</c><00:00:42.960><c> were</c>

00:00:43.229 --> 00:00:43.239 align:start position:0%
there were certain languages that were
 

00:00:43.239 --> 00:00:45.950 align:start position:0%
there were certain languages that were
accepted<00:00:43.680><c> or</c><00:00:43.920><c> recognized</c><00:00:44.640><c> by</c><00:00:44.800><c> the</c><00:00:45.000><c> DFA</c><00:00:45.520><c> or</c><00:00:45.719><c> the</c>

00:00:45.950 --> 00:00:45.960 align:start position:0%
accepted or recognized by the DFA or the
 

00:00:45.960 --> 00:00:49.029 align:start position:0%
accepted or recognized by the DFA or the
finite<00:00:46.239><c> State</c><00:00:46.480><c> machines</c><00:00:47.399><c> so</c><00:00:48.079><c> if</c><00:00:48.360><c> we</c><00:00:48.480><c> are</c><00:00:48.719><c> able</c>

00:00:49.029 --> 00:00:49.039 align:start position:0%
finite State machines so if we are able
 

00:00:49.039 --> 00:00:52.430 align:start position:0%
finite State machines so if we are able
to<00:00:49.680><c> design</c><00:00:50.680><c> a</c><00:00:50.879><c> language</c><00:00:51.280><c> using</c><00:00:51.600><c> a</c><00:00:52.039><c> finite</c>

00:00:52.430 --> 00:00:52.440 align:start position:0%
to design a language using a finite
 

00:00:52.440 --> 00:00:53.990 align:start position:0%
to design a language using a finite
State<00:00:52.680><c> machine</c><00:00:53.039><c> that</c><00:00:53.120><c> is</c><00:00:53.280><c> if</c><00:00:53.440><c> the</c><00:00:53.559><c> finite</c>

00:00:53.990 --> 00:00:54.000 align:start position:0%
State machine that is if the finite
 

00:00:54.000 --> 00:00:56.790 align:start position:0%
State machine that is if the finite
State<00:00:54.399><c> machine</c><00:00:54.960><c> recognizes</c><00:00:55.719><c> that</c><00:00:55.920><c> language</c>

00:00:56.790 --> 00:00:56.800 align:start position:0%
State machine recognizes that language
 

00:00:56.800 --> 00:00:59.349 align:start position:0%
State machine recognizes that language
then<00:00:57.120><c> that</c><00:00:57.359><c> language</c><00:00:57.840><c> is</c><00:00:58.120><c> said</c><00:00:58.399><c> to</c><00:00:58.600><c> be</c><00:00:58.840><c> a</c>

00:00:59.349 --> 00:00:59.359 align:start position:0%
then that language is said to be a
 

00:00:59.359 --> 00:01:02.470 align:start position:0%
then that language is said to be a
regular<00:00:59.719><c> language</c><00:01:00.160><c> language</c><00:01:01.160><c> okay</c><00:01:01.760><c> so</c><00:01:02.160><c> if</c><00:01:02.320><c> we</c>

00:01:02.470 --> 00:01:02.480 align:start position:0%
regular language language okay so if we
 

00:01:02.480 --> 00:01:04.789 align:start position:0%
regular language language okay so if we
know<00:01:02.680><c> what</c><00:01:02.879><c> regular</c><00:01:03.239><c> languages</c><00:01:03.760><c> are</c><00:01:04.360><c> the</c><00:01:04.519><c> next</c>

00:01:04.789 --> 00:01:04.799 align:start position:0%
know what regular languages are the next
 

00:01:04.799 --> 00:01:08.030 align:start position:0%
know what regular languages are the next
question<00:01:05.199><c> that</c><00:01:05.479><c> arises</c><00:01:06.439><c> is</c><00:01:07.439><c> so</c><00:01:07.759><c> what</c>

00:01:08.030 --> 00:01:08.040 align:start position:0%
question that arises is so what
 

00:01:08.040 --> 00:01:10.469 align:start position:0%
question that arises is so what
languages<00:01:08.520><c> are</c><00:01:08.840><c> non</c><00:01:09.240><c> regular</c><00:01:10.080><c> so</c><00:01:10.280><c> the</c>

00:01:10.469 --> 00:01:10.479 align:start position:0%
languages are non regular so the
 

00:01:10.479 --> 00:01:13.510 align:start position:0%
languages are non regular so the
languages<00:01:11.479><c> that</c><00:01:11.600><c> are</c><00:01:11.799><c> not</c><00:01:12.119><c> regular</c><00:01:12.600><c> are</c><00:01:12.799><c> the</c>

00:01:13.510 --> 00:01:13.520 align:start position:0%
languages that are not regular are the
 

00:01:13.520 --> 00:01:16.590 align:start position:0%
languages that are not regular are the
languages<00:01:14.520><c> which</c><00:01:14.759><c> are</c><00:01:15.159><c> not</c><00:01:15.520><c> recognized</c><00:01:16.360><c> by</c>

00:01:16.590 --> 00:01:16.600 align:start position:0%
languages which are not recognized by
 

00:01:16.600 --> 00:01:17.550 align:start position:0%
languages which are not recognized by
any

00:01:17.550 --> 00:01:17.560 align:start position:0%
any
 

00:01:17.560 --> 00:01:21.030 align:start position:0%
any
FSM<00:01:18.560><c> and</c><00:01:18.880><c> which</c><00:01:19.159><c> requires</c><00:01:19.720><c> memory</c><00:01:20.400><c> so</c><00:01:20.600><c> we</c><00:01:20.720><c> see</c>

00:01:21.030 --> 00:01:21.040 align:start position:0%
FSM and which requires memory so we see
 

00:01:21.040 --> 00:01:23.109 align:start position:0%
FSM and which requires memory so we see
that<00:01:21.479><c> when</c><00:01:21.640><c> a</c><00:01:21.799><c> language</c><00:01:22.119><c> is</c><00:01:22.280><c> not</c><00:01:22.520><c> recognized</c>

00:01:23.109 --> 00:01:23.119 align:start position:0%
that when a language is not recognized
 

00:01:23.119 --> 00:01:26.469 align:start position:0%
that when a language is not recognized
by<00:01:23.280><c> any</c><00:01:23.759><c> FSM</c><00:01:24.759><c> then</c><00:01:25.040><c> that</c><00:01:25.200><c> is</c><00:01:25.600><c> not</c><00:01:25.799><c> a</c><00:01:26.040><c> regular</c>

00:01:26.469 --> 00:01:26.479 align:start position:0%
by any FSM then that is not a regular
 

00:01:26.479 --> 00:01:28.990 align:start position:0%
by any FSM then that is not a regular
language<00:01:27.240><c> but</c><00:01:27.720><c> when</c><00:01:27.960><c> is</c><00:01:28.119><c> a</c><00:01:28.280><c> language</c><00:01:28.720><c> not</c>

00:01:28.990 --> 00:01:29.000 align:start position:0%
language but when is a language not
 

00:01:29.000 --> 00:01:32.270 align:start position:0%
language but when is a language not
recognized<00:01:29.640><c> by</c><00:01:30.079><c> any</c><00:01:30.360><c> FSM</c><00:01:31.360><c> a</c><00:01:31.560><c> language</c><00:01:32.079><c> will</c>

00:01:32.270 --> 00:01:32.280 align:start position:0%
recognized by any FSM a language will
 

00:01:32.280 --> 00:01:35.069 align:start position:0%
recognized by any FSM a language will
not<00:01:32.479><c> be</c><00:01:32.680><c> recognized</c><00:01:33.240><c> by</c><00:01:33.399><c> any</c><00:01:33.640><c> FSM</c><00:01:34.560><c> when</c><00:01:34.840><c> that</c>

00:01:35.069 --> 00:01:35.079 align:start position:0%
not be recognized by any FSM when that
 

00:01:35.079 --> 00:01:38.830 align:start position:0%
not be recognized by any FSM when that
language<00:01:35.640><c> requires</c><00:01:36.360><c> memory</c><00:01:37.360><c> and</c><00:01:37.720><c> why</c><00:01:38.479><c> is</c><00:01:38.640><c> a</c>

00:01:38.830 --> 00:01:38.840 align:start position:0%
language requires memory and why is a
 

00:01:38.840 --> 00:01:40.510 align:start position:0%
language requires memory and why is a
language<00:01:39.360><c> that</c><00:01:39.520><c> requires</c><00:01:39.960><c> memory</c><00:01:40.280><c> not</c>

00:01:40.510 --> 00:01:40.520 align:start position:0%
language that requires memory not
 

00:01:40.520 --> 00:01:43.510 align:start position:0%
language that requires memory not
recognized<00:01:41.040><c> by</c><00:01:41.159><c> an</c><00:01:41.320><c> FSM</c><00:01:42.200><c> that</c><00:01:42.320><c> is</c><00:01:42.600><c> because</c><00:01:43.399><c> we</c>

00:01:43.510 --> 00:01:43.520 align:start position:0%
recognized by an FSM that is because we
 

00:01:43.520 --> 00:01:45.990 align:start position:0%
recognized by an FSM that is because we
have<00:01:43.680><c> already</c><00:01:44.000><c> studied</c><00:01:44.479><c> in</c><00:01:44.680><c> the</c><00:01:45.600><c> first</c>

00:01:45.990 --> 00:01:46.000 align:start position:0%
have already studied in the first
 

00:01:46.000 --> 00:01:49.510 align:start position:0%
have already studied in the first
lectures<00:01:46.600><c> that</c><00:01:47.479><c> memory</c><00:01:47.920><c> of</c><00:01:48.159><c> FSM</c><00:01:48.799><c> is</c><00:01:49.159><c> very</c>

00:01:49.510 --> 00:01:49.520 align:start position:0%
lectures that memory of FSM is very
 

00:01:49.520 --> 00:01:52.630 align:start position:0%
lectures that memory of FSM is very
limited<00:01:50.479><c> and</c><00:01:50.920><c> it</c><00:01:51.119><c> cannot</c><00:01:51.479><c> store</c><00:01:51.960><c> or</c><00:01:52.320><c> count</c>

00:01:52.630 --> 00:01:52.640 align:start position:0%
limited and it cannot store or count
 

00:01:52.640 --> 00:01:55.190 align:start position:0%
limited and it cannot store or count
strings<00:01:53.439><c> we</c><00:01:53.600><c> know</c><00:01:53.880><c> that</c><00:01:54.000><c> the</c><00:01:54.119><c> memory</c><00:01:54.479><c> of</c><00:01:54.640><c> FSM</c>

00:01:55.190 --> 00:01:55.200 align:start position:0%
strings we know that the memory of FSM
 

00:01:55.200 --> 00:01:57.510 align:start position:0%
strings we know that the memory of FSM
is<00:01:55.399><c> very</c><00:01:55.680><c> limited</c><00:01:56.280><c> the</c><00:01:56.399><c> only</c><00:01:56.719><c> kind</c><00:01:56.920><c> of</c><00:01:57.079><c> memory</c>

00:01:57.510 --> 00:01:57.520 align:start position:0%
is very limited the only kind of memory
 

00:01:57.520 --> 00:02:01.029 align:start position:0%
is very limited the only kind of memory
it<00:01:57.799><c> has</c><00:01:58.360><c> is</c><00:01:58.520><c> the</c><00:01:58.719><c> memory</c><00:01:59.079><c> to</c><00:01:59.280><c> store</c><00:02:00.079><c> in</c><00:02:00.399><c> what</c>

00:02:01.029 --> 00:02:01.039 align:start position:0%
it has is the memory to store in what
 

00:02:01.039 --> 00:02:03.429 align:start position:0%
it has is the memory to store in what
state<00:02:01.479><c> it</c><00:02:01.640><c> is</c><00:02:01.880><c> currently</c><00:02:02.399><c> present</c><00:02:03.079><c> that</c><00:02:03.200><c> is</c>

00:02:03.429 --> 00:02:03.439 align:start position:0%
state it is currently present that is
 

00:02:03.439 --> 00:02:05.190 align:start position:0%
state it is currently present that is
only<00:02:03.680><c> kind</c><00:02:03.840><c> of</c><00:02:04.000><c> memory</c><00:02:04.360><c> it</c><00:02:04.560><c> has</c><00:02:04.759><c> it</c><00:02:04.880><c> doesn't</c>

00:02:05.190 --> 00:02:05.200 align:start position:0%
only kind of memory it has it doesn't
 

00:02:05.200 --> 00:02:06.910 align:start position:0%
only kind of memory it has it doesn't
have<00:02:05.399><c> any</c><00:02:05.600><c> other</c><00:02:05.799><c> kind</c><00:02:05.960><c> of</c><00:02:06.119><c> memory</c><00:02:06.560><c> so</c><00:02:06.719><c> its</c>

00:02:06.910 --> 00:02:06.920 align:start position:0%
have any other kind of memory so its
 

00:02:06.920 --> 00:02:09.070 align:start position:0%
have any other kind of memory so its
memory<00:02:07.280><c> is</c><00:02:07.439><c> very</c><00:02:07.640><c> limited</c><00:02:08.520><c> and</c><00:02:08.720><c> also</c><00:02:08.959><c> it</c>

00:02:09.070 --> 00:02:09.080 align:start position:0%
memory is very limited and also it
 

00:02:09.080 --> 00:02:11.670 align:start position:0%
memory is very limited and also it
cannot<00:02:09.399><c> store</c><00:02:09.759><c> or</c><00:02:10.039><c> count</c><00:02:10.319><c> strings</c><00:02:11.160><c> so</c><00:02:11.520><c> the</c>

00:02:11.670 --> 00:02:11.680 align:start position:0%
cannot store or count strings so the
 

00:02:11.680 --> 00:02:14.309 align:start position:0%
cannot store or count strings so the
languages<00:02:12.360><c> that</c><00:02:12.599><c> requires</c><00:02:13.200><c> memory</c><00:02:13.959><c> or</c><00:02:14.120><c> the</c>

00:02:14.309 --> 00:02:14.319 align:start position:0%
languages that requires memory or the
 

00:02:14.319 --> 00:02:16.670 align:start position:0%
languages that requires memory or the
languages<00:02:15.000><c> that</c><00:02:15.319><c> requires</c><00:02:15.920><c> storing</c><00:02:16.440><c> or</c>

00:02:16.670 --> 00:02:16.680 align:start position:0%
languages that requires storing or
 

00:02:16.680 --> 00:02:19.869 align:start position:0%
languages that requires storing or
counting<00:02:17.080><c> of</c><00:02:17.319><c> strings</c><00:02:18.239><c> cannot</c><00:02:18.720><c> be</c><00:02:19.000><c> designed</c>

00:02:19.869 --> 00:02:19.879 align:start position:0%
counting of strings cannot be designed
 

00:02:19.879 --> 00:02:22.390 align:start position:0%
counting of strings cannot be designed
or<00:02:20.120><c> recognized</c><00:02:20.680><c> using</c><00:02:21.040><c> a</c><00:02:21.640><c> finite</c><00:02:22.040><c> State</c>

00:02:22.390 --> 00:02:22.400 align:start position:0%
or recognized using a finite State
 

00:02:22.400 --> 00:02:25.949 align:start position:0%
or recognized using a finite State
machine<00:02:23.080><c> making</c><00:02:23.560><c> it</c><00:02:23.920><c> a</c><00:02:24.080><c> language</c><00:02:24.599><c> that</c><00:02:24.760><c> is</c><00:02:25.200><c> not</c>

00:02:25.949 --> 00:02:25.959 align:start position:0%
machine making it a language that is not
 

00:02:25.959 --> 00:02:28.589 align:start position:0%
machine making it a language that is not
regular<00:02:26.959><c> all</c><00:02:27.120><c> right</c><00:02:27.519><c> so</c><00:02:27.840><c> I</c><00:02:27.959><c> hope</c><00:02:28.200><c> that</c><00:02:28.319><c> was</c>

00:02:28.589 --> 00:02:28.599 align:start position:0%
regular all right so I hope that was
 

00:02:28.599 --> 00:02:31.229 align:start position:0%
regular all right so I hope that was
clear<00:02:29.599><c> so</c><00:02:29.920><c> so</c><00:02:30.080><c> let</c><00:02:30.200><c> us</c><00:02:30.360><c> take</c><00:02:30.480><c> a</c><00:02:30.599><c> few</c><00:02:30.840><c> examples</c>

00:02:31.229 --> 00:02:31.239 align:start position:0%
clear so so let us take a few examples
 

00:02:31.239 --> 00:02:34.630 align:start position:0%
clear so so let us take a few examples
to<00:02:31.440><c> make</c><00:02:31.560><c> it</c><00:02:31.720><c> more</c><00:02:32.280><c> clear</c><00:02:33.280><c> for</c><00:02:33.800><c> example</c>

00:02:34.630 --> 00:02:34.640 align:start position:0%
to make it more clear for example
 

00:02:34.640 --> 00:02:38.509 align:start position:0%
to make it more clear for example
suppose<00:02:35.120><c> I</c><00:02:35.319><c> have</c><00:02:35.519><c> a</c><00:02:35.680><c> language</c><00:02:36.080><c> of</c><00:02:36.319><c> this</c><00:02:36.879><c> form</c><00:02:37.879><c> a</c>

00:02:38.509 --> 00:02:38.519 align:start position:0%
suppose I have a language of this form a
 

00:02:38.519 --> 00:02:48.070 align:start position:0%
suppose I have a language of this form a
b<00:02:39.319><c> a</c><00:02:40.319><c> b</c><00:02:41.120><c> b</c><00:02:42.120><c> followed</c><00:02:42.599><c> by</c><00:02:43.000><c> a</c><00:02:43.720><c> b</c><00:02:44.519><c> a</c><00:02:45.319><c> b</c><00:02:46.120><c> b</c><00:02:47.040><c> so</c><00:02:47.800><c> what</c><00:02:47.920><c> is</c>

00:02:48.070 --> 00:02:48.080 align:start position:0%
b a b b followed by a b a b b so what is
 

00:02:48.080 --> 00:02:50.270 align:start position:0%
b a b b followed by a b a b b so what is
the<00:02:48.599><c> rule</c><00:02:48.920><c> that</c><00:02:49.080><c> this</c><00:02:49.280><c> language</c><00:02:49.599><c> follows</c><00:02:50.159><c> the</c>

00:02:50.270 --> 00:02:50.280 align:start position:0%
the rule that this language follows the
 

00:02:50.280 --> 00:02:52.630 align:start position:0%
the rule that this language follows the
rule<00:02:50.519><c> that</c><00:02:50.680><c> this</c><00:02:50.879><c> language</c><00:02:51.239><c> follows</c><00:02:51.720><c> is</c><00:02:51.920><c> that</c>

00:02:52.630 --> 00:02:52.640 align:start position:0%
rule that this language follows is that
 

00:02:52.640 --> 00:02:57.229 align:start position:0%
rule that this language follows is that
the<00:02:53.000><c> first</c><00:02:53.480><c> five</c><00:02:54.400><c> letters</c><00:02:55.000><c> a</c><00:02:55.319><c> b</c><00:02:55.640><c> a</c><00:02:55.920><c> b</c><00:02:56.159><c> b</c><00:02:56.840><c> is</c>

00:02:57.229 --> 00:02:57.239 align:start position:0%
the first five letters a b a b b is
 

00:02:57.239 --> 00:03:01.309 align:start position:0%
the first five letters a b a b b is
repeated<00:02:57.800><c> again</c><00:02:58.200><c> a</c><00:02:58.440><c> b</c><00:02:58.760><c> a</c><00:02:59.000><c> b</c><00:02:59.239><c> b</c><00:02:59.879><c> so</c><00:03:00.319><c> these</c><00:03:00.760><c> five</c>

00:03:01.309 --> 00:03:01.319 align:start position:0%
repeated again a b a b b so these five
 

00:03:01.319 --> 00:03:04.350 align:start position:0%
repeated again a b a b b so these five
letters<00:03:02.200><c> should</c><00:03:02.519><c> be</c>

00:03:04.350 --> 00:03:04.360 align:start position:0%
letters should be
 

00:03:04.360 --> 00:03:06.550 align:start position:0%
letters should be
repeated<00:03:05.360><c> exactly</c><00:03:05.840><c> the</c><00:03:06.000><c> same</c><00:03:06.239><c> thing</c><00:03:06.360><c> should</c>

00:03:06.550 --> 00:03:06.560 align:start position:0%
repeated exactly the same thing should
 

00:03:06.560 --> 00:03:08.750 align:start position:0%
repeated exactly the same thing should
be<00:03:06.720><c> repeated</c><00:03:07.200><c> again</c><00:03:07.440><c> that</c><00:03:07.560><c> is</c><00:03:07.720><c> the</c><00:03:08.440><c> kind</c><00:03:08.599><c> of</c>

00:03:08.750 --> 00:03:08.760 align:start position:0%
be repeated again that is the kind of
 

00:03:08.760 --> 00:03:11.110 align:start position:0%
be repeated again that is the kind of
rule<00:03:09.000><c> this</c><00:03:09.200><c> language</c><00:03:09.519><c> follows</c><00:03:10.239><c> so</c><00:03:10.440><c> let</c><00:03:10.560><c> us</c><00:03:10.879><c> see</c>

00:03:11.110 --> 00:03:11.120 align:start position:0%
rule this language follows so let us see
 

00:03:11.120 --> 00:03:12.750 align:start position:0%
rule this language follows so let us see
if<00:03:11.280><c> this</c><00:03:11.440><c> can</c><00:03:11.560><c> be</c><00:03:11.720><c> designed</c><00:03:12.040><c> using</c><00:03:12.280><c> a</c><00:03:12.360><c> final</c>

00:03:12.750 --> 00:03:12.760 align:start position:0%
if this can be designed using a final
 

00:03:12.760 --> 00:03:16.229 align:start position:0%
if this can be designed using a final
set<00:03:12.920><c> machine</c><00:03:13.239><c> or</c><00:03:13.760><c> not</c><00:03:14.760><c> we</c><00:03:14.879><c> see</c><00:03:15.239><c> that</c><00:03:15.799><c> in</c><00:03:15.959><c> order</c>

00:03:16.229 --> 00:03:16.239 align:start position:0%
set machine or not we see that in order
 

00:03:16.239 --> 00:03:20.710 align:start position:0%
set machine or not we see that in order
to<00:03:16.640><c> repeat</c><00:03:17.640><c> what</c><00:03:17.879><c> was</c><00:03:18.200><c> here</c><00:03:19.000><c> over</c><00:03:19.519><c> here</c><00:03:20.519><c> we</c>

00:03:20.710 --> 00:03:20.720 align:start position:0%
to repeat what was here over here we
 

00:03:20.720 --> 00:03:22.750 align:start position:0%
to repeat what was here over here we
need<00:03:21.000><c> a</c><00:03:21.239><c> memory</c><00:03:21.840><c> which</c><00:03:22.040><c> stores</c><00:03:22.560><c> the</c>

00:03:22.750 --> 00:03:22.760 align:start position:0%
need a memory which stores the
 

00:03:22.760 --> 00:03:26.030 align:start position:0%
need a memory which stores the
information<00:03:23.319><c> about</c><00:03:24.040><c> this</c><00:03:24.239><c> string</c><00:03:25.239><c> right</c><00:03:25.720><c> only</c>

00:03:26.030 --> 00:03:26.040 align:start position:0%
information about this string right only
 

00:03:26.040 --> 00:03:29.070 align:start position:0%
information about this string right only
if<00:03:26.200><c> we</c><00:03:26.360><c> know</c><00:03:26.760><c> what</c><00:03:27.000><c> is</c><00:03:27.319><c> stored</c><00:03:27.879><c> here</c><00:03:28.720><c> only</c><00:03:28.959><c> if</c>

00:03:29.070 --> 00:03:29.080 align:start position:0%
if we know what is stored here only if
 

00:03:29.080 --> 00:03:30.750 align:start position:0%
if we know what is stored here only if
we<00:03:29.239><c> have</c><00:03:29.360><c> the</c><00:03:29.480><c> information</c><00:03:30.040><c> about</c><00:03:30.319><c> this</c><00:03:30.599><c> then</c>

00:03:30.750 --> 00:03:30.760 align:start position:0%
we have the information about this then
 

00:03:30.760 --> 00:03:33.190 align:start position:0%
we have the information about this then
only<00:03:31.040><c> we</c><00:03:31.159><c> can</c><00:03:31.439><c> repeat</c><00:03:31.760><c> it</c><00:03:31.959><c> over</c><00:03:32.239><c> here</c><00:03:32.879><c> but</c><00:03:33.040><c> we</c>

00:03:33.190 --> 00:03:33.200 align:start position:0%
only we can repeat it over here but we
 

00:03:33.200 --> 00:03:34.949 align:start position:0%
only we can repeat it over here but we
know<00:03:33.360><c> that</c><00:03:33.519><c> finite</c><00:03:33.879><c> State</c>

00:03:34.949 --> 00:03:34.959 align:start position:0%
know that finite State
 

00:03:34.959 --> 00:03:37.509 align:start position:0%
know that finite State
machine<00:03:35.959><c> has</c><00:03:36.120><c> a</c><00:03:36.319><c> very</c><00:03:36.519><c> limited</c><00:03:36.879><c> memory</c><00:03:37.239><c> so</c><00:03:37.400><c> it</c>

00:03:37.509 --> 00:03:37.519 align:start position:0%
machine has a very limited memory so it
 

00:03:37.519 --> 00:03:39.550 align:start position:0%
machine has a very limited memory so it
cannot<00:03:37.840><c> store</c><00:03:38.200><c> this</c><00:03:38.400><c> part</c><00:03:38.560><c> in</c><00:03:38.720><c> memory</c><00:03:39.120><c> so</c><00:03:39.400><c> as</c>

00:03:39.550 --> 00:03:39.560 align:start position:0%
cannot store this part in memory so as
 

00:03:39.560 --> 00:03:42.149 align:start position:0%
cannot store this part in memory so as
to<00:03:39.720><c> repeat</c><00:03:40.040><c> it</c><00:03:40.239><c> again</c><00:03:40.480><c> over</c><00:03:40.760><c> here</c><00:03:41.319><c> so</c><00:03:41.920><c> this</c>

00:03:42.149 --> 00:03:42.159 align:start position:0%
to repeat it again over here so this
 

00:03:42.159 --> 00:03:44.509 align:start position:0%
to repeat it again over here so this
cannot<00:03:42.560><c> be</c><00:03:43.000><c> designed</c><00:03:43.400><c> using</c><00:03:43.680><c> a</c><00:03:43.840><c> finite</c><00:03:44.239><c> State</c>

00:03:44.509 --> 00:03:44.519 align:start position:0%
cannot be designed using a finite State
 

00:03:44.519 --> 00:03:47.789 align:start position:0%
cannot be designed using a finite State
machine<00:03:45.239><c> making</c><00:03:45.680><c> it</c><00:03:45.920><c> a</c><00:03:46.120><c> language</c><00:03:46.560><c> that</c><00:03:46.680><c> is</c><00:03:47.120><c> not</c>

00:03:47.789 --> 00:03:47.799 align:start position:0%
machine making it a language that is not
 

00:03:47.799 --> 00:03:50.990 align:start position:0%
machine making it a language that is not
regular<00:03:48.879><c> okay</c><00:03:49.879><c> now</c><00:03:50.040><c> let</c><00:03:50.159><c> me</c><00:03:50.319><c> take</c><00:03:50.519><c> another</c>

00:03:50.990 --> 00:03:51.000 align:start position:0%
regular okay now let me take another
 

00:03:51.000 --> 00:03:53.990 align:start position:0%
regular okay now let me take another
example<00:03:52.000><c> in</c><00:03:52.200><c> this</c><00:03:52.480><c> example</c><00:03:53.360><c> I</c><00:03:53.480><c> have</c><00:03:53.680><c> another</c>

00:03:53.990 --> 00:03:54.000 align:start position:0%
example in this example I have another
 

00:03:54.000 --> 00:03:58.509 align:start position:0%
example in this example I have another
language<00:03:54.360><c> of</c><00:03:54.560><c> this</c><00:03:54.959><c> form</c><00:03:55.959><c> a</c><00:03:56.319><c> power</c><00:03:56.879><c> n</c><00:03:57.879><c> b</c><00:03:58.280><c> power</c>

00:03:58.509 --> 00:03:58.519 align:start position:0%
language of this form a power n b power
 

00:03:58.519 --> 00:04:01.270 align:start position:0%
language of this form a power n b power
n<00:03:59.480><c> now</c><00:03:59.799><c> what</c><00:03:59.879><c> is</c><00:03:59.959><c> the</c><00:04:00.040><c> meaning</c><00:04:00.280><c> of</c><00:04:00.480><c> this</c><00:04:01.120><c> this</c>

00:04:01.270 --> 00:04:01.280 align:start position:0%
n now what is the meaning of this this
 

00:04:01.280 --> 00:04:04.509 align:start position:0%
n now what is the meaning of this this
means<00:04:01.640><c> that</c><00:04:01.959><c> the</c><00:04:02.120><c> number</c><00:04:02.439><c> of</c><00:04:02.680><c> A's</c><00:04:03.280><c> should</c><00:04:03.519><c> be</c>

00:04:04.509 --> 00:04:04.519 align:start position:0%
means that the number of A's should be
 

00:04:04.519 --> 00:04:07.830 align:start position:0%
means that the number of A's should be
equal<00:04:04.840><c> to</c><00:04:05.000><c> the</c><00:04:05.120><c> number</c><00:04:05.400><c> of</c><00:04:05.599><c> B's</c><00:04:06.400><c> so</c><00:04:07.280><c> suppose</c><00:04:07.599><c> I</c>

00:04:07.830 --> 00:04:07.840 align:start position:0%
equal to the number of B's so suppose I
 

00:04:07.840 --> 00:04:11.830 align:start position:0%
equal to the number of B's so suppose I
have<00:04:08.519><c> a</c><00:04:09.120><c> a</c><00:04:09.640><c> a</c><00:04:10.120><c> 3</c><00:04:10.439><c> A's</c><00:04:11.120><c> then</c><00:04:11.319><c> it</c><00:04:11.480><c> should</c><00:04:11.680><c> be</c>

00:04:11.830 --> 00:04:11.840 align:start position:0%
have a a a 3 A's then it should be
 

00:04:11.840 --> 00:04:16.349 align:start position:0%
have a a a 3 A's then it should be
followed<00:04:12.319><c> by</c><00:04:13.120><c> B</c><00:04:13.599><c> B</c><00:04:14.000><c> B</c><00:04:14.439><c> Three</c><00:04:14.760><c> Bs</c>

00:04:16.349 --> 00:04:16.359 align:start position:0%
followed by B B B Three Bs
 

00:04:16.359 --> 00:04:18.949 align:start position:0%
followed by B B B Three Bs
because<00:04:17.359><c> n</c><00:04:17.639><c> should</c><00:04:17.880><c> be</c><00:04:18.079><c> same</c><00:04:18.440><c> that</c><00:04:18.560><c> means</c><00:04:18.799><c> the</c>

00:04:18.949 --> 00:04:18.959 align:start position:0%
because n should be same that means the
 

00:04:18.959 --> 00:04:21.349 align:start position:0%
because n should be same that means the
number<00:04:19.280><c> of</c><00:04:19.959><c> A's</c><00:04:20.320><c> and</c><00:04:20.479><c> number</c><00:04:20.680><c> of</c><00:04:20.840><c> B</c><00:04:21.079><c> should</c><00:04:21.199><c> be</c>

00:04:21.349 --> 00:04:21.359 align:start position:0%
number of A's and number of B should be
 

00:04:21.359 --> 00:04:23.430 align:start position:0%
number of A's and number of B should be
exactly<00:04:21.799><c> same</c><00:04:22.079><c> so</c><00:04:22.280><c> if</c><00:04:22.440><c> I</c><00:04:22.560><c> have</c><00:04:22.759><c> written</c><00:04:23.199><c> Three</c>

00:04:23.430 --> 00:04:23.440 align:start position:0%
exactly same so if I have written Three
 

00:04:23.440 --> 00:04:26.790 align:start position:0%
exactly same so if I have written Three
A's<00:04:23.840><c> here</c><00:04:24.440><c> I</c><00:04:24.800><c> I</c><00:04:24.880><c> should</c><00:04:25.199><c> write</c><00:04:25.840><c> three</c><00:04:26.440><c> Bs</c>

00:04:26.790 --> 00:04:26.800 align:start position:0%
A's here I I should write three Bs
 

00:04:26.800 --> 00:04:30.550 align:start position:0%
A's here I I should write three Bs
following<00:04:27.280><c> it</c><00:04:28.040><c> so</c><00:04:28.440><c> suppose</c><00:04:28.800><c> I</c><00:04:28.919><c> have</c><00:04:29.120><c> 4</c><00:04:29.400><c> A's</c><00:04:30.000><c> 1</c><00:04:30.240><c> 2</c>

00:04:30.550 --> 00:04:30.560 align:start position:0%
following it so suppose I have 4 A's 1 2
 

00:04:30.560 --> 00:04:35.070 align:start position:0%
following it so suppose I have 4 A's 1 2
3<00:04:31.039><c> 4</c><00:04:31.800><c> then</c><00:04:31.960><c> I</c><00:04:32.080><c> should</c><00:04:32.320><c> also</c><00:04:32.840><c> have</c><00:04:33.840><c> four</c>

00:04:35.070 --> 00:04:35.080 align:start position:0%
3 4 then I should also have four
 

00:04:35.080 --> 00:04:38.870 align:start position:0%
3 4 then I should also have four
B<00:04:36.080><c> right</c><00:04:36.639><c> the</c><00:04:37.520><c> number</c><00:04:37.960><c> of</c>

00:04:38.870 --> 00:04:38.880 align:start position:0%
B right the number of
 

00:04:38.880 --> 00:04:42.990 align:start position:0%
B right the number of
A's<00:04:39.880><c> here</c><00:04:40.120><c> should</c><00:04:40.440><c> be</c><00:04:41.160><c> exactly</c><00:04:42.039><c> equal</c><00:04:42.320><c> to</c><00:04:42.560><c> the</c>

00:04:42.990 --> 00:04:43.000 align:start position:0%
A's here should be exactly equal to the
 

00:04:43.000 --> 00:04:46.710 align:start position:0%
A's here should be exactly equal to the
number<00:04:43.320><c> of</c><00:04:43.800><c> B's</c><00:04:44.800><c> so</c><00:04:45.560><c> this</c><00:04:46.000><c> language</c><00:04:46.440><c> also</c>

00:04:46.710 --> 00:04:46.720 align:start position:0%
number of B's so this language also
 

00:04:46.720 --> 00:04:48.550 align:start position:0%
number of B's so this language also
cannot<00:04:47.000><c> be</c><00:04:47.199><c> recognized</c><00:04:47.759><c> by</c><00:04:47.880><c> a</c><00:04:48.000><c> finite</c><00:04:48.360><c> set</c>

00:04:48.550 --> 00:04:48.560 align:start position:0%
cannot be recognized by a finite set
 

00:04:48.560 --> 00:04:51.469 align:start position:0%
cannot be recognized by a finite set
machine<00:04:49.080><c> why</c><00:04:49.639><c> that</c><00:04:49.759><c> is</c><00:04:50.000><c> because</c><00:04:50.759><c> in</c><00:04:50.919><c> order</c><00:04:51.240><c> to</c>

00:04:51.469 --> 00:04:51.479 align:start position:0%
machine why that is because in order to
 

00:04:51.479 --> 00:04:55.230 align:start position:0%
machine why that is because in order to
repeat<00:04:51.919><c> the</c><00:04:52.120><c> same</c><00:04:52.479><c> number</c><00:04:53.039><c> of</c><00:04:54.039><c> b</c><00:04:54.639><c> as</c><00:04:54.800><c> a</c><00:04:54.960><c> number</c>

00:04:55.230 --> 00:04:55.240 align:start position:0%
repeat the same number of b as a number
 

00:04:55.240 --> 00:04:57.990 align:start position:0%
repeat the same number of b as a number
of<00:04:55.400><c> A's</c><00:04:56.039><c> I</c><00:04:56.160><c> need</c><00:04:56.360><c> to</c><00:04:56.560><c> keep</c><00:04:56.960><c> count</c><00:04:57.280><c> of</c><00:04:57.520><c> how</c><00:04:57.680><c> many</c>

00:04:57.990 --> 00:04:58.000 align:start position:0%
of A's I need to keep count of how many
 

00:04:58.000 --> 00:05:00.390 align:start position:0%
of A's I need to keep count of how many
A's<00:04:58.360><c> were</c><00:04:58.960><c> written</c><00:04:59.360><c> first</c>

00:05:00.390 --> 00:05:00.400 align:start position:0%
A's were written first
 

00:05:00.400 --> 00:05:03.070 align:start position:0%
A's were written first
right<00:05:00.600><c> if</c><00:05:00.720><c> I</c><00:05:00.880><c> wrote</c><00:05:01.400><c> 3</c><00:05:01.720><c> a</c><00:05:02.320><c> then</c><00:05:02.520><c> I</c><00:05:02.680><c> I</c><00:05:02.759><c> need</c><00:05:02.880><c> to</c>

00:05:03.070 --> 00:05:03.080 align:start position:0%
right if I wrote 3 a then I I need to
 

00:05:03.080 --> 00:05:05.230 align:start position:0%
right if I wrote 3 a then I I need to
keep<00:05:03.280><c> account</c><00:05:03.600><c> that</c><00:05:03.840><c> yes</c><00:05:04.080><c> a</c><00:05:04.280><c> was</c><00:05:04.479><c> three</c><00:05:05.080><c> then</c>

00:05:05.230 --> 00:05:05.240 align:start position:0%
keep account that yes a was three then
 

00:05:05.240 --> 00:05:08.510 align:start position:0%
keep account that yes a was three then
only<00:05:05.520><c> I</c><00:05:05.639><c> can</c><00:05:06.039><c> repeat</c><00:05:06.880><c> three</c><00:05:07.120><c> number</c><00:05:07.360><c> of</c><00:05:07.520><c> B</c><00:05:08.320><c> here</c>

00:05:08.510 --> 00:05:08.520 align:start position:0%
only I can repeat three number of B here
 

00:05:08.520 --> 00:05:10.870 align:start position:0%
only I can repeat three number of B here
also<00:05:09.280><c> I</c><00:05:09.400><c> need</c><00:05:09.560><c> to</c><00:05:09.759><c> keep</c><00:05:10.039><c> account</c><00:05:10.320><c> that</c><00:05:10.479><c> I</c><00:05:10.639><c> had</c>

00:05:10.870 --> 00:05:10.880 align:start position:0%
also I need to keep account that I had
 

00:05:10.880 --> 00:05:13.390 align:start position:0%
also I need to keep account that I had
four<00:05:11.160><c> a</c><00:05:11.520><c> then</c><00:05:11.639><c> only</c><00:05:11.880><c> I</c><00:05:12.000><c> can</c><00:05:12.199><c> repeat</c><00:05:13.080><c> four</c>

00:05:13.390 --> 00:05:13.400 align:start position:0%
four a then only I can repeat four
 

00:05:13.400 --> 00:05:16.270 align:start position:0%
four a then only I can repeat four
number<00:05:13.639><c> of</c><00:05:13.840><c> BS</c><00:05:14.639><c> but</c><00:05:15.199><c> we</c><00:05:15.360><c> have</c><00:05:15.560><c> already</c><00:05:15.919><c> said</c>

00:05:16.270 --> 00:05:16.280 align:start position:0%
number of BS but we have already said
 

00:05:16.280 --> 00:05:18.870 align:start position:0%
number of BS but we have already said
that<00:05:16.520><c> it</c><00:05:16.759><c> cannot</c><00:05:17.560><c> count</c><00:05:18.080><c> strings</c><00:05:18.560><c> finite</c>

00:05:18.870 --> 00:05:18.880 align:start position:0%
that it cannot count strings finite
 

00:05:18.880 --> 00:05:22.110 align:start position:0%
that it cannot count strings finite
State<00:05:19.160><c> machine</c><00:05:19.560><c> cannot</c><00:05:20.240><c> keep</c><00:05:20.479><c> a</c><00:05:20.720><c> count</c><00:05:21.639><c> so</c>

00:05:22.110 --> 00:05:22.120 align:start position:0%
State machine cannot keep a count so
 

00:05:22.120 --> 00:05:24.909 align:start position:0%
State machine cannot keep a count so
this<00:05:22.360><c> also</c><00:05:22.680><c> cannot</c><00:05:23.039><c> be</c><00:05:23.360><c> recognized</c><00:05:24.160><c> by</c><00:05:24.319><c> a</c>

00:05:24.909 --> 00:05:24.919 align:start position:0%
this also cannot be recognized by a
 

00:05:24.919 --> 00:05:28.990 align:start position:0%
this also cannot be recognized by a
finite<00:05:25.319><c> State</c><00:05:26.039><c> machine</c><00:05:27.039><c> thus</c><00:05:27.759><c> it</c><00:05:27.919><c> is</c><00:05:28.360><c> not</c><00:05:28.639><c> a</c>

00:05:28.990 --> 00:05:29.000 align:start position:0%
finite State machine thus it is not a
 

00:05:29.000 --> 00:05:30.230 align:start position:0%
finite State machine thus it is not a
regular<00:05:29.400><c> language</c>

00:05:30.230 --> 00:05:30.240 align:start position:0%
regular language
 

00:05:30.240 --> 00:05:32.629 align:start position:0%
regular language
so<00:05:30.479><c> in</c><00:05:30.600><c> the</c><00:05:30.800><c> first</c><00:05:31.080><c> example</c><00:05:31.720><c> we</c><00:05:31.880><c> saw</c><00:05:32.479><c> an</c>

00:05:32.629 --> 00:05:32.639 align:start position:0%
so in the first example we saw an
 

00:05:32.639 --> 00:05:34.950 align:start position:0%
so in the first example we saw an
example<00:05:33.080><c> where</c><00:05:33.240><c> we</c><00:05:33.440><c> had</c><00:05:33.600><c> to</c><00:05:34.360><c> store</c><00:05:34.800><c> the</c>

00:05:34.950 --> 00:05:34.960 align:start position:0%
example where we had to store the
 

00:05:34.960 --> 00:05:37.790 align:start position:0%
example where we had to store the
strings<00:05:35.600><c> we</c><00:05:35.759><c> need</c><00:05:35.919><c> a</c><00:05:36.080><c> memory</c><00:05:36.440><c> to</c><00:05:36.600><c> store</c><00:05:37.319><c> this</c>

00:05:37.790 --> 00:05:37.800 align:start position:0%
strings we need a memory to store this
 

00:05:37.800 --> 00:05:40.230 align:start position:0%
strings we need a memory to store this
part<00:05:38.800><c> which</c><00:05:38.960><c> could</c><00:05:39.120><c> not</c><00:05:39.280><c> be</c><00:05:39.440><c> done</c><00:05:39.600><c> so</c><00:05:39.800><c> this</c><00:05:39.919><c> was</c>

00:05:40.230 --> 00:05:40.240 align:start position:0%
part which could not be done so this was
 

00:05:40.240 --> 00:05:41.950 align:start position:0%
part which could not be done so this was
not<00:05:40.400><c> a</c><00:05:40.560><c> regular</c><00:05:40.919><c> language</c><00:05:41.319><c> and</c><00:05:41.440><c> in</c><00:05:41.520><c> the</c><00:05:41.639><c> second</c>

00:05:41.950 --> 00:05:41.960 align:start position:0%
not a regular language and in the second
 

00:05:41.960 --> 00:05:44.830 align:start position:0%
not a regular language and in the second
example<00:05:42.639><c> we</c><00:05:42.759><c> needed</c><00:05:43.120><c> to</c><00:05:43.319><c> keep</c><00:05:43.720><c> the</c><00:05:44.360><c> count</c><00:05:44.680><c> of</c>

00:05:44.830 --> 00:05:44.840 align:start position:0%
example we needed to keep the count of
 

00:05:44.840 --> 00:05:46.510 align:start position:0%
example we needed to keep the count of
strings<00:05:45.360><c> in</c><00:05:45.479><c> order</c><00:05:45.800><c> to</c>

00:05:46.510 --> 00:05:46.520 align:start position:0%
strings in order to
 

00:05:46.520 --> 00:05:48.909 align:start position:0%
strings in order to
repeat<00:05:47.520><c> the</c><00:05:47.720><c> following</c><00:05:48.120><c> strings</c><00:05:48.520><c> in</c><00:05:48.720><c> this</c>

00:05:48.909 --> 00:05:48.919 align:start position:0%
repeat the following strings in this
 

00:05:48.919 --> 00:05:51.390 align:start position:0%
repeat the following strings in this
kind<00:05:49.080><c> of</c><00:05:49.280><c> language</c><00:05:49.759><c> so</c><00:05:50.400><c> these</c><00:05:50.600><c> two</c><00:05:50.840><c> languages</c>

00:05:51.390 --> 00:05:51.400 align:start position:0%
kind of language so these two languages
 

00:05:51.400 --> 00:05:53.350 align:start position:0%
kind of language so these two languages
since<00:05:51.600><c> it</c><00:05:51.759><c> requires</c><00:05:52.199><c> memory</c><00:05:52.560><c> for</c><00:05:52.759><c> storing</c><00:05:53.160><c> and</c>

00:05:53.350 --> 00:05:53.360 align:start position:0%
since it requires memory for storing and
 

00:05:53.360 --> 00:05:57.590 align:start position:0%
since it requires memory for storing and
counting<00:05:54.160><c> it</c><00:05:54.360><c> cannot</c><00:05:55.039><c> be</c><00:05:56.360><c> designed</c><00:05:57.360><c> or</c>

00:05:57.590 --> 00:05:57.600 align:start position:0%
counting it cannot be designed or
 

00:05:57.600 --> 00:05:59.390 align:start position:0%
counting it cannot be designed or
recognized<00:05:58.120><c> using</c><00:05:58.400><c> the</c><00:05:58.520><c> final</c><00:05:58.880><c> State</c><00:05:59.080><c> machine</c>

00:05:59.390 --> 00:05:59.400 align:start position:0%
recognized using the final State machine
 

00:05:59.400 --> 00:06:01.870 align:start position:0%
recognized using the final State machine
make<00:05:59.639><c> making</c><00:05:59.880><c> it</c><00:06:00.240><c> a</c><00:06:00.440><c> language</c><00:06:00.880><c> that</c><00:06:01.039><c> is</c><00:06:01.520><c> not</c>

00:06:01.870 --> 00:06:01.880 align:start position:0%
make making it a language that is not
 

00:06:01.880 --> 00:06:04.550 align:start position:0%
make making it a language that is not
regular<00:06:02.880><c> all</c><00:06:03.080><c> right</c><00:06:03.560><c> so</c><00:06:03.880><c> the</c><00:06:04.039><c> example</c><00:06:04.400><c> of</c>

00:06:04.550 --> 00:06:04.560 align:start position:0%
regular all right so the example of
 

00:06:04.560 --> 00:06:08.029 align:start position:0%
regular all right so the example of
regular<00:06:05.160><c> languages</c><00:06:06.160><c> are</c><00:06:06.960><c> many</c><00:06:07.599><c> as</c><00:06:07.759><c> we</c><00:06:07.880><c> have</c>

00:06:08.029 --> 00:06:08.039 align:start position:0%
regular languages are many as we have
 

00:06:08.039 --> 00:06:09.790 align:start position:0%
regular languages are many as we have
already<00:06:08.400><c> discussed</c><00:06:08.800><c> in</c><00:06:09.000><c> the</c><00:06:09.440><c> previous</c>

00:06:09.790 --> 00:06:09.800 align:start position:0%
already discussed in the previous
 

00:06:09.800 --> 00:06:11.909 align:start position:0%
already discussed in the previous
lectures<00:06:10.160><c> in</c><00:06:10.319><c> the</c><00:06:10.479><c> examples</c><00:06:11.319><c> and</c><00:06:11.520><c> these</c><00:06:11.680><c> were</c>

00:06:11.909 --> 00:06:11.919 align:start position:0%
lectures in the examples and these were
 

00:06:11.919 --> 00:06:14.550 align:start position:0%
lectures in the examples and these were
the<00:06:12.080><c> examples</c><00:06:12.560><c> of</c><00:06:13.160><c> two</c><00:06:13.560><c> languages</c><00:06:14.080><c> that</c><00:06:14.199><c> are</c>

00:06:14.550 --> 00:06:14.560 align:start position:0%
the examples of two languages that are
 

00:06:14.560 --> 00:06:17.270 align:start position:0%
the examples of two languages that are
non<00:06:14.880><c> regular</c><00:06:15.599><c> so</c><00:06:16.000><c> I</c><00:06:16.160><c> hope</c><00:06:16.720><c> that</c><00:06:16.880><c> made</c><00:06:17.120><c> the</c>

00:06:17.270 --> 00:06:17.280 align:start position:0%
non regular so I hope that made the
 

00:06:17.280 --> 00:06:19.670 align:start position:0%
non regular so I hope that made the
concept<00:06:17.680><c> of</c><00:06:18.000><c> regular</c><00:06:18.400><c> languages</c><00:06:19.360><c> and</c><00:06:19.520><c> the</c>

00:06:19.670 --> 00:06:19.680 align:start position:0%
concept of regular languages and the
 

00:06:19.680 --> 00:06:21.950 align:start position:0%
concept of regular languages and the
languages<00:06:20.160><c> that</c><00:06:20.319><c> are</c><00:06:20.599><c> not</c><00:06:20.919><c> regular</c><00:06:21.479><c> clear</c><00:06:21.759><c> to</c>

00:06:21.950 --> 00:06:21.960 align:start position:0%
languages that are not regular clear to
 

00:06:21.960 --> 00:06:24.550 align:start position:0%
languages that are not regular clear to
us<00:06:22.599><c> so</c><00:06:22.919><c> thank</c><00:06:23.039><c> you</c><00:06:23.160><c> for</c><00:06:23.360><c> watching</c><00:06:23.960><c> and</c><00:06:24.280><c> see</c><00:06:24.479><c> you</c>

00:06:24.550 --> 00:06:24.560 align:start position:0%
us so thank you for watching and see you
 

00:06:24.560 --> 00:06:29.590 align:start position:0%
us so thank you for watching and see you
in<00:06:24.680><c> the</c><00:06:24.800><c> next</c><00:06:25.000><c> one</c>

00:06:29.590 --> 00:06:29.600 align:start position:0%
 
 

00:06:29.600 --> 00:06:38.699 align:start position:0%
 
[Music]


WEBVTT
Kind: captions
Language: en

00:00:05.400 --> 00:00:07.150 align:start position:0%
 
hello<00:00:05.680><c> everyone</c><00:00:06.440><c> welcome</c><00:00:06.720><c> to</c><00:00:06.839><c> the</c><00:00:06.960><c> next</c>

00:00:07.150 --> 00:00:07.160 align:start position:0%
hello everyone welcome to the next
 

00:00:07.160 --> 00:00:09.430 align:start position:0%
hello everyone welcome to the next
lecture<00:00:07.439><c> in</c><00:00:07.600><c> theory</c><00:00:07.879><c> of</c><00:00:08.120><c> computation</c><00:00:09.120><c> and</c><00:00:09.280><c> in</c>

00:00:09.430 --> 00:00:09.440 align:start position:0%
lecture in theory of computation and in
 

00:00:09.440 --> 00:00:10.830 align:start position:0%
lecture in theory of computation and in
this<00:00:09.639><c> lecture</c><00:00:09.960><c> we</c><00:00:10.080><c> will</c><00:00:10.240><c> be</c><00:00:10.360><c> seeing</c><00:00:10.639><c> an</c>

00:00:10.830 --> 00:00:10.840 align:start position:0%
this lecture we will be seeing an
 

00:00:10.840 --> 00:00:13.629 align:start position:0%
this lecture we will be seeing an
example<00:00:11.320><c> about</c><00:00:11.639><c> our</c><00:00:11.920><c> DFA</c><00:00:12.599><c> or</c><00:00:12.880><c> deterministic</c>

00:00:13.629 --> 00:00:13.639 align:start position:0%
example about our DFA or deterministic
 

00:00:13.639 --> 00:00:16.550 align:start position:0%
example about our DFA or deterministic
finite<00:00:14.080><c> automata</c><00:00:15.080><c> we</c><00:00:15.200><c> shall</c><00:00:15.400><c> be</c><00:00:15.599><c> seeing</c><00:00:16.400><c> how</c>

00:00:16.550 --> 00:00:16.560 align:start position:0%
finite automata we shall be seeing how
 

00:00:16.560 --> 00:00:19.349 align:start position:0%
finite automata we shall be seeing how
to<00:00:16.840><c> design</c><00:00:17.160><c> a</c><00:00:17.439><c> particular</c><00:00:18.199><c> DFA</c><00:00:18.960><c> in</c><00:00:19.160><c> this</c>

00:00:19.349 --> 00:00:19.359 align:start position:0%
to design a particular DFA in this
 

00:00:19.359 --> 00:00:22.150 align:start position:0%
to design a particular DFA in this
example<00:00:20.279><c> all</c><00:00:20.439><c> right</c><00:00:20.720><c> so</c><00:00:20.880><c> let's</c><00:00:21.119><c> get</c>

00:00:22.150 --> 00:00:22.160 align:start position:0%
example all right so let's get
 

00:00:22.160 --> 00:00:24.830 align:start position:0%
example all right so let's get
started<00:00:23.160><c> okay</c><00:00:23.400><c> so</c><00:00:23.599><c> we</c><00:00:23.720><c> have</c><00:00:23.840><c> an</c><00:00:24.080><c> example</c><00:00:24.560><c> here</c>

00:00:24.830 --> 00:00:24.840 align:start position:0%
started okay so we have an example here
 

00:00:24.840 --> 00:00:27.189 align:start position:0%
started okay so we have an example here
which<00:00:24.960><c> is</c><00:00:25.039><c> a</c><00:00:25.240><c> language</c><00:00:25.640><c> L1</c><00:00:26.439><c> which</c><00:00:26.560><c> is</c><00:00:26.679><c> a</c><00:00:26.840><c> set</c><00:00:27.039><c> of</c>

00:00:27.189 --> 00:00:27.199 align:start position:0%
which is a language L1 which is a set of
 

00:00:27.199 --> 00:00:30.029 align:start position:0%
which is a language L1 which is a set of
all<00:00:27.400><c> strings</c><00:00:27.920><c> that</c><00:00:28.080><c> starts</c><00:00:28.439><c> with</c><00:00:28.640><c> zero</c><00:00:29.400><c> L1</c><00:00:29.800><c> is</c>

00:00:30.029 --> 00:00:30.039 align:start position:0%
all strings that starts with zero L1 is
 

00:00:30.039 --> 00:00:31.830 align:start position:0%
all strings that starts with zero L1 is
a<00:00:30.160><c> language</c><00:00:30.599><c> which</c><00:00:30.720><c> is</c><00:00:30.840><c> a</c><00:00:30.960><c> set</c><00:00:31.160><c> of</c><00:00:31.279><c> all</c><00:00:31.439><c> strings</c>

00:00:31.830 --> 00:00:31.840 align:start position:0%
a language which is a set of all strings
 

00:00:31.840 --> 00:00:33.990 align:start position:0%
a language which is a set of all strings
that<00:00:32.000><c> starts</c><00:00:32.360><c> with</c><00:00:32.599><c> zero</c><00:00:33.399><c> and</c><00:00:33.520><c> we</c><00:00:33.640><c> need</c><00:00:33.800><c> to</c>

00:00:33.990 --> 00:00:34.000 align:start position:0%
that starts with zero and we need to
 

00:00:34.000 --> 00:00:36.430 align:start position:0%
that starts with zero and we need to
design<00:00:34.280><c> a</c><00:00:34.879><c> deterministic</c><00:00:35.559><c> finite</c><00:00:35.920><c> automata</c>

00:00:36.430 --> 00:00:36.440 align:start position:0%
design a deterministic finite automata
 

00:00:36.440 --> 00:00:40.190 align:start position:0%
design a deterministic finite automata
or<00:00:36.600><c> DFA</c><00:00:37.399><c> for</c><00:00:38.079><c> this</c><00:00:38.280><c> language</c><00:00:38.719><c> L1</c><00:00:39.719><c> so</c><00:00:39.879><c> let's</c><00:00:40.039><c> see</c>

00:00:40.190 --> 00:00:40.200 align:start position:0%
or DFA for this language L1 so let's see
 

00:00:40.200 --> 00:00:42.510 align:start position:0%
or DFA for this language L1 so let's see
how<00:00:40.360><c> we</c><00:00:40.480><c> can</c><00:00:40.640><c> do</c><00:00:40.840><c> that</c><00:00:41.680><c> but</c><00:00:41.840><c> before</c><00:00:42.079><c> starting</c>

00:00:42.510 --> 00:00:42.520 align:start position:0%
how we can do that but before starting
 

00:00:42.520 --> 00:00:43.670 align:start position:0%
how we can do that but before starting
that<00:00:42.760><c> let</c><00:00:42.879><c> us</c><00:00:43.000><c> see</c><00:00:43.200><c> what</c><00:00:43.320><c> will</c><00:00:43.440><c> be</c><00:00:43.559><c> the</c>

00:00:43.670 --> 00:00:43.680 align:start position:0%
that let us see what will be the
 

00:00:43.680 --> 00:00:46.389 align:start position:0%
that let us see what will be the
elements<00:00:44.039><c> in</c><00:00:44.239><c> this</c><00:00:44.440><c> set</c><00:00:45.440><c> now</c><00:00:45.920><c> this</c><00:00:46.039><c> is</c><00:00:46.120><c> a</c><00:00:46.239><c> set</c>

00:00:46.389 --> 00:00:46.399 align:start position:0%
elements in this set now this is a set
 

00:00:46.399 --> 00:00:48.069 align:start position:0%
elements in this set now this is a set
of<00:00:46.520><c> all</c><00:00:46.640><c> strings</c><00:00:47.000><c> that</c><00:00:47.160><c> starts</c><00:00:47.480><c> with</c><00:00:47.680><c> zero</c><00:00:47.960><c> the</c>

00:00:48.069 --> 00:00:48.079 align:start position:0%
of all strings that starts with zero the
 

00:00:48.079 --> 00:00:52.110 align:start position:0%
of all strings that starts with zero the
elements<00:00:48.399><c> in</c><00:00:48.559><c> this</c><00:00:48.719><c> set</c><00:00:48.920><c> would</c><00:00:49.079><c> be</c><00:00:49.320><c> like</c><00:00:49.680><c> 0</c><00:00:50.680><c> 0</c><00:00:51.120><c> 0</c>

00:00:52.110 --> 00:00:52.120 align:start position:0%
elements in this set would be like 0 0 0
 

00:00:52.120 --> 00:01:01.590 align:start position:0%
elements in this set would be like 0 0 0
0<00:00:52.960><c> 1</c><00:00:53.960><c> 0</c><00:00:54.320><c> 0</c><00:00:54.920><c> 0</c><00:00:55.920><c> 0</c><00:00:56.320><c> 1</c><00:00:56.680><c> 0</c><00:00:57.680><c> 0</c><00:00:58.079><c> 1</c><00:00:58.359><c> 1</c><00:00:59.359><c> 0</c><00:00:59.680><c> 0</c><00:00:59.960><c> 0</c><00:01:00.199><c> 0</c><00:01:00.559><c> 0</c><00:01:01.239><c> and</c><00:01:01.440><c> so</c>

00:01:01.590 --> 00:01:01.600 align:start position:0%
0 1 0 0 0 0 1 0 0 1 1 0 0 0 0 0 and so
 

00:01:01.600 --> 00:01:03.430 align:start position:0%
0 1 0 0 0 0 1 0 0 1 1 0 0 0 0 0 and so
on<00:01:02.000><c> this</c><00:01:02.079><c> is</c><00:01:02.280><c> actually</c><00:01:02.480><c> an</c><00:01:02.640><c> infinite</c><00:01:03.120><c> set</c>

00:01:03.430 --> 00:01:03.440 align:start position:0%
on this is actually an infinite set
 

00:01:03.440 --> 00:01:06.149 align:start position:0%
on this is actually an infinite set
because<00:01:04.040><c> any</c><00:01:04.280><c> string</c><00:01:04.600><c> that</c><00:01:04.760><c> starts</c><00:01:05.159><c> with</c><00:01:05.560><c> zero</c>

00:01:06.149 --> 00:01:06.159 align:start position:0%
because any string that starts with zero
 

00:01:06.159 --> 00:01:08.789 align:start position:0%
because any string that starts with zero
is<00:01:06.360><c> present</c><00:01:06.640><c> in</c><00:01:06.760><c> this</c><00:01:06.880><c> language</c><00:01:07.200><c> L</c><00:01:07.400><c> one</c><00:01:08.360><c> okay</c>

00:01:08.789 --> 00:01:08.799 align:start position:0%
is present in this language L one okay
 

00:01:08.799 --> 00:01:11.149 align:start position:0%
is present in this language L one okay
now<00:01:08.960><c> let's</c><00:01:09.119><c> see</c><00:01:09.320><c> how</c><00:01:09.479><c> we</c><00:01:09.600><c> can</c><00:01:09.759><c> design</c><00:01:10.159><c> the</c><00:01:10.640><c> DFA</c>

00:01:11.149 --> 00:01:11.159 align:start position:0%
now let's see how we can design the DFA
 

00:01:11.159 --> 00:01:15.190 align:start position:0%
now let's see how we can design the DFA
for<00:01:11.880><c> this</c><00:01:12.880><c> so</c><00:01:13.520><c> whenever</c><00:01:13.880><c> you</c><00:01:14.000><c> start</c><00:01:14.240><c> a</c><00:01:14.360><c> DFA</c><00:01:15.119><c> you</c>

00:01:15.190 --> 00:01:15.200 align:start position:0%
for this so whenever you start a DFA you
 

00:01:15.200 --> 00:01:17.630 align:start position:0%
for this so whenever you start a DFA you
should<00:01:15.479><c> always</c><00:01:15.720><c> start</c>

00:01:17.630 --> 00:01:17.640 align:start position:0%
should always start
 

00:01:17.640 --> 00:01:19.469 align:start position:0%
should always start
with<00:01:18.640><c> a</c>

00:01:19.469 --> 00:01:19.479 align:start position:0%
with a
 

00:01:19.479 --> 00:01:22.710 align:start position:0%
with a
state<00:01:20.479><c> which</c><00:01:20.680><c> is</c><00:01:20.920><c> my</c><00:01:21.280><c> initial</c><00:01:21.799><c> state</c><00:01:22.079><c> or</c><00:01:22.320><c> start</c>

00:01:22.710 --> 00:01:22.720 align:start position:0%
state which is my initial state or start
 

00:01:22.720 --> 00:01:24.789 align:start position:0%
state which is my initial state or start
state<00:01:23.600><c> so</c><00:01:23.799><c> I</c><00:01:23.960><c> already</c><00:01:24.240><c> told</c><00:01:24.439><c> you</c><00:01:24.560><c> in</c><00:01:24.640><c> the</c>

00:01:24.789 --> 00:01:24.799 align:start position:0%
state so I already told you in the
 

00:01:24.799 --> 00:01:26.670 align:start position:0%
state so I already told you in the
previous<00:01:25.400><c> lecture</c><00:01:25.840><c> that</c><00:01:26.040><c> whenever</c><00:01:26.360><c> you</c><00:01:26.479><c> see</c>

00:01:26.670 --> 00:01:26.680 align:start position:0%
previous lecture that whenever you see
 

00:01:26.680 --> 00:01:28.590 align:start position:0%
previous lecture that whenever you see
an<00:01:26.840><c> arrow</c><00:01:27.159><c> coming</c><00:01:27.439><c> from</c><00:01:27.680><c> nowhere</c><00:01:28.119><c> pointing</c><00:01:28.439><c> to</c>

00:01:28.590 --> 00:01:28.600 align:start position:0%
an arrow coming from nowhere pointing to
 

00:01:28.600 --> 00:01:30.789 align:start position:0%
an arrow coming from nowhere pointing to
a<00:01:28.759><c> state</c><00:01:29.400><c> that</c><00:01:29.560><c> shows</c><00:01:30.079><c> that</c><00:01:30.240><c> that</c><00:01:30.360><c> is</c><00:01:30.520><c> the</c>

00:01:30.789 --> 00:01:30.799 align:start position:0%
a state that shows that that is the
 

00:01:30.799 --> 00:01:33.870 align:start position:0%
a state that shows that that is the
starting<00:01:31.240><c> state</c><00:01:31.840><c> so</c><00:01:32.320><c> a</c><00:01:32.600><c> is</c><00:01:32.799><c> my</c><00:01:33.040><c> starting</c><00:01:33.520><c> state</c>

00:01:33.870 --> 00:01:33.880 align:start position:0%
starting state so a is my starting state
 

00:01:33.880 --> 00:01:38.469 align:start position:0%
starting state so a is my starting state
so<00:01:34.079><c> I'm</c><00:01:34.280><c> starting</c><00:01:34.680><c> with</c><00:01:35.200><c> a</c><00:01:36.200><c> now</c><00:01:37.119><c> if</c><00:01:37.360><c> I</c><00:01:38.119><c> get</c>

00:01:38.469 --> 00:01:38.479 align:start position:0%
so I'm starting with a now if I get
 

00:01:38.479 --> 00:01:41.630 align:start position:0%
so I'm starting with a now if I get
input<00:01:39.200><c> zero</c><00:01:40.200><c> in</c><00:01:40.399><c> a</c><00:01:40.680><c> what</c><00:01:40.799><c> will</c><00:01:41.000><c> happen</c><00:01:41.399><c> and</c><00:01:41.520><c> if</c>

00:01:41.630 --> 00:01:41.640 align:start position:0%
input zero in a what will happen and if
 

00:01:41.640 --> 00:01:44.270 align:start position:0%
input zero in a what will happen and if
I<00:01:41.799><c> get</c><00:01:41.960><c> input</c><00:01:42.320><c> one</c><00:01:42.840><c> in</c><00:01:43.040><c> a</c><00:01:43.320><c> what</c><00:01:43.439><c> will</c><00:01:43.640><c> happen</c>

00:01:44.270 --> 00:01:44.280 align:start position:0%
I get input one in a what will happen
 

00:01:44.280 --> 00:01:46.830 align:start position:0%
I get input one in a what will happen
let's<00:01:44.479><c> see</c><00:01:44.759><c> what</c><00:01:45.159><c> should</c><00:01:45.360><c> we</c><00:01:45.520><c> do</c><00:01:46.320><c> suppose</c><00:01:46.680><c> I</c>

00:01:46.830 --> 00:01:46.840 align:start position:0%
let's see what should we do suppose I
 

00:01:46.840 --> 00:01:50.749 align:start position:0%
let's see what should we do suppose I
get<00:01:47.079><c> input</c><00:01:47.520><c> zero</c><00:01:48.439><c> in</c><00:01:48.640><c> this</c><00:01:48.880><c> a</c><00:01:49.880><c> I</c><00:01:50.000><c> send</c><00:01:50.320><c> it</c><00:01:50.479><c> to</c>

00:01:50.749 --> 00:01:50.759 align:start position:0%
get input zero in this a I send it to
 

00:01:50.759 --> 00:01:54.830 align:start position:0%
get input zero in this a I send it to
another<00:01:51.640><c> state</c><00:01:52.640><c> which</c><00:01:52.840><c> I</c><00:01:53.000><c> call</c>

00:01:54.830 --> 00:01:54.840 align:start position:0%
another state which I call
 

00:01:54.840 --> 00:01:58.310 align:start position:0%
another state which I call
B<00:01:55.840><c> okay</c><00:01:56.560><c> and</c><00:01:56.719><c> I</c><00:01:56.920><c> put</c><00:01:57.159><c> a</c><00:01:57.320><c> double</c><00:01:57.640><c> circle</c><00:01:58.039><c> around</c>

00:01:58.310 --> 00:01:58.320 align:start position:0%
B okay and I put a double circle around
 

00:01:58.320 --> 00:02:00.109 align:start position:0%
B okay and I put a double circle around
this<00:01:58.560><c> B</c>

00:02:00.109 --> 00:02:00.119 align:start position:0%
this B
 

00:02:00.119 --> 00:02:01.429 align:start position:0%
this B
now<00:02:00.320><c> what</c><00:02:00.439><c> is</c><00:02:00.560><c> the</c><00:02:00.680><c> meaning</c><00:02:00.880><c> of</c><00:02:01.039><c> this</c><00:02:01.159><c> double</c>

00:02:01.429 --> 00:02:01.439 align:start position:0%
now what is the meaning of this double
 

00:02:01.439 --> 00:02:04.270 align:start position:0%
now what is the meaning of this double
circle<00:02:02.439><c> double</c><00:02:02.719><c> circle</c><00:02:03.079><c> means</c><00:02:03.719><c> this</c><00:02:03.840><c> is</c><00:02:04.039><c> the</c>

00:02:04.270 --> 00:02:04.280 align:start position:0%
circle double circle means this is the
 

00:02:04.280 --> 00:02:07.149 align:start position:0%
circle double circle means this is the
final<00:02:05.000><c> State</c><00:02:06.000><c> when</c><00:02:06.119><c> you</c><00:02:06.240><c> see</c><00:02:06.439><c> a</c><00:02:06.560><c> double</c><00:02:06.840><c> circle</c>

00:02:07.149 --> 00:02:07.159 align:start position:0%
final State when you see a double circle
 

00:02:07.159 --> 00:02:08.710 align:start position:0%
final State when you see a double circle
it<00:02:07.320><c> always</c><00:02:07.560><c> means</c><00:02:07.759><c> that</c><00:02:08.000><c> this</c><00:02:08.080><c> is</c><00:02:08.200><c> the</c><00:02:08.360><c> final</c>

00:02:08.710 --> 00:02:08.720 align:start position:0%
it always means that this is the final
 

00:02:08.720 --> 00:02:13.949 align:start position:0%
it always means that this is the final
State<00:02:09.640><c> now</c><00:02:10.640><c> when</c><00:02:10.840><c> I</c><00:02:11.480><c> get</c><00:02:11.879><c> give</c><00:02:12.120><c> input</c><00:02:12.680><c> zero</c><00:02:13.680><c> to</c>

00:02:13.949 --> 00:02:13.959 align:start position:0%
State now when I get give input zero to
 

00:02:13.959 --> 00:02:19.229 align:start position:0%
State now when I get give input zero to
a<00:02:14.560><c> it</c><00:02:14.760><c> goes</c><00:02:15.000><c> to</c><00:02:15.200><c> B</c><00:02:15.879><c> now</c><00:02:16.120><c> why</c><00:02:16.239><c> is</c><00:02:16.440><c> that</c><00:02:17.200><c> that</c><00:02:17.319><c> is</c>

00:02:19.229 --> 00:02:19.239 align:start position:0%
a it goes to B now why is that that is
 

00:02:19.239 --> 00:02:22.309 align:start position:0%
a it goes to B now why is that that is
because<00:02:20.239><c> I</c><00:02:20.319><c> am</c><00:02:20.640><c> to</c><00:02:20.879><c> design</c><00:02:21.200><c> a</c><00:02:21.560><c> DFA</c><00:02:22.120><c> that</c>

00:02:22.309 --> 00:02:22.319 align:start position:0%
because I am to design a DFA that
 

00:02:22.319 --> 00:02:24.509 align:start position:0%
because I am to design a DFA that
accepts<00:02:22.680><c> all</c><00:02:22.920><c> string</c><00:02:23.239><c> that</c><00:02:23.400><c> starts</c><00:02:23.720><c> with</c><00:02:23.959><c> zero</c>

00:02:24.509 --> 00:02:24.519 align:start position:0%
accepts all string that starts with zero
 

00:02:24.519 --> 00:02:26.550 align:start position:0%
accepts all string that starts with zero
so<00:02:24.760><c> a</c><00:02:24.959><c> is</c><00:02:25.120><c> my</c><00:02:25.280><c> starting</c><00:02:25.640><c> State</c><00:02:25.920><c> and</c><00:02:26.080><c> I'm</c><00:02:26.319><c> get</c>

00:02:26.550 --> 00:02:26.560 align:start position:0%
so a is my starting State and I'm get
 

00:02:26.560 --> 00:02:28.670 align:start position:0%
so a is my starting State and I'm get
I'm<00:02:26.720><c> getting</c><00:02:27.000><c> input</c><00:02:27.400><c> zero</c><00:02:27.760><c> that</c><00:02:27.840><c> means</c><00:02:28.360><c> zero</c>

00:02:28.670 --> 00:02:28.680 align:start position:0%
I'm getting input zero that means zero
 

00:02:28.680 --> 00:02:30.630 align:start position:0%
I'm getting input zero that means zero
is<00:02:28.800><c> the</c><00:02:29.000><c> first</c><00:02:29.280><c> digit</c><00:02:29.920><c> and</c><00:02:30.040><c> when</c><00:02:30.200><c> Zer</c><00:02:30.400><c> is</c><00:02:30.480><c> a</c>

00:02:30.630 --> 00:02:30.640 align:start position:0%
is the first digit and when Zer is a
 

00:02:30.640 --> 00:02:33.670 align:start position:0%
is the first digit and when Zer is a
first<00:02:30.840><c> digit</c><00:02:31.120><c> it</c><00:02:31.239><c> goes</c><00:02:31.480><c> to</c><00:02:31.680><c> b</c><00:02:32.239><c> b</c><00:02:32.800><c> which</c><00:02:32.920><c> is</c><00:02:33.120><c> the</c>

00:02:33.670 --> 00:02:33.680 align:start position:0%
first digit it goes to b b which is the
 

00:02:33.680 --> 00:02:35.910 align:start position:0%
first digit it goes to b b which is the
final<00:02:34.040><c> State</c><00:02:34.640><c> and</c><00:02:34.840><c> whenever</c><00:02:35.440><c> a</c><00:02:35.599><c> string</c>

00:02:35.910 --> 00:02:35.920 align:start position:0%
final State and whenever a string
 

00:02:35.920 --> 00:02:37.949 align:start position:0%
final State and whenever a string
reaches<00:02:36.319><c> the</c><00:02:36.480><c> final</c><00:02:36.800><c> state</c><00:02:37.200><c> that</c><00:02:37.360><c> means</c><00:02:37.720><c> that</c>

00:02:37.949 --> 00:02:37.959 align:start position:0%
reaches the final state that means that
 

00:02:37.959 --> 00:02:40.990 align:start position:0%
reaches the final state that means that
string<00:02:38.319><c> is</c><00:02:39.000><c> accepted</c><00:02:40.000><c> and</c><00:02:40.159><c> whenever</c><00:02:40.519><c> a</c><00:02:40.640><c> string</c>

00:02:40.990 --> 00:02:41.000 align:start position:0%
string is accepted and whenever a string
 

00:02:41.000 --> 00:02:43.229 align:start position:0%
string is accepted and whenever a string
does<00:02:41.200><c> not</c><00:02:41.440><c> reach</c><00:02:41.760><c> the</c><00:02:42.040><c> final</c><00:02:42.400><c> state</c><00:02:43.080><c> that</c>

00:02:43.229 --> 00:02:43.239 align:start position:0%
does not reach the final state that
 

00:02:43.239 --> 00:02:45.949 align:start position:0%
does not reach the final state that
means<00:02:43.560><c> it</c><00:02:43.720><c> is</c><00:02:44.000><c> rejected</c><00:02:44.920><c> so</c><00:02:45.239><c> whenever</c><00:02:45.680><c> I'm</c>

00:02:45.949 --> 00:02:45.959 align:start position:0%
means it is rejected so whenever I'm
 

00:02:45.959 --> 00:02:47.790 align:start position:0%
means it is rejected so whenever I'm
starting<00:02:46.400><c> with</c><00:02:46.599><c> zero</c><00:02:47.000><c> it</c><00:02:47.080><c> should</c><00:02:47.319><c> reach</c><00:02:47.599><c> the</c>

00:02:47.790 --> 00:02:47.800 align:start position:0%
starting with zero it should reach the
 

00:02:47.800 --> 00:02:49.110 align:start position:0%
starting with zero it should reach the
final<00:02:48.080><c> State</c><00:02:48.440><c> because</c><00:02:48.680><c> it</c><00:02:48.760><c> should</c><00:02:48.959><c> be</c>

00:02:49.110 --> 00:02:49.120 align:start position:0%
final State because it should be
 

00:02:49.120 --> 00:02:52.030 align:start position:0%
final State because it should be
accepted<00:02:50.040><c> why</c><00:02:50.519><c> because</c><00:02:50.760><c> I</c><00:02:50.879><c> am</c><00:02:51.000><c> to</c>

00:02:52.030 --> 00:02:52.040 align:start position:0%
accepted why because I am to
 

00:02:52.040 --> 00:02:55.110 align:start position:0%
accepted why because I am to
design<00:02:53.040><c> uh</c><00:02:53.239><c> a</c><00:02:53.360><c> DFA</c><00:02:53.879><c> for</c><00:02:54.319><c> all</c><00:02:54.599><c> strings</c><00:02:54.920><c> that</c>

00:02:55.110 --> 00:02:55.120 align:start position:0%
design uh a DFA for all strings that
 

00:02:55.120 --> 00:02:58.430 align:start position:0%
design uh a DFA for all strings that
starts<00:02:55.519><c> with</c><00:02:56.040><c> zero</c><00:02:57.040><c> okay</c><00:02:57.640><c> now</c><00:02:57.840><c> I</c><00:02:57.920><c> am</c><00:02:58.040><c> in</c><00:02:58.159><c> state</c>

00:02:58.430 --> 00:02:58.440 align:start position:0%
starts with zero okay now I am in state
 

00:02:58.440 --> 00:03:01.949 align:start position:0%
starts with zero okay now I am in state
B<00:02:59.040><c> and</c><00:02:59.239><c> in</c><00:02:59.440><c> state</c><00:02:59.920><c> after</c><00:03:00.120><c> reaching</c><00:03:00.400><c> State</c><00:03:00.760><c> B</c><00:03:01.760><c> in</c>

00:03:01.949 --> 00:03:01.959 align:start position:0%
B and in state after reaching State B in
 

00:03:01.959 --> 00:03:04.070 align:start position:0%
B and in state after reaching State B in
B<00:03:02.200><c> also</c><00:03:02.480><c> I</c><00:03:02.560><c> can</c><00:03:02.720><c> either</c><00:03:03.000><c> get</c><00:03:03.159><c> inputs</c><00:03:03.640><c> Zer</c><00:03:03.920><c> or</c>

00:03:04.070 --> 00:03:04.080 align:start position:0%
B also I can either get inputs Zer or
 

00:03:04.080 --> 00:03:05.949 align:start position:0%
B also I can either get inputs Zer or
one<00:03:04.360><c> so</c><00:03:04.560><c> what</c><00:03:04.680><c> will</c><00:03:04.879><c> happen</c><00:03:05.159><c> if</c><00:03:05.280><c> I</c><00:03:05.440><c> get</c><00:03:05.680><c> either</c>

00:03:05.949 --> 00:03:05.959 align:start position:0%
one so what will happen if I get either
 

00:03:05.959 --> 00:03:09.110 align:start position:0%
one so what will happen if I get either
Z<00:03:06.200><c> or</c><00:03:06.319><c> one</c><00:03:07.120><c> since</c><00:03:07.400><c> B</c><00:03:07.560><c> is</c><00:03:07.640><c> the</c><00:03:07.840><c> final</c>

00:03:09.110 --> 00:03:09.120 align:start position:0%
Z or one since B is the final
 

00:03:09.120 --> 00:03:13.070 align:start position:0%
Z or one since B is the final
State<00:03:10.120><c> I'll</c><00:03:10.319><c> give</c><00:03:10.440><c> a</c><00:03:10.599><c> self</c><00:03:10.920><c> Loop</c><00:03:11.319><c> here</c><00:03:12.280><c> and</c>

00:03:13.070 --> 00:03:13.080 align:start position:0%
State I'll give a self Loop here and
 

00:03:13.080 --> 00:03:16.309 align:start position:0%
State I'll give a self Loop here and
I'll<00:03:13.319><c> write</c><00:03:13.959><c> zero</c><00:03:14.799><c> or</c><00:03:15.120><c> one</c><00:03:15.640><c> so</c><00:03:15.920><c> what</c><00:03:16.000><c> does</c><00:03:16.200><c> this</c>

00:03:16.309 --> 00:03:16.319 align:start position:0%
I'll write zero or one so what does this
 

00:03:16.319 --> 00:03:18.430 align:start position:0%
I'll write zero or one so what does this
mean<00:03:16.599><c> this</c><00:03:16.760><c> means</c><00:03:17.120><c> that</c><00:03:17.760><c> after</c><00:03:17.959><c> reaching</c><00:03:18.280><c> this</c>

00:03:18.430 --> 00:03:18.440 align:start position:0%
mean this means that after reaching this
 

00:03:18.440 --> 00:03:20.430 align:start position:0%
mean this means that after reaching this
final<00:03:18.680><c> State</c><00:03:19.000><c> B</c><00:03:19.440><c> whatever</c><00:03:19.840><c> input</c><00:03:20.120><c> you</c><00:03:20.280><c> get</c>

00:03:20.430 --> 00:03:20.440 align:start position:0%
final State B whatever input you get
 

00:03:20.440 --> 00:03:22.789 align:start position:0%
final State B whatever input you get
after<00:03:20.680><c> that</c><00:03:20.879><c> whether</c><00:03:21.080><c> it</c><00:03:21.200><c> is</c><00:03:21.360><c> zero</c><00:03:21.720><c> or</c><00:03:21.920><c> one</c><00:03:22.599><c> it</c>

00:03:22.789 --> 00:03:22.799 align:start position:0%
after that whether it is zero or one it
 

00:03:22.799 --> 00:03:27.110 align:start position:0%
after that whether it is zero or one it
stays<00:03:23.239><c> in</c><00:03:24.200><c> the</c><00:03:24.440><c> final</c><00:03:24.760><c> State</c><00:03:25.040><c> B</c><00:03:25.720><c> itself</c><00:03:26.720><c> okay</c>

00:03:27.110 --> 00:03:27.120 align:start position:0%
stays in the final State B itself okay
 

00:03:27.120 --> 00:03:29.789 align:start position:0%
stays in the final State B itself okay
because<00:03:27.360><c> the</c><00:03:27.480><c> string</c><00:03:27.799><c> started</c><00:03:28.200><c> from</c><00:03:28.560><c> zero</c><00:03:29.560><c> and</c>

00:03:29.789 --> 00:03:29.799 align:start position:0%
because the string started from zero and
 

00:03:29.799 --> 00:03:30.990 align:start position:0%
because the string started from zero and
our<00:03:29.959><c> only</c><00:03:30.319><c> condition</c><00:03:30.519><c> is</c><00:03:30.599><c> that</c><00:03:30.760><c> it</c><00:03:30.840><c> should</c>

00:03:30.990 --> 00:03:31.000 align:start position:0%
our only condition is that it should
 

00:03:31.000 --> 00:03:32.949 align:start position:0%
our only condition is that it should
start<00:03:31.239><c> with</c><00:03:31.400><c> zero</c><00:03:31.720><c> so</c><00:03:31.840><c> it</c><00:03:31.959><c> starts</c><00:03:32.280><c> with</c><00:03:32.480><c> zero</c>

00:03:32.949 --> 00:03:32.959 align:start position:0%
start with zero so it starts with zero
 

00:03:32.959 --> 00:03:34.630 align:start position:0%
start with zero so it starts with zero
and<00:03:33.120><c> after</c><00:03:33.360><c> it</c><00:03:33.519><c> reach</c><00:03:33.760><c> the</c><00:03:33.879><c> final</c><00:03:34.280><c> reaches</c><00:03:34.519><c> the</c>

00:03:34.630 --> 00:03:34.640 align:start position:0%
and after it reach the final reaches the
 

00:03:34.640 --> 00:03:36.550 align:start position:0%
and after it reach the final reaches the
final<00:03:34.920><c> State</c><00:03:35.439><c> whether</c><00:03:35.640><c> it</c><00:03:35.760><c> is</c><00:03:35.879><c> zero</c><00:03:36.120><c> or</c><00:03:36.239><c> one</c><00:03:36.439><c> it</c>

00:03:36.550 --> 00:03:36.560 align:start position:0%
final State whether it is zero or one it
 

00:03:36.560 --> 00:03:38.670 align:start position:0%
final State whether it is zero or one it
doesn't<00:03:36.879><c> matter</c><00:03:37.439><c> it</c><00:03:37.560><c> stays</c><00:03:38.120><c> in</c><00:03:38.239><c> the</c><00:03:38.400><c> final</c>

00:03:38.670 --> 00:03:38.680 align:start position:0%
doesn't matter it stays in the final
 

00:03:38.680 --> 00:03:41.309 align:start position:0%
doesn't matter it stays in the final
State<00:03:38.959><c> and</c><00:03:39.120><c> that</c><00:03:39.239><c> string</c><00:03:39.560><c> will</c><00:03:39.720><c> be</c><00:03:40.319><c> accepted</c>

00:03:41.309 --> 00:03:41.319 align:start position:0%
State and that string will be accepted
 

00:03:41.319 --> 00:03:44.030 align:start position:0%
State and that string will be accepted
okay<00:03:41.640><c> I</c><00:03:41.760><c> hope</c><00:03:41.959><c> that</c><00:03:42.080><c> was</c><00:03:42.519><c> clear</c><00:03:43.519><c> and</c><00:03:43.680><c> now</c><00:03:43.879><c> is</c>

00:03:44.030 --> 00:03:44.040 align:start position:0%
okay I hope that was clear and now is
 

00:03:44.040 --> 00:03:46.630 align:start position:0%
okay I hope that was clear and now is
this<00:03:44.239><c> complete</c><00:03:45.080><c> no</c><00:03:45.360><c> this</c><00:03:45.519><c> DF</c><00:03:45.879><c> is</c><00:03:45.959><c> not</c><00:03:46.159><c> complete</c>

00:03:46.630 --> 00:03:46.640 align:start position:0%
this complete no this DF is not complete
 

00:03:46.640 --> 00:03:48.910 align:start position:0%
this complete no this DF is not complete
why<00:03:47.080><c> because</c><00:03:47.360><c> we</c><00:03:47.519><c> already</c><00:03:47.879><c> mentioned</c><00:03:48.760><c> what</c>

00:03:48.910 --> 00:03:48.920 align:start position:0%
why because we already mentioned what
 

00:03:48.920 --> 00:03:51.509 align:start position:0%
why because we already mentioned what
will<00:03:49.200><c> happen</c><00:03:49.680><c> if</c><00:03:49.920><c> a</c><00:03:50.159><c> gets</c><00:03:50.400><c> the</c><00:03:50.519><c> input</c><00:03:50.879><c> zero</c><00:03:51.360><c> but</c>

00:03:51.509 --> 00:03:51.519 align:start position:0%
will happen if a gets the input zero but
 

00:03:51.519 --> 00:03:54.789 align:start position:0%
will happen if a gets the input zero but
we<00:03:51.680><c> did</c><00:03:51.879><c> not</c><00:03:52.120><c> mention</c><00:03:53.040><c> what</c><00:03:53.200><c> will</c><00:03:53.439><c> happen</c><00:03:54.319><c> if</c><00:03:54.560><c> a</c>

00:03:54.789 --> 00:03:54.799 align:start position:0%
we did not mention what will happen if a
 

00:03:54.799 --> 00:03:58.949 align:start position:0%
we did not mention what will happen if a
gets<00:03:55.040><c> the</c><00:03:55.239><c> input</c><00:03:56.079><c> one</c><00:03:57.079><c> so</c><00:03:58.000><c> a</c><00:03:58.200><c> is</c><00:03:58.360><c> my</c><00:03:58.560><c> starting</c>

00:03:58.949 --> 00:03:58.959 align:start position:0%
gets the input one so a is my starting
 

00:03:58.959 --> 00:04:02.470 align:start position:0%
gets the input one so a is my starting
State<00:03:59.480><c> and</c><00:04:00.120><c> if</c><00:04:00.280><c> I</c><00:04:00.439><c> get</c><00:04:00.640><c> input</c><00:04:01.120><c> one</c><00:04:01.840><c> that</c><00:04:02.000><c> means</c>

00:04:02.470 --> 00:04:02.480 align:start position:0%
State and if I get input one that means
 

00:04:02.480 --> 00:04:04.750 align:start position:0%
State and if I get input one that means
one<00:04:02.720><c> is</c><00:04:02.879><c> the</c><00:04:03.040><c> first</c><00:04:03.280><c> digit</c><00:04:04.040><c> and</c><00:04:04.319><c> should</c><00:04:04.640><c> that</c>

00:04:04.750 --> 00:04:04.760 align:start position:0%
one is the first digit and should that
 

00:04:04.760 --> 00:04:06.789 align:start position:0%
one is the first digit and should that
be<00:04:04.959><c> accepted</c><00:04:05.319><c> or</c><00:04:05.519><c> not</c><00:04:05.920><c> no</c><00:04:06.159><c> it</c><00:04:06.280><c> should</c><00:04:06.439><c> not</c><00:04:06.640><c> be</c>

00:04:06.789 --> 00:04:06.799 align:start position:0%
be accepted or not no it should not be
 

00:04:06.799 --> 00:04:08.509 align:start position:0%
be accepted or not no it should not be
accepted<00:04:07.400><c> I</c><00:04:07.480><c> should</c><00:04:07.799><c> accept</c><00:04:08.079><c> only</c><00:04:08.360><c> those</c>

00:04:08.509 --> 00:04:08.519 align:start position:0%
accepted I should accept only those
 

00:04:08.519 --> 00:04:11.229 align:start position:0%
accepted I should accept only those
strings<00:04:08.840><c> which</c><00:04:09.040><c> start</c><00:04:09.360><c> with</c><00:04:10.079><c> zero</c><00:04:10.799><c> so</c><00:04:10.959><c> if</c><00:04:11.079><c> it</c>

00:04:11.229 --> 00:04:11.239 align:start position:0%
strings which start with zero so if it
 

00:04:11.239 --> 00:04:13.910 align:start position:0%
strings which start with zero so if it
starts<00:04:11.560><c> with</c><00:04:11.720><c> one</c><00:04:12.000><c> what</c><00:04:12.159><c> will</c><00:04:12.720><c> happen</c><00:04:13.720><c> I'll</c>

00:04:13.910 --> 00:04:13.920 align:start position:0%
starts with one what will happen I'll
 

00:04:13.920 --> 00:04:15.590 align:start position:0%
starts with one what will happen I'll
send<00:04:14.200><c> it</c><00:04:14.319><c> to</c><00:04:14.599><c> another</c>

00:04:15.590 --> 00:04:15.600 align:start position:0%
send it to another
 

00:04:15.600 --> 00:04:19.349 align:start position:0%
send it to another
state<00:04:16.600><c> which</c><00:04:16.799><c> I</c><00:04:17.079><c> call</c><00:04:17.720><c> State</c>

00:04:19.349 --> 00:04:19.359 align:start position:0%
state which I call State
 

00:04:19.359 --> 00:04:22.230 align:start position:0%
state which I call State
C<00:04:20.359><c> okay</c><00:04:20.680><c> I</c><00:04:20.840><c> send</c><00:04:21.079><c> it</c><00:04:21.199><c> to</c><00:04:21.400><c> another</c><00:04:21.680><c> state</c><00:04:21.959><c> called</c>

00:04:22.230 --> 00:04:22.240 align:start position:0%
C okay I send it to another state called
 

00:04:22.240 --> 00:04:24.030 align:start position:0%
C okay I send it to another state called
State

00:04:24.030 --> 00:04:24.040 align:start position:0%
State
 

00:04:24.040 --> 00:04:28.749 align:start position:0%
State
C<00:04:25.040><c> when</c><00:04:25.520><c> the</c><00:04:25.680><c> input</c><00:04:26.360><c> is</c><00:04:27.360><c> one</c><00:04:28.160><c> when</c><00:04:28.320><c> the</c><00:04:28.440><c> input</c>

00:04:28.749 --> 00:04:28.759 align:start position:0%
C when the input is one when the input
 

00:04:28.759 --> 00:04:30.550 align:start position:0%
C when the input is one when the input
is<00:04:28.919><c> one</c><00:04:29.160><c> it</c><00:04:29.280><c> goes</c><00:04:29.479><c> to</c><00:04:29.759><c> State</c>

00:04:30.550 --> 00:04:30.560 align:start position:0%
is one it goes to State
 

00:04:30.560 --> 00:04:32.310 align:start position:0%
is one it goes to State
C

00:04:32.310 --> 00:04:32.320 align:start position:0%
C
 

00:04:32.320 --> 00:04:35.350 align:start position:0%
C
and<00:04:33.320><c> in</c><00:04:33.520><c> state</c><00:04:33.800><c> C</c><00:04:34.199><c> after</c><00:04:34.440><c> reaching</c><00:04:34.759><c> State</c><00:04:35.000><c> C</c>

00:04:35.350 --> 00:04:35.360 align:start position:0%
and in state C after reaching State C
 

00:04:35.360 --> 00:04:38.629 align:start position:0%
and in state C after reaching State C
whatever<00:04:35.759><c> input</c><00:04:36.080><c> I</c><00:04:36.199><c> get</c><00:04:36.360><c> in</c><00:04:36.560><c> state</c>

00:04:38.629 --> 00:04:38.639 align:start position:0%
whatever input I get in state
 

00:04:38.639 --> 00:04:43.790 align:start position:0%
whatever input I get in state
C<00:04:39.639><c> it</c><00:04:39.880><c> stays</c><00:04:40.240><c> in</c><00:04:40.840><c> state</c><00:04:41.520><c> C</c><00:04:42.520><c> itself</c><00:04:43.440><c> whether</c><00:04:43.680><c> it</c>

00:04:43.790 --> 00:04:43.800 align:start position:0%
C it stays in state C itself whether it
 

00:04:43.800 --> 00:04:47.029 align:start position:0%
C it stays in state C itself whether it
is<00:04:44.280><c> zero</c><00:04:45.280><c> or</c>

00:04:47.029 --> 00:04:47.039 align:start position:0%
is zero or
 

00:04:47.039 --> 00:04:52.469 align:start position:0%
is zero or
one<00:04:48.240><c> okay</c><00:04:49.520><c> so</c><00:04:50.520><c> if</c><00:04:50.800><c> I</c><00:04:51.160><c> if</c><00:04:51.280><c> a</c><00:04:51.440><c> string</c><00:04:51.720><c> starts</c><00:04:52.120><c> with</c>

00:04:52.469 --> 00:04:52.479 align:start position:0%
one okay so if I if a string starts with
 

00:04:52.479 --> 00:04:54.670 align:start position:0%
one okay so if I if a string starts with
one<00:04:53.479><c> this</c><00:04:53.639><c> is</c><00:04:53.800><c> my</c><00:04:53.960><c> starting</c><00:04:54.240><c> state</c><00:04:54.479><c> if</c><00:04:54.600><c> it</c>

00:04:54.670 --> 00:04:54.680 align:start position:0%
one this is my starting state if it
 

00:04:54.680 --> 00:04:57.189 align:start position:0%
one this is my starting state if it
starts<00:04:54.960><c> with</c><00:04:55.120><c> one</c><00:04:55.280><c> it</c><00:04:55.400><c> goes</c><00:04:55.600><c> to</c><00:04:55.759><c> State</c><00:04:56.000><c> C</c><00:04:56.880><c> and</c>

00:04:57.189 --> 00:04:57.199 align:start position:0%
starts with one it goes to State C and
 

00:04:57.199 --> 00:04:58.749 align:start position:0%
starts with one it goes to State C and
after<00:04:57.440><c> reaching</c><00:04:57.759><c> State</c><00:04:57.960><c> C</c><00:04:58.240><c> whether</c><00:04:58.440><c> it</c><00:04:58.560><c> is</c>

00:04:58.749 --> 00:04:58.759 align:start position:0%
after reaching State C whether it is
 

00:04:58.759 --> 00:05:00.550 align:start position:0%
after reaching State C whether it is
zero<00:04:59.080><c> or</c><00:04:59.280><c> one</c>

00:05:00.550 --> 00:05:00.560 align:start position:0%
zero or one
 

00:05:00.560 --> 00:05:02.230 align:start position:0%
zero or one
after<00:05:00.840><c> you</c><00:05:01.080><c> whether</c><00:05:01.280><c> you</c><00:05:01.400><c> get</c><00:05:01.560><c> zero</c><00:05:01.759><c> or</c><00:05:01.919><c> one</c><00:05:02.120><c> it</c>

00:05:02.230 --> 00:05:02.240 align:start position:0%
after you whether you get zero or one it
 

00:05:02.240 --> 00:05:05.629 align:start position:0%
after you whether you get zero or one it
stays<00:05:02.560><c> in</c><00:05:02.720><c> state</c><00:05:02.960><c> C</c><00:05:03.240><c> itself</c><00:05:03.759><c> and</c><00:05:04.320><c> it</c><00:05:04.520><c> cannot</c><00:05:05.280><c> go</c>

00:05:05.629 --> 00:05:05.639 align:start position:0%
stays in state C itself and it cannot go
 

00:05:05.639 --> 00:05:09.230 align:start position:0%
stays in state C itself and it cannot go
back<00:05:05.880><c> to</c><00:05:06.440><c> this</c><00:05:06.680><c> final</c><00:05:07.080><c> State</c><00:05:07.840><c> anymore</c><00:05:08.840><c> okay</c><00:05:09.039><c> it</c>

00:05:09.230 --> 00:05:09.240 align:start position:0%
back to this final State anymore okay it
 

00:05:09.240 --> 00:05:11.870 align:start position:0%
back to this final State anymore okay it
cannot<00:05:09.560><c> go</c><00:05:09.720><c> to</c><00:05:09.919><c> this</c><00:05:10.120><c> final</c><00:05:10.440><c> State</c><00:05:10.720><c> anymore</c><00:05:11.520><c> so</c>

00:05:11.870 --> 00:05:11.880 align:start position:0%
cannot go to this final State anymore so
 

00:05:11.880 --> 00:05:16.510 align:start position:0%
cannot go to this final State anymore so
this<00:05:12.120><c> kind</c><00:05:12.280><c> of</c><00:05:12.560><c> state</c><00:05:13.080><c> is</c><00:05:13.360><c> known</c><00:05:14.039><c> as</c><00:05:15.039><c> de</c>

00:05:16.510 --> 00:05:16.520 align:start position:0%
this kind of state is known as de
 

00:05:16.520 --> 00:05:19.029 align:start position:0%
this kind of state is known as de
State<00:05:17.520><c> dead</c>

00:05:19.029 --> 00:05:19.039 align:start position:0%
State dead
 

00:05:19.039 --> 00:05:20.909 align:start position:0%
State dead
state

00:05:20.909 --> 00:05:20.919 align:start position:0%
state
 

00:05:20.919 --> 00:05:24.430 align:start position:0%
state
or<00:05:21.919><c> it's</c><00:05:22.120><c> also</c><00:05:22.319><c> known</c><00:05:22.560><c> as</c><00:05:22.720><c> trap</c>

00:05:24.430 --> 00:05:24.440 align:start position:0%
or it's also known as trap
 

00:05:24.440 --> 00:05:26.790 align:start position:0%
or it's also known as trap
State<00:05:25.440><c> trap</c>

00:05:26.790 --> 00:05:26.800 align:start position:0%
State trap
 

00:05:26.800 --> 00:05:28.990 align:start position:0%
State trap
State<00:05:27.800><c> why</c><00:05:27.919><c> is</c><00:05:28.039><c> it</c><00:05:28.160><c> known</c><00:05:28.319><c> as</c><00:05:28.479><c> de</c><00:05:28.639><c> state</c><00:05:28.840><c> or</c>

00:05:28.990 --> 00:05:29.000 align:start position:0%
State why is it known as de state or
 

00:05:29.000 --> 00:05:31.710 align:start position:0%
State why is it known as de state or
trap<00:05:29.240><c> state</c><00:05:29.759><c> because</c><00:05:30.759><c> once</c><00:05:30.919><c> you</c><00:05:31.120><c> reach</c><00:05:31.400><c> here</c>

00:05:31.710 --> 00:05:31.720 align:start position:0%
trap state because once you reach here
 

00:05:31.720 --> 00:05:33.469 align:start position:0%
trap state because once you reach here
it<00:05:31.880><c> it</c><00:05:32.000><c> is</c><00:05:32.240><c> trapped</c><00:05:32.680><c> over</c><00:05:32.880><c> here</c><00:05:33.039><c> it</c><00:05:33.160><c> cannot</c>

00:05:33.469 --> 00:05:33.479 align:start position:0%
it it is trapped over here it cannot
 

00:05:33.479 --> 00:05:36.749 align:start position:0%
it it is trapped over here it cannot
reach<00:05:33.680><c> the</c><00:05:33.840><c> final</c><00:05:34.400><c> State</c><00:05:34.759><c> anymore</c><00:05:35.240><c> which</c><00:05:35.360><c> is</c><00:05:35.759><c> B</c>

00:05:36.749 --> 00:05:36.759 align:start position:0%
reach the final State anymore which is B
 

00:05:36.759 --> 00:05:38.469 align:start position:0%
reach the final State anymore which is B
okay<00:05:36.919><c> and</c><00:05:37.039><c> when</c><00:05:37.199><c> a</c><00:05:37.319><c> string</c><00:05:37.600><c> cannot</c><00:05:37.880><c> reach</c><00:05:38.080><c> it</c>

00:05:38.469 --> 00:05:38.479 align:start position:0%
okay and when a string cannot reach it
 

00:05:38.479 --> 00:05:41.550 align:start position:0%
okay and when a string cannot reach it
final<00:05:38.759><c> state</c><00:05:39.080><c> that</c><00:05:39.240><c> string</c><00:05:39.520><c> will</c><00:05:39.680><c> be</c><00:05:40.560><c> rejected</c>

00:05:41.550 --> 00:05:41.560 align:start position:0%
final state that string will be rejected
 

00:05:41.560 --> 00:05:45.029 align:start position:0%
final state that string will be rejected
okay<00:05:42.199><c> so</c><00:05:43.080><c> now</c><00:05:43.280><c> my</c><00:05:43.400><c> DF</c><00:05:43.759><c> is</c><00:05:43.960><c> complete</c><00:05:44.680><c> because</c><00:05:45.000><c> I</c>

00:05:45.029 --> 00:05:45.039 align:start position:0%
okay so now my DF is complete because I
 

00:05:45.039 --> 00:05:46.790 align:start position:0%
okay so now my DF is complete because I
have<00:05:45.199><c> already</c><00:05:45.440><c> mentioned</c><00:05:45.919><c> in</c><00:05:46.080><c> a</c><00:05:46.360><c> if</c><00:05:46.440><c> I</c><00:05:46.600><c> get</c>

00:05:46.790 --> 00:05:46.800 align:start position:0%
have already mentioned in a if I get
 

00:05:46.800 --> 00:05:49.550 align:start position:0%
have already mentioned in a if I get
zero<00:05:47.039><c> it</c><00:05:47.160><c> goes</c><00:05:47.319><c> to</c><00:05:47.479><c> B</c><00:05:47.919><c> it</c><00:05:48.160><c> gets</c><00:05:48.440><c> one</c><00:05:49.000><c> it</c><00:05:49.199><c> goes</c><00:05:49.400><c> to</c>

00:05:49.550 --> 00:05:49.560 align:start position:0%
zero it goes to B it gets one it goes to
 

00:05:49.560 --> 00:05:51.749 align:start position:0%
zero it goes to B it gets one it goes to
C<00:05:49.840><c> it's</c><00:05:50.039><c> complete</c><00:05:50.639><c> and</c><00:05:50.800><c> in</c><00:05:50.960><c> B</c><00:05:51.319><c> whether</c><00:05:51.520><c> it</c><00:05:51.600><c> is</c>

00:05:51.749 --> 00:05:51.759 align:start position:0%
C it's complete and in B whether it is
 

00:05:51.759 --> 00:05:53.749 align:start position:0%
C it's complete and in B whether it is
zero<00:05:51.960><c> or</c><00:05:52.080><c> one</c><00:05:52.240><c> it</c><00:05:52.360><c> stays</c><00:05:52.600><c> in</c><00:05:52.759><c> B</c><00:05:52.919><c> itself</c><00:05:53.479><c> and</c><00:05:53.600><c> in</c>

00:05:53.749 --> 00:05:53.759 align:start position:0%
zero or one it stays in B itself and in
 

00:05:53.759 --> 00:05:55.469 align:start position:0%
zero or one it stays in B itself and in
C<00:05:54.039><c> whether</c><00:05:54.240><c> it</c><00:05:54.319><c> is</c><00:05:54.440><c> zero</c><00:05:54.639><c> or</c><00:05:54.800><c> one</c><00:05:55.000><c> it</c><00:05:55.120><c> stays</c><00:05:55.360><c> in</c>

00:05:55.469 --> 00:05:55.479 align:start position:0%
C whether it is zero or one it stays in
 

00:05:55.479 --> 00:05:58.350 align:start position:0%
C whether it is zero or one it stays in
C<00:05:55.720><c> itself</c><00:05:56.360><c> now</c><00:05:56.560><c> my</c><00:05:56.720><c> DFA</c><00:05:57.160><c> is</c><00:05:57.360><c> complete</c><00:05:58.120><c> now</c><00:05:58.280><c> I</c>

00:05:58.350 --> 00:05:58.360 align:start position:0%
C itself now my DFA is complete now I
 

00:05:58.360 --> 00:06:00.749 align:start position:0%
C itself now my DFA is complete now I
have<00:05:58.520><c> designed</c><00:05:58.840><c> the</c><00:05:58.960><c> DFA</c><00:05:59.880><c> for</c><00:06:00.120><c> the</c><00:06:00.280><c> set</c><00:06:00.440><c> of</c><00:06:00.560><c> all</c>

00:06:00.749 --> 00:06:00.759 align:start position:0%
have designed the DFA for the set of all
 

00:06:00.759 --> 00:06:02.550 align:start position:0%
have designed the DFA for the set of all
strings<00:06:01.080><c> that</c><00:06:01.240><c> starts</c><00:06:01.560><c> with</c>

00:06:02.550 --> 00:06:02.560 align:start position:0%
strings that starts with
 

00:06:02.560 --> 00:06:05.029 align:start position:0%
strings that starts with
zero<00:06:03.560><c> okay</c><00:06:03.919><c> now</c><00:06:04.080><c> let</c><00:06:04.199><c> us</c><00:06:04.400><c> check</c><00:06:04.600><c> if</c><00:06:04.759><c> this</c><00:06:04.880><c> is</c>

00:06:05.029 --> 00:06:05.039 align:start position:0%
zero okay now let us check if this is
 

00:06:05.039 --> 00:06:07.909 align:start position:0%
zero okay now let us check if this is
correct<00:06:05.600><c> let</c><00:06:05.720><c> us</c><00:06:05.919><c> take</c><00:06:06.080><c> a</c><00:06:06.240><c> few</c><00:06:06.960><c> two</c><00:06:07.360><c> examples</c>

00:06:07.909 --> 00:06:07.919 align:start position:0%
correct let us take a few two examples
 

00:06:07.919 --> 00:06:10.870 align:start position:0%
correct let us take a few two examples
to<00:06:08.080><c> see</c><00:06:08.560><c> if</c><00:06:08.759><c> this</c><00:06:08.840><c> is</c><00:06:09.039><c> working</c><00:06:10.039><c> so</c><00:06:10.280><c> in</c><00:06:10.400><c> my</c><00:06:10.599><c> first</c>

00:06:10.870 --> 00:06:10.880 align:start position:0%
to see if this is working so in my first
 

00:06:10.880 --> 00:06:13.670 align:start position:0%
to see if this is working so in my first
example<00:06:11.800><c> let</c><00:06:11.919><c> me</c><00:06:12.120><c> take</c><00:06:12.280><c> an</c><00:06:12.479><c> example</c><00:06:13.319><c> I</c><00:06:13.400><c> want</c><00:06:13.520><c> to</c>

00:06:13.670 --> 00:06:13.680 align:start position:0%
example let me take an example I want to
 

00:06:13.680 --> 00:06:15.589 align:start position:0%
example let me take an example I want to
check<00:06:13.919><c> the</c><00:06:14.039><c> string</c>

00:06:15.589 --> 00:06:15.599 align:start position:0%
check the string
 

00:06:15.599 --> 00:06:18.510 align:start position:0%
check the string
01<00:06:16.599><c> okay</c><00:06:17.280><c> so</c><00:06:17.520><c> I'm</c><00:06:17.680><c> going</c><00:06:17.840><c> to</c><00:06:17.960><c> check</c><00:06:18.160><c> for</c><00:06:18.360><c> the</c>

00:06:18.510 --> 00:06:18.520 align:start position:0%
01 okay so I'm going to check for the
 

00:06:18.520 --> 00:06:21.390 align:start position:0%
01 okay so I'm going to check for the
string<00:06:19.160><c> 001</c><00:06:20.160><c> so</c><00:06:20.400><c> it</c><00:06:20.520><c> always</c><00:06:20.759><c> starts</c><00:06:21.039><c> from</c><00:06:21.240><c> my</c>

00:06:21.390 --> 00:06:21.400 align:start position:0%
string 001 so it always starts from my
 

00:06:21.400 --> 00:06:26.430 align:start position:0%
string 001 so it always starts from my
initial<00:06:21.800><c> State</c><00:06:22.599><c> my</c><00:06:22.800><c> initial</c>

00:06:26.430 --> 00:06:26.440 align:start position:0%
 
 

00:06:26.440 --> 00:06:30.830 align:start position:0%
 
State<00:06:27.440><c> initial</c><00:06:28.160><c> state</c><00:06:29.160><c> which</c><00:06:29.319><c> is</c><00:06:29.680><c> a</c><00:06:30.319><c> I</c><00:06:30.479><c> start</c>

00:06:30.830 --> 00:06:30.840 align:start position:0%
State initial state which is a I start
 

00:06:30.840 --> 00:06:33.550 align:start position:0%
State initial state which is a I start
from<00:06:31.120><c> State</c><00:06:31.840><c> a</c><00:06:32.840><c> right</c><00:06:33.000><c> because</c><00:06:33.199><c> a</c><00:06:33.360><c> is</c><00:06:33.440><c> my</c>

00:06:33.550 --> 00:06:33.560 align:start position:0%
from State a right because a is my
 

00:06:33.560 --> 00:06:35.990 align:start position:0%
from State a right because a is my
initial<00:06:33.919><c> State</c><00:06:34.440><c> and</c><00:06:34.599><c> I</c><00:06:34.759><c> get</c><00:06:35.000><c> input</c><00:06:35.680><c> I</c><00:06:35.800><c> give</c>

00:06:35.990 --> 00:06:36.000 align:start position:0%
initial State and I get input I give
 

00:06:36.000 --> 00:06:38.189 align:start position:0%
initial State and I get input I give
input<00:06:36.360><c> zero</c><00:06:36.800><c> on</c><00:06:37.039><c> getting</c><00:06:37.280><c> input</c><00:06:37.720><c> zero</c><00:06:38.039><c> what</c>

00:06:38.189 --> 00:06:38.199 align:start position:0%
input zero on getting input zero what
 

00:06:38.199 --> 00:06:44.749 align:start position:0%
input zero on getting input zero what
happens<00:06:38.960><c> a</c><00:06:39.240><c> goes</c><00:06:39.440><c> to</c><00:06:39.960><c> B</c><00:06:40.960><c> A</c><00:06:41.240><c> goes</c><00:06:41.960><c> to</c><00:06:43.440><c> B</c><00:06:44.440><c> and</c><00:06:44.599><c> the</c>

00:06:44.749 --> 00:06:44.759 align:start position:0%
happens a goes to B A goes to B and the
 

00:06:44.759 --> 00:06:47.670 align:start position:0%
happens a goes to B A goes to B and the
next<00:06:45.080><c> input</c><00:06:45.400><c> is</c><00:06:45.880><c> zero</c>

00:06:47.670 --> 00:06:47.680 align:start position:0%
next input is zero
 

00:06:47.680 --> 00:06:51.070 align:start position:0%
next input is zero
again<00:06:48.680><c> so</c><00:06:49.240><c> I</c><00:06:49.319><c> am</c><00:06:49.520><c> right</c><00:06:49.680><c> now</c><00:06:49.840><c> in</c><00:06:49.960><c> state</c><00:06:50.280><c> B</c><00:06:50.680><c> right</c>

00:06:51.070 --> 00:06:51.080 align:start position:0%
again so I am right now in state B right
 

00:06:51.080 --> 00:06:53.550 align:start position:0%
again so I am right now in state B right
and<00:06:51.199><c> if</c><00:06:51.280><c> I</c><00:06:51.440><c> get</c><00:06:51.599><c> input</c><00:06:51.919><c> zero</c><00:06:52.199><c> what</c><00:06:52.319><c> happens</c><00:06:53.199><c> B</c>

00:06:53.550 --> 00:06:53.560 align:start position:0%
and if I get input zero what happens B
 

00:06:53.560 --> 00:06:57.909 align:start position:0%
and if I get input zero what happens B
it<00:06:53.680><c> stays</c><00:06:53.919><c> in</c><00:06:54.080><c> B</c><00:06:54.560><c> itself</c><00:06:55.560><c> it</c><00:06:55.919><c> stays</c><00:06:56.639><c> in</c><00:06:57.639><c> B</c>

00:06:57.909 --> 00:06:57.919 align:start position:0%
it stays in B itself it stays in B
 

00:06:57.919 --> 00:07:00.790 align:start position:0%
it stays in B itself it stays in B
itself<00:06:58.919><c> and</c><00:06:59.080><c> then</c><00:06:59.199><c> the</c><00:06:59.319><c> next</c><00:06:59.720><c> one</c><00:06:59.879><c> is</c><00:07:00.400><c> the</c><00:07:00.560><c> next</c>

00:07:00.790 --> 00:07:00.800 align:start position:0%
itself and then the next one is the next
 

00:07:00.800 --> 00:07:02.350 align:start position:0%
itself and then the next one is the next
input<00:07:01.120><c> is</c>

00:07:02.350 --> 00:07:02.360 align:start position:0%
input is
 

00:07:02.360 --> 00:07:06.029 align:start position:0%
input is
one<00:07:03.360><c> so</c><00:07:03.599><c> what</c><00:07:03.720><c> will</c><00:07:04.080><c> happen</c><00:07:05.080><c> I'm</c><00:07:05.280><c> in</c><00:07:05.479><c> state</c><00:07:05.759><c> B</c>

00:07:06.029 --> 00:07:06.039 align:start position:0%
one so what will happen I'm in state B
 

00:07:06.039 --> 00:07:08.230 align:start position:0%
one so what will happen I'm in state B
and<00:07:06.160><c> if</c><00:07:06.280><c> I</c><00:07:06.400><c> get</c><00:07:06.560><c> input</c><00:07:06.879><c> one</c><00:07:07.160><c> what</c><00:07:07.280><c> happens</c><00:07:08.039><c> it</c>

00:07:08.230 --> 00:07:08.240 align:start position:0%
and if I get input one what happens it
 

00:07:08.240 --> 00:07:10.909 align:start position:0%
and if I get input one what happens it
still<00:07:08.440><c> stays</c><00:07:08.759><c> in</c><00:07:09.039><c> state</c>

00:07:10.909 --> 00:07:10.919 align:start position:0%
still stays in state
 

00:07:10.919 --> 00:07:15.749 align:start position:0%
still stays in state
B<00:07:11.919><c> right</c><00:07:12.720><c> and</c><00:07:13.720><c> here</c><00:07:14.720><c> I</c><00:07:14.879><c> reach</c><00:07:15.120><c> the</c><00:07:15.199><c> end</c><00:07:15.360><c> of</c><00:07:15.560><c> the</c>

00:07:15.749 --> 00:07:15.759 align:start position:0%
B right and here I reach the end of the
 

00:07:15.759 --> 00:07:17.990 align:start position:0%
B right and here I reach the end of the
string<00:07:16.759><c> and</c><00:07:16.919><c> at</c><00:07:17.039><c> the</c><00:07:17.160><c> end</c><00:07:17.319><c> of</c><00:07:17.440><c> the</c><00:07:17.560><c> string</c><00:07:17.879><c> what</c>

00:07:17.990 --> 00:07:18.000 align:start position:0%
string and at the end of the string what
 

00:07:18.000 --> 00:07:21.390 align:start position:0%
string and at the end of the string what
is<00:07:18.120><c> my</c><00:07:18.360><c> position</c><00:07:18.879><c> I</c><00:07:18.960><c> am</c><00:07:19.120><c> in</c><00:07:19.280><c> B</c><00:07:19.960><c> I'm</c><00:07:20.160><c> in</c><00:07:20.360><c> B</c><00:07:20.840><c> and</c><00:07:21.039><c> B</c>

00:07:21.390 --> 00:07:21.400 align:start position:0%
is my position I am in B I'm in B and B
 

00:07:21.400 --> 00:07:23.309 align:start position:0%
is my position I am in B I'm in B and B
is<00:07:21.560><c> it</c><00:07:21.759><c> the</c><00:07:21.919><c> final</c><00:07:22.240><c> State</c><00:07:22.759><c> yes</c><00:07:22.960><c> it</c><00:07:23.080><c> is</c><00:07:23.199><c> the</c>

00:07:23.309 --> 00:07:23.319 align:start position:0%
is it the final State yes it is the
 

00:07:23.319 --> 00:07:27.390 align:start position:0%
is it the final State yes it is the
final<00:07:23.680><c> State</c><00:07:24.360><c> B</c><00:07:24.720><c> is</c>

00:07:27.390 --> 00:07:27.400 align:start position:0%
 
 

00:07:27.400 --> 00:07:31.070 align:start position:0%
 
the<00:07:28.400><c> final</c>

00:07:31.070 --> 00:07:31.080 align:start position:0%
the final
 

00:07:31.080 --> 00:07:34.670 align:start position:0%
the final
state<00:07:32.080><c> right</c><00:07:32.280><c> so</c><00:07:32.560><c> since</c><00:07:32.840><c> B</c><00:07:33.080><c> is</c><00:07:33.199><c> the</c><00:07:33.360><c> final</c>

00:07:34.670 --> 00:07:34.680 align:start position:0%
state right so since B is the final
 

00:07:34.680 --> 00:07:38.029 align:start position:0%
state right so since B is the final
State<00:07:35.680><c> this</c><00:07:35.840><c> string</c><00:07:36.120><c> should</c><00:07:36.360><c> be</c><00:07:36.919><c> accepted</c><00:07:37.680><c> why</c>

00:07:38.029 --> 00:07:38.039 align:start position:0%
State this string should be accepted why
 

00:07:38.039 --> 00:07:39.469 align:start position:0%
State this string should be accepted why
it<00:07:38.160><c> could</c><00:07:38.360><c> start</c><00:07:38.599><c> from</c><00:07:38.759><c> the</c><00:07:38.879><c> initial</c><00:07:39.240><c> State</c>

00:07:39.469 --> 00:07:39.479 align:start position:0%
it could start from the initial State
 

00:07:39.479 --> 00:07:41.070 align:start position:0%
it could start from the initial State
and<00:07:39.560><c> it</c><00:07:39.720><c> reach</c><00:07:40.039><c> the</c><00:07:40.199><c> final</c><00:07:40.520><c> State</c><00:07:40.759><c> since</c><00:07:40.960><c> it</c>

00:07:41.070 --> 00:07:41.080 align:start position:0%
and it reach the final State since it
 

00:07:41.080 --> 00:07:43.309 align:start position:0%
and it reach the final State since it
could<00:07:41.240><c> reach</c><00:07:41.440><c> the</c><00:07:41.560><c> final</c><00:07:41.879><c> State</c><00:07:42.240><c> this</c><00:07:42.400><c> is</c>

00:07:43.309 --> 00:07:43.319 align:start position:0%
could reach the final State this is
 

00:07:43.319 --> 00:07:45.390 align:start position:0%
could reach the final State this is
accepted<00:07:44.319><c> all</c><00:07:44.479><c> right</c><00:07:44.879><c> now</c><00:07:45.000><c> let's</c><00:07:45.199><c> take</c>

00:07:45.390 --> 00:07:45.400 align:start position:0%
accepted all right now let's take
 

00:07:45.400 --> 00:07:46.990 align:start position:0%
accepted all right now let's take
another

00:07:46.990 --> 00:07:47.000 align:start position:0%
another
 

00:07:47.000 --> 00:07:51.629 align:start position:0%
another
example<00:07:48.000><c> example</c><00:07:48.400><c> number</c><00:07:48.599><c> two</c><00:07:49.240><c> is</c>

00:07:51.629 --> 00:07:51.639 align:start position:0%
example example number two is
 

00:07:51.639 --> 00:07:55.790 align:start position:0%
example example number two is
101<00:07:52.639><c> again</c><00:07:52.840><c> I</c><00:07:52.960><c> start</c><00:07:53.199><c> from</c><00:07:53.360><c> my</c><00:07:53.560><c> initial</c>

00:07:55.790 --> 00:07:55.800 align:start position:0%
101 again I start from my initial
 

00:07:55.800 --> 00:08:00.830 align:start position:0%
101 again I start from my initial
State<00:07:56.800><c> what</c><00:07:56.960><c> is</c><00:07:57.080><c> my</c><00:07:57.240><c> initial</c><00:07:57.599><c> state</c><00:07:58.360><c> it</c><00:07:58.520><c> is</c>

00:08:00.830 --> 00:08:00.840 align:start position:0%
State what is my initial state it is
 

00:08:00.840 --> 00:08:04.189 align:start position:0%
State what is my initial state it is
a<00:08:01.840><c> and</c><00:08:02.000><c> I</c><00:08:02.159><c> get</c><00:08:02.319><c> the</c><00:08:02.479><c> input</c><00:08:03.039><c> one</c><00:08:03.720><c> one</c><00:08:03.919><c> is</c><00:08:04.039><c> the</c>

00:08:04.189 --> 00:08:04.199 align:start position:0%
a and I get the input one one is the
 

00:08:04.199 --> 00:08:06.309 align:start position:0%
a and I get the input one one is the
first<00:08:04.440><c> input</c><00:08:05.120><c> and</c><00:08:05.240><c> on</c><00:08:05.440><c> getting</c><00:08:05.759><c> input</c><00:08:06.080><c> one</c>

00:08:06.309 --> 00:08:06.319 align:start position:0%
first input and on getting input one
 

00:08:06.319 --> 00:08:08.950 align:start position:0%
first input and on getting input one
where<00:08:06.479><c> does</c><00:08:06.680><c> a</c><00:08:06.919><c> go</c><00:08:07.080><c> it</c><00:08:07.240><c> goes</c><00:08:07.479><c> to</c><00:08:07.639><c> State</c>

00:08:08.950 --> 00:08:08.960 align:start position:0%
where does a go it goes to State
 

00:08:08.960 --> 00:08:13.670 align:start position:0%
where does a go it goes to State
C<00:08:09.960><c> goes</c><00:08:10.159><c> to</c><00:08:10.360><c> State</c><00:08:10.680><c> C</c><00:08:11.720><c> and</c><00:08:12.720><c> I'm</c><00:08:12.879><c> in</c><00:08:13.080><c> state</c><00:08:13.280><c> C</c><00:08:13.560><c> and</c>

00:08:13.670 --> 00:08:13.680 align:start position:0%
C goes to State C and I'm in state C and
 

00:08:13.680 --> 00:08:16.869 align:start position:0%
C goes to State C and I'm in state C and
the<00:08:13.800><c> next</c><00:08:14.000><c> input</c><00:08:14.360><c> is</c><00:08:15.120><c> zero</c><00:08:16.120><c> so</c><00:08:16.280><c> on</c><00:08:16.520><c> getting</c>

00:08:16.869 --> 00:08:16.879 align:start position:0%
the next input is zero so on getting
 

00:08:16.879 --> 00:08:19.510 align:start position:0%
the next input is zero so on getting
input<00:08:17.280><c> zero</c><00:08:17.879><c> what</c><00:08:18.080><c> happens</c><00:08:18.639><c> I'm</c><00:08:18.800><c> in</c><00:08:19.000><c> state</c><00:08:19.199><c> C</c>

00:08:19.510 --> 00:08:19.520 align:start position:0%
input zero what happens I'm in state C
 

00:08:19.520 --> 00:08:21.869 align:start position:0%
input zero what happens I'm in state C
and<00:08:19.680><c> when</c><00:08:19.879><c> State</c><00:08:20.159><c> C</c><00:08:20.520><c> gets</c><00:08:20.800><c> input</c><00:08:21.319><c> zero</c><00:08:21.720><c> what</c>

00:08:21.869 --> 00:08:21.879 align:start position:0%
and when State C gets input zero what
 

00:08:21.879 --> 00:08:26.070 align:start position:0%
and when State C gets input zero what
happens<00:08:22.520><c> it</c><00:08:22.680><c> stays</c><00:08:23.039><c> in</c><00:08:23.240><c> C</c><00:08:24.080><c> itself</c><00:08:25.080><c> stay</c>

00:08:26.070 --> 00:08:26.080 align:start position:0%
happens it stays in C itself stay
 

00:08:26.080 --> 00:08:29.550 align:start position:0%
happens it stays in C itself stay
in<00:08:27.080><c> C</c><00:08:27.400><c> itself</c><00:08:28.280><c> okay</c><00:08:28.720><c> and</c><00:08:28.879><c> what</c><00:08:29.000><c> is</c><00:08:29.080><c> the</c><00:08:29.199><c> next</c>

00:08:29.550 --> 00:08:29.560 align:start position:0%
in C itself okay and what is the next
 

00:08:29.560 --> 00:08:31.029 align:start position:0%
in C itself okay and what is the next
input<00:08:30.120><c> it</c><00:08:30.240><c> is</c>

00:08:31.029 --> 00:08:31.039 align:start position:0%
input it is
 

00:08:31.039 --> 00:08:34.350 align:start position:0%
input it is
one<00:08:32.039><c> so</c><00:08:32.279><c> what</c><00:08:32.440><c> happens</c><00:08:32.760><c> when</c><00:08:32.839><c> I</c><00:08:33.000><c> get</c><00:08:33.120><c> input</c><00:08:33.440><c> one</c>

00:08:34.350 --> 00:08:34.360 align:start position:0%
one so what happens when I get input one
 

00:08:34.360 --> 00:08:36.350 align:start position:0%
one so what happens when I get input one
I'm<00:08:34.519><c> in</c><00:08:34.719><c> state</c><00:08:34.959><c> C</c><00:08:35.440><c> right</c><00:08:35.800><c> and</c><00:08:35.959><c> when</c><00:08:36.080><c> I</c><00:08:36.200><c> get</c>

00:08:36.350 --> 00:08:36.360 align:start position:0%
I'm in state C right and when I get
 

00:08:36.360 --> 00:08:39.190 align:start position:0%
I'm in state C right and when I get
input<00:08:36.719><c> one</c><00:08:37.599><c> what</c><00:08:37.760><c> happens</c><00:08:38.080><c> it</c><00:08:38.200><c> stays</c><00:08:38.479><c> in</c><00:08:38.640><c> state</c>

00:08:39.190 --> 00:08:39.200 align:start position:0%
input one what happens it stays in state
 

00:08:39.200 --> 00:08:42.310 align:start position:0%
input one what happens it stays in state
C<00:08:40.200><c> still</c><00:08:40.479><c> stays</c><00:08:40.760><c> in</c><00:08:40.959><c> state</c><00:08:41.200><c> C</c><00:08:41.839><c> and</c><00:08:42.000><c> now</c><00:08:42.159><c> I've</c>

00:08:42.310 --> 00:08:42.320 align:start position:0%
C still stays in state C and now I've
 

00:08:42.320 --> 00:08:44.990 align:start position:0%
C still stays in state C and now I've
reached<00:08:42.519><c> the</c><00:08:42.599><c> end</c><00:08:42.800><c> of</c><00:08:42.919><c> the</c><00:08:43.039><c> string</c><00:08:44.039><c> right</c><00:08:44.640><c> and</c>

00:08:44.990 --> 00:08:45.000 align:start position:0%
reached the end of the string right and
 

00:08:45.000 --> 00:08:46.509 align:start position:0%
reached the end of the string right and
where<00:08:45.160><c> am</c><00:08:45.279><c> I</c><00:08:45.480><c> at</c><00:08:45.600><c> the</c><00:08:45.680><c> end</c><00:08:45.839><c> of</c><00:08:45.920><c> the</c><00:08:46.000><c> string</c><00:08:46.320><c> I</c><00:08:46.399><c> am</c>

00:08:46.509 --> 00:08:46.519 align:start position:0%
where am I at the end of the string I am
 

00:08:46.519 --> 00:08:49.110 align:start position:0%
where am I at the end of the string I am
in<00:08:46.680><c> state</c><00:08:46.920><c> C</c><00:08:47.640><c> I'm</c><00:08:47.839><c> in</c><00:08:47.959><c> state</c><00:08:48.160><c> C</c><00:08:48.399><c> and</c><00:08:48.560><c> is</c><00:08:48.720><c> C</c><00:08:49.000><c> the</c>

00:08:49.110 --> 00:08:49.120 align:start position:0%
in state C I'm in state C and is C the
 

00:08:49.120 --> 00:08:51.269 align:start position:0%
in state C I'm in state C and is C the
final<00:08:49.440><c> State</c><00:08:50.200><c> no</c><00:08:50.440><c> I</c><00:08:50.519><c> don't</c><00:08:50.680><c> see</c><00:08:50.839><c> any</c><00:08:51.040><c> double</c>

00:08:51.269 --> 00:08:51.279 align:start position:0%
final State no I don't see any double
 

00:08:51.279 --> 00:08:53.470 align:start position:0%
final State no I don't see any double
circle<00:08:51.600><c> around</c><00:08:51.880><c> here</c><00:08:52.120><c> that</c><00:08:52.240><c> means</c><00:08:52.760><c> C</c><00:08:53.080><c> is</c><00:08:53.240><c> not</c>

00:08:53.470 --> 00:08:53.480 align:start position:0%
circle around here that means C is not
 

00:08:53.480 --> 00:08:55.910 align:start position:0%
circle around here that means C is not
the<00:08:53.640><c> final</c><00:08:53.920><c> State</c><00:08:54.680><c> C</c>

00:08:55.910 --> 00:08:55.920 align:start position:0%
the final State C
 

00:08:55.920 --> 00:08:58.069 align:start position:0%
the final State C
is

00:08:58.069 --> 00:08:58.079 align:start position:0%
is
 

00:08:58.079 --> 00:09:01.350 align:start position:0%
is
not<00:08:59.079><c> final</c><00:08:59.440><c> fin</c>

00:09:01.350 --> 00:09:01.360 align:start position:0%
not final fin
 

00:09:01.360 --> 00:09:04.670 align:start position:0%
not final fin
state<00:09:02.360><c> so</c><00:09:02.760><c> since</c><00:09:03.600><c> this</c><00:09:03.760><c> string</c><00:09:04.160><c> started</c><00:09:04.560><c> from</c>

00:09:04.670 --> 00:09:04.680 align:start position:0%
state so since this string started from
 

00:09:04.680 --> 00:09:06.590 align:start position:0%
state so since this string started from
the<00:09:04.839><c> initial</c><00:09:05.160><c> state</c><00:09:05.720><c> but</c><00:09:05.959><c> could</c><00:09:06.160><c> not</c><00:09:06.360><c> reach</c>

00:09:06.590 --> 00:09:06.600 align:start position:0%
the initial state but could not reach
 

00:09:06.600 --> 00:09:09.550 align:start position:0%
the initial state but could not reach
the<00:09:06.720><c> final</c><00:09:07.040><c> State</c><00:09:07.720><c> this</c><00:09:07.880><c> string</c><00:09:08.360><c> is</c><00:09:09.120><c> not</c>

00:09:09.550 --> 00:09:09.560 align:start position:0%
the final State this string is not
 

00:09:09.560 --> 00:09:12.710 align:start position:0%
the final State this string is not
accepted<00:09:10.160><c> it</c><00:09:10.320><c> is</c><00:09:10.920><c> rejected</c><00:09:11.920><c> so</c><00:09:12.120><c> we</c><00:09:12.240><c> see</c><00:09:12.519><c> that</c>

00:09:12.710 --> 00:09:12.720 align:start position:0%
accepted it is rejected so we see that
 

00:09:12.720 --> 00:09:14.790 align:start position:0%
accepted it is rejected so we see that
when<00:09:12.880><c> the</c><00:09:13.040><c> string</c><00:09:13.760><c> when</c><00:09:13.959><c> this</c><00:09:14.120><c> string</c><00:09:14.399><c> started</c>

00:09:14.790 --> 00:09:14.800 align:start position:0%
when the string when this string started
 

00:09:14.800 --> 00:09:16.630 align:start position:0%
when the string when this string started
with<00:09:15.040><c> zero</c><00:09:15.320><c> it</c><00:09:15.480><c> was</c><00:09:15.680><c> accepted</c><00:09:16.320><c> but</c><00:09:16.480><c> this</c>

00:09:16.630 --> 00:09:16.640 align:start position:0%
with zero it was accepted but this
 

00:09:16.640 --> 00:09:19.350 align:start position:0%
with zero it was accepted but this
string<00:09:17.040><c> as</c><00:09:17.120><c> it</c><00:09:17.279><c> started</c><00:09:17.600><c> from</c><00:09:17.839><c> one</c><00:09:18.399><c> it</c><00:09:18.560><c> was</c><00:09:19.079><c> not</c>

00:09:19.350 --> 00:09:19.360 align:start position:0%
string as it started from one it was not
 

00:09:19.360 --> 00:09:21.550 align:start position:0%
string as it started from one it was not
accepted<00:09:20.160><c> so</c><00:09:20.720><c> we</c><00:09:20.839><c> have</c><00:09:21.040><c> successfully</c>

00:09:21.550 --> 00:09:21.560 align:start position:0%
accepted so we have successfully
 

00:09:21.560 --> 00:09:24.030 align:start position:0%
accepted so we have successfully
designed<00:09:21.880><c> a</c><00:09:22.040><c> DFA</c><00:09:22.839><c> for</c><00:09:23.120><c> all</c><00:09:23.399><c> strings</c><00:09:23.839><c> that</c>

00:09:24.030 --> 00:09:24.040 align:start position:0%
designed a DFA for all strings that
 

00:09:24.040 --> 00:09:26.550 align:start position:0%
designed a DFA for all strings that
starts<00:09:24.440><c> with</c><00:09:24.959><c> zero</c><00:09:25.480><c> and</c><00:09:25.680><c> these</c><00:09:25.880><c> examples</c><00:09:26.320><c> are</c>

00:09:26.550 --> 00:09:26.560 align:start position:0%
starts with zero and these examples are
 

00:09:26.560 --> 00:09:29.670 align:start position:0%
starts with zero and these examples are
the<00:09:27.279><c> proof</c><00:09:27.519><c> for</c><00:09:27.800><c> that</c><00:09:28.800><c> so</c><00:09:29.120><c> I</c><00:09:29.200><c> hope</c><00:09:29.440><c> hope</c><00:09:29.560><c> that</c>

00:09:29.670 --> 00:09:29.680 align:start position:0%
the proof for that so I hope hope that
 

00:09:29.680 --> 00:09:31.949 align:start position:0%
the proof for that so I hope hope that
was<00:09:29.839><c> clear</c><00:09:30.839><c> in</c><00:09:30.959><c> the</c><00:09:31.079><c> next</c><00:09:31.320><c> lecture</c><00:09:31.600><c> we</c><00:09:31.680><c> will</c><00:09:31.839><c> be</c>

00:09:31.949 --> 00:09:31.959 align:start position:0%
was clear in the next lecture we will be
 

00:09:31.959 --> 00:09:34.550 align:start position:0%
was clear in the next lecture we will be
seeing<00:09:32.560><c> some</c><00:09:32.800><c> more</c><00:09:33.040><c> examples</c><00:09:33.880><c> so</c><00:09:34.320><c> thank</c><00:09:34.480><c> you</c>

00:09:34.550 --> 00:09:34.560 align:start position:0%
seeing some more examples so thank you
 

00:09:34.560 --> 00:09:40.490 align:start position:0%
seeing some more examples so thank you
for<00:09:34.760><c> watching</c><00:09:35.160><c> and</c><00:09:35.279><c> see</c><00:09:35.480><c> you</c><00:09:35.600><c> in</c><00:09:35.720><c> the</c><00:09:35.839><c> next</c><00:09:36.040><c> one</c>

00:09:40.490 --> 00:09:40.500 align:start position:0%
 
 

00:09:40.500 --> 00:09:49.590 align:start position:0%
 
[Music]


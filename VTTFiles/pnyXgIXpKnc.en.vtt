WEBVTT
Kind: captions
Language: en

00:00:04.339 --> 00:00:07.820 align:start position:0%
 
in<00:00:05.339><c> the</c><00:00:05.790><c> previous</c><00:00:06.120><c> lecture</c><00:00:06.480><c> we</c><00:00:06.509><c> have</c><00:00:06.870><c> seen</c><00:00:07.140><c> how</c>

00:00:07.820 --> 00:00:07.830 align:start position:0%
in the previous lecture we have seen how
 

00:00:07.830 --> 00:00:11.089 align:start position:0%
in the previous lecture we have seen how
to<00:00:07.859><c> convert</c><00:00:08.429><c> NFA</c><00:00:09.269><c> to</c><00:00:09.540><c> DFA</c><00:00:09.990><c> and</c><00:00:10.170><c> in</c><00:00:10.950><c> this</c>

00:00:11.089 --> 00:00:11.099 align:start position:0%
to convert NFA to DFA and in this
 

00:00:11.099 --> 00:00:12.350 align:start position:0%
to convert NFA to DFA and in this
lecture<00:00:11.460><c> we</c><00:00:11.670><c> will</c><00:00:11.790><c> be</c><00:00:11.969><c> seeing</c><00:00:12.240><c> another</c>

00:00:12.350 --> 00:00:12.360 align:start position:0%
lecture we will be seeing another
 

00:00:12.360 --> 00:00:16.310 align:start position:0%
lecture we will be seeing another
example<00:00:13.110><c> of</c><00:00:13.490><c> converting</c><00:00:14.490><c> an</c><00:00:14.820><c> NFA</c><00:00:15.540><c> to</c><00:00:15.809><c> a</c><00:00:15.839><c> DFA</c>

00:00:16.310 --> 00:00:16.320 align:start position:0%
example of converting an NFA to a DFA
 

00:00:16.320 --> 00:00:18.849 align:start position:0%
example of converting an NFA to a DFA
alright<00:00:17.250><c> so</c><00:00:17.430><c> let's</c><00:00:17.609><c> get</c><00:00:17.730><c> started</c>

00:00:18.849 --> 00:00:18.859 align:start position:0%
alright so let's get started
 

00:00:18.859 --> 00:00:22.160 align:start position:0%
alright so let's get started
okay<00:00:19.859><c> so</c><00:00:20.580><c> here</c><00:00:21.000><c> we</c><00:00:21.029><c> have</c><00:00:21.180><c> an</c><00:00:21.420><c> example</c><00:00:21.660><c> language</c>

00:00:22.160 --> 00:00:22.170 align:start position:0%
okay so here we have an example language
 

00:00:22.170 --> 00:00:24.500 align:start position:0%
okay so here we have an example language
L<00:00:22.410><c> which</c><00:00:23.039><c> is</c><00:00:23.070><c> the</c><00:00:23.310><c> set</c><00:00:23.550><c> of</c><00:00:23.699><c> all</c><00:00:23.939><c> strings</c><00:00:24.119><c> over</c>

00:00:24.500 --> 00:00:24.510 align:start position:0%
L which is the set of all strings over
 

00:00:24.510 --> 00:00:28.009 align:start position:0%
L which is the set of all strings over
zero<00:00:24.960><c> one</c><00:00:25.230><c> that</c><00:00:25.560><c> ends</c><00:00:26.010><c> with</c><00:00:26.220><c> one</c><00:00:26.490><c> so</c><00:00:27.300><c> what</c><00:00:27.869><c> we</c>

00:00:28.009 --> 00:00:28.019 align:start position:0%
zero one that ends with one so what we
 

00:00:28.019 --> 00:00:31.040 align:start position:0%
zero one that ends with one so what we
have<00:00:28.199><c> to</c><00:00:28.349><c> do</c><00:00:28.470><c> is</c><00:00:28.619><c> we</c><00:00:28.890><c> have</c><00:00:29.070><c> to</c><00:00:29.099><c> design</c><00:00:29.609><c> the</c><00:00:30.599><c> NFA</c>

00:00:31.040 --> 00:00:31.050 align:start position:0%
have to do is we have to design the NFA
 

00:00:31.050 --> 00:00:33.440 align:start position:0%
have to do is we have to design the NFA
for<00:00:31.289><c> a</c><00:00:31.320><c> language</c><00:00:31.800><c> that</c><00:00:32.009><c> accepts</c><00:00:32.610><c> the</c><00:00:33.149><c> set</c><00:00:33.329><c> of</c>

00:00:33.440 --> 00:00:33.450 align:start position:0%
for a language that accepts the set of
 

00:00:33.450 --> 00:00:35.450 align:start position:0%
for a language that accepts the set of
all<00:00:33.690><c> strings</c><00:00:33.809><c> over</c><00:00:34.170><c> zero</c><00:00:34.530><c> one</c><00:00:34.739><c> that</c><00:00:34.950><c> ends</c><00:00:35.309><c> with</c>

00:00:35.450 --> 00:00:35.460 align:start position:0%
all strings over zero one that ends with
 

00:00:35.460 --> 00:00:38.240 align:start position:0%
all strings over zero one that ends with
one<00:00:35.730><c> and</c><00:00:35.989><c> after</c><00:00:36.989><c> designing</c><00:00:37.290><c> the</c><00:00:37.559><c> NFA</c><00:00:37.950><c> we</c><00:00:38.100><c> will</c>

00:00:38.240 --> 00:00:38.250 align:start position:0%
one and after designing the NFA we will
 

00:00:38.250 --> 00:00:41.270 align:start position:0%
one and after designing the NFA we will
convert<00:00:38.640><c> it</c><00:00:38.820><c> to</c><00:00:38.969><c> its</c><00:00:39.149><c> equivalent</c><00:00:39.420><c> DFA</c><00:00:40.320><c> okay</c><00:00:41.219><c> so</c>

00:00:41.270 --> 00:00:41.280 align:start position:0%
convert it to its equivalent DFA okay so
 

00:00:41.280 --> 00:00:44.510 align:start position:0%
convert it to its equivalent DFA okay so
let's<00:00:41.550><c> see</c><00:00:41.700><c> how</c><00:00:41.820><c> we</c><00:00:41.879><c> can</c><00:00:42.120><c> do</c><00:00:42.239><c> this</c><00:00:42.420><c> so</c><00:00:43.379><c> here</c><00:00:43.710><c> my</c>

00:00:44.510 --> 00:00:44.520 align:start position:0%
let's see how we can do this so here my
 

00:00:44.520 --> 00:00:49.910 align:start position:0%
let's see how we can do this so here my
inputs<00:00:45.120><c> symbols</c><00:00:45.780><c> are</c><00:00:45.960><c> 0</c><00:00:46.370><c> &amp;</c><00:00:47.370><c> 1</c><00:00:48.289><c> so</c><00:00:49.289><c> how</c><00:00:49.620><c> can</c><00:00:49.680><c> we</c>

00:00:49.910 --> 00:00:49.920 align:start position:0%
inputs symbols are 0 &amp; 1 so how can we
 

00:00:49.920 --> 00:00:52.939 align:start position:0%
inputs symbols are 0 &amp; 1 so how can we
design<00:00:50.070><c> the</c><00:00:50.489><c> NFA</c><00:00:51.360><c> for</c><00:00:51.570><c> this</c><00:00:51.719><c> I</c><00:00:51.930><c> will</c><00:00:52.739><c> first</c>

00:00:52.939 --> 00:00:52.949 align:start position:0%
design the NFA for this I will first
 

00:00:52.949 --> 00:00:57.670 align:start position:0%
design the NFA for this I will first
have<00:00:53.250><c> a</c><00:00:54.079><c> starting</c><00:00:55.079><c> state</c><00:00:55.760><c> which</c><00:00:56.760><c> is</c><00:00:56.940><c> state</c><00:00:57.210><c> a</c>

00:00:57.670 --> 00:00:57.680 align:start position:0%
have a starting state which is state a
 

00:00:57.680 --> 00:01:02.000 align:start position:0%
have a starting state which is state a
is<00:00:58.680><c> my</c><00:00:59.039><c> starting</c><00:00:59.579><c> state</c><00:00:59.820><c> and</c><00:01:00.059><c> a</c><00:01:00.960><c> on</c><00:01:01.590><c> getting</c>

00:01:02.000 --> 00:01:02.010 align:start position:0%
is my starting state and a on getting
 

00:01:02.010 --> 00:01:08.149 align:start position:0%
is my starting state and a on getting
input<00:01:03.589><c> either</c><00:01:04.589><c> 0</c><00:01:05.129><c> or</c><00:01:05.339><c> 1</c><00:01:06.049><c> it</c><00:01:07.049><c> stays</c><00:01:07.380><c> in</c><00:01:07.619><c> a</c><00:01:07.830><c> itself</c>

00:01:08.149 --> 00:01:08.159 align:start position:0%
input either 0 or 1 it stays in a itself
 

00:01:08.159 --> 00:01:17.679 align:start position:0%
input either 0 or 1 it stays in a itself
and<00:01:09.619><c> if</c><00:01:10.619><c> air</c><00:01:11.220><c> gets</c><00:01:11.520><c> the</c><00:01:13.040><c> next</c><00:01:14.040><c> input</c><00:01:14.220><c> that</c><00:01:15.180><c> is</c><00:01:16.159><c> 1</c>

00:01:17.679 --> 00:01:17.689 align:start position:0%
and if air gets the next input that is 1
 

00:01:17.689 --> 00:01:21.080 align:start position:0%
and if air gets the next input that is 1
then<00:01:18.689><c> we</c><00:01:19.080><c> send</c><00:01:19.380><c> it</c><00:01:19.500><c> to</c><00:01:19.530><c> the</c><00:01:19.799><c> final</c><00:01:20.580><c> state</c><00:01:20.850><c> which</c>

00:01:21.080 --> 00:01:21.090 align:start position:0%
then we send it to the final state which
 

00:01:21.090 --> 00:01:27.800 align:start position:0%
then we send it to the final state which
I<00:01:21.240><c> call</c><00:01:21.650><c> state</c><00:01:24.409><c> B</c><00:01:25.409><c> that</c><00:01:26.220><c> means</c><00:01:26.460><c> in</c><00:01:26.880><c> the</c>

00:01:27.800 --> 00:01:27.810 align:start position:0%
I call state B that means in the
 

00:01:27.810 --> 00:01:29.390 align:start position:0%
I call state B that means in the
beginning<00:01:27.900><c> I</c><00:01:28.229><c> don't</c><00:01:28.290><c> care</c><00:01:28.619><c> what</c><00:01:28.890><c> it</c><00:01:29.070><c> is</c>

00:01:29.390 --> 00:01:29.400 align:start position:0%
beginning I don't care what it is
 

00:01:29.400 --> 00:01:31.429 align:start position:0%
beginning I don't care what it is
let<00:01:29.610><c> it</c><00:01:29.729><c> be</c><00:01:29.880><c> 0</c><00:01:30.150><c> or</c><00:01:30.240><c> 1</c><00:01:30.420><c> but</c><00:01:30.689><c> when</c><00:01:31.079><c> the</c><00:01:31.229><c> last</c>

00:01:31.429 --> 00:01:31.439 align:start position:0%
let it be 0 or 1 but when the last
 

00:01:31.439 --> 00:01:34.370 align:start position:0%
let it be 0 or 1 but when the last
string<00:01:31.740><c> is</c><00:01:31.860><c> 1</c><00:01:32.159><c> if</c><00:01:33.030><c> we</c><00:01:33.240><c> get</c><00:01:33.450><c> the</c><00:01:33.570><c> final</c><00:01:33.960><c> string</c><00:01:34.229><c> s</c>

00:01:34.370 --> 00:01:34.380 align:start position:0%
string is 1 if we get the final string s
 

00:01:34.380 --> 00:01:37.940 align:start position:0%
string is 1 if we get the final string s
or<00:01:34.890><c> the</c><00:01:34.950><c> final</c><00:01:35.570><c> symbol</c><00:01:36.570><c> as</c><00:01:36.810><c> 1</c><00:01:37.049><c> then</c><00:01:37.409><c> it</c><00:01:37.530><c> goes</c><00:01:37.740><c> to</c>

00:01:37.940 --> 00:01:37.950 align:start position:0%
or the final symbol as 1 then it goes to
 

00:01:37.950 --> 00:01:40.340 align:start position:0%
or the final symbol as 1 then it goes to
final<00:01:38.250><c> state</c><00:01:38.340><c> B</c><00:01:39.060><c> and</c><00:01:39.299><c> in</c><00:01:39.630><c> B</c><00:01:39.840><c> we</c><00:01:39.990><c> don't</c><00:01:40.110><c> mention</c>

00:01:40.340 --> 00:01:40.350 align:start position:0%
final state B and in B we don't mention
 

00:01:40.350 --> 00:01:43.160 align:start position:0%
final state B and in B we don't mention
what<00:01:40.979><c> happens</c><00:01:41.400><c> after</c><00:01:41.729><c> that</c><00:01:41.759><c> because</c><00:01:42.180><c> we</c><00:01:42.899><c> want</c>

00:01:43.160 --> 00:01:43.170 align:start position:0%
what happens after that because we want
 

00:01:43.170 --> 00:01:45.859 align:start position:0%
what happens after that because we want
it<00:01:43.500><c> to</c><00:01:43.649><c> come</c><00:01:43.829><c> to</c><00:01:43.860><c> B</c><00:01:44.159><c> and</c><00:01:44.340><c> be</c><00:01:44.939><c> there</c><00:01:45.149><c> if</c><00:01:45.299><c> if</c><00:01:45.600><c> we</c>

00:01:45.859 --> 00:01:45.869 align:start position:0%
it to come to B and be there if if we
 

00:01:45.869 --> 00:01:47.480 align:start position:0%
it to come to B and be there if if we
mention<00:01:46.259><c> something</c><00:01:46.590><c> else</c><00:01:46.829><c> in</c><00:01:46.950><c> B</c><00:01:47.100><c> that</c><00:01:47.250><c> means</c>

00:01:47.480 --> 00:01:47.490 align:start position:0%
mention something else in B that means
 

00:01:47.490 --> 00:01:50.149 align:start position:0%
mention something else in B that means
that<00:01:48.060><c> will</c><00:01:48.180><c> not</c><00:01:48.360><c> be</c><00:01:48.509><c> the</c><00:01:48.689><c> last</c><00:01:48.899><c> string</c><00:01:49.500><c> so</c><00:01:49.770><c> this</c>

00:01:50.149 --> 00:01:50.159 align:start position:0%
that will not be the last string so this
 

00:01:50.159 --> 00:01:51.679 align:start position:0%
that will not be the last string so this
is<00:01:50.310><c> an</c><00:01:50.399><c> NFA</c><00:01:50.759><c> so</c><00:01:50.820><c> I</c><00:01:50.970><c> don't</c><00:01:51.180><c> mention</c><00:01:51.329><c> what</c>

00:01:51.679 --> 00:01:51.689 align:start position:0%
is an NFA so I don't mention what
 

00:01:51.689 --> 00:01:53.389 align:start position:0%
is an NFA so I don't mention what
happens<00:01:52.020><c> B</c><00:01:52.229><c> goes</c><00:01:52.500><c> nowhere</c><00:01:52.979><c> after</c><00:01:53.100><c> this</c>

00:01:53.389 --> 00:01:53.399 align:start position:0%
happens B goes nowhere after this
 

00:01:53.399 --> 00:01:58.240 align:start position:0%
happens B goes nowhere after this
reverse<00:01:53.759><c> season</c><00:01:54.149><c> NFA</c><00:01:54.960><c> so</c><00:01:55.290><c> this</c><00:01:55.619><c> is</c><00:01:55.770><c> the</c><00:01:55.979><c> N</c><00:01:56.540><c> F</c><00:01:57.540><c> a</c>

00:01:58.240 --> 00:01:58.250 align:start position:0%
reverse season NFA so this is the N F a
 

00:01:58.250 --> 00:01:59.640 align:start position:0%
reverse season NFA so this is the N F a
designed<00:01:59.250><c> the</c>

00:01:59.640 --> 00:01:59.650 align:start position:0%
designed the
 

00:01:59.650 --> 00:02:02.460 align:start position:0%
designed the
ffs<00:02:00.010><c> order</c><00:02:00.510><c> language</c><00:02:01.510><c> which</c><00:02:01.690><c> accept</c><00:02:02.050><c> a</c><00:02:02.170><c> set</c><00:02:02.350><c> of</c>

00:02:02.460 --> 00:02:02.470 align:start position:0%
ffs order language which accept a set of
 

00:02:02.470 --> 00:02:04.230 align:start position:0%
ffs order language which accept a set of
all<00:02:02.680><c> strings</c><00:02:02.800><c> over</c><00:02:03.100><c> zero</c><00:02:03.520><c> one</c><00:02:03.700><c> that</c><00:02:03.850><c> ends</c><00:02:04.000><c> with</c>

00:02:04.230 --> 00:02:04.240 align:start position:0%
all strings over zero one that ends with
 

00:02:04.240 --> 00:02:09.630 align:start position:0%
all strings over zero one that ends with
one<00:02:04.840><c> now</c><00:02:05.740><c> let</c><00:02:05.980><c> me</c><00:02:06.100><c> draw</c><00:02:06.370><c> the</c><00:02:06.810><c> transition</c><00:02:08.640><c> table</c>

00:02:09.630 --> 00:02:09.640 align:start position:0%
one now let me draw the transition table
 

00:02:09.640 --> 00:02:12.710 align:start position:0%
one now let me draw the transition table
the<00:02:09.729><c> state</c><00:02:09.940><c> transition</c><00:02:10.450><c> table</c><00:02:10.690><c> for</c><00:02:11.050><c> this</c><00:02:11.520><c> NFA</c>

00:02:12.710 --> 00:02:12.720 align:start position:0%
the state transition table for this NFA
 

00:02:12.720 --> 00:02:15.510 align:start position:0%
the state transition table for this NFA
so<00:02:13.720><c> what</c><00:02:13.900><c> would</c><00:02:13.990><c> be</c><00:02:14.050><c> the</c><00:02:14.310><c> elements</c><00:02:15.310><c> in</c><00:02:15.400><c> my</c>

00:02:15.510 --> 00:02:15.520 align:start position:0%
so what would be the elements in my
 

00:02:15.520 --> 00:02:17.310 align:start position:0%
so what would be the elements in my
eight<00:02:15.790><c> state</c><00:02:16.180><c> transition</c><00:02:16.630><c> table</c><00:02:16.780><c> I'll</c><00:02:17.110><c> have</c>

00:02:17.310 --> 00:02:17.320 align:start position:0%
eight state transition table I'll have
 

00:02:17.320 --> 00:02:20.040 align:start position:0%
eight state transition table I'll have
my<00:02:17.470><c> inputs</c><00:02:17.920><c> 0</c><00:02:18.040><c> &amp;</c><00:02:18.490><c> 1</c><00:02:18.520><c> here</c><00:02:18.940><c> and</c><00:02:19.090><c> here</c><00:02:19.150><c> I'll</c><00:02:19.870><c> have</c>

00:02:20.040 --> 00:02:20.050 align:start position:0%
my inputs 0 &amp; 1 here and here I'll have
 

00:02:20.050 --> 00:02:25.620 align:start position:0%
my inputs 0 &amp; 1 here and here I'll have
my<00:02:20.230><c> states</c><00:02:20.560><c> which</c><00:02:20.830><c> are</c><00:02:20.980><c> a</c><00:02:21.390><c> and</c><00:02:22.390><c> B</c><00:02:22.690><c> and</c><00:02:24.120><c> a</c><00:02:25.120><c> on</c>

00:02:25.620 --> 00:02:25.630 align:start position:0%
my states which are a and B and a on
 

00:02:25.630 --> 00:02:27.540 align:start position:0%
my states which are a and B and a on
getting<00:02:25.930><c> input</c><00:02:26.080><c> 0</c><00:02:26.470><c> where</c><00:02:26.710><c> does</c><00:02:26.860><c> it</c><00:02:26.980><c> go</c><00:02:27.190><c> a</c><00:02:27.340><c> on</c>

00:02:27.540 --> 00:02:27.550 align:start position:0%
getting input 0 where does it go a on
 

00:02:27.550 --> 00:02:31.170 align:start position:0%
getting input 0 where does it go a on
getting<00:02:27.850><c> input</c><00:02:28.150><c> 0</c><00:02:28.390><c> it</c><00:02:28.540><c> stays</c><00:02:28.810><c> in</c><00:02:29.050><c> itself</c><00:02:30.180><c> stays</c>

00:02:31.170 --> 00:02:31.180 align:start position:0%
getting input 0 it stays in itself stays
 

00:02:31.180 --> 00:02:36.300 align:start position:0%
getting input 0 it stays in itself stays
in<00:02:31.620><c> itself</c><00:02:32.620><c> and</c><00:02:33.240><c> a</c><00:02:34.240><c> on</c><00:02:34.480><c> getting</c><00:02:34.780><c> input</c><00:02:35.140><c> 1</c><00:02:35.860><c> what</c>

00:02:36.300 --> 00:02:36.310 align:start position:0%
in itself and a on getting input 1 what
 

00:02:36.310 --> 00:02:39.120 align:start position:0%
in itself and a on getting input 1 what
happens<00:02:36.340><c> to</c><00:02:36.790><c> a</c><00:02:36.820><c> in</c><00:02:37.090><c> on</c><00:02:37.240><c> getting</c><00:02:37.540><c> input</c><00:02:37.660><c> 1</c><00:02:38.130><c> it</c>

00:02:39.120 --> 00:02:39.130 align:start position:0%
happens to a in on getting input 1 it
 

00:02:39.130 --> 00:02:42.300 align:start position:0%
happens to a in on getting input 1 it
stays<00:02:39.940><c> in</c><00:02:40.120><c> a</c><00:02:40.270><c> itself</c><00:02:40.600><c> and</c><00:02:40.870><c> also</c><00:02:41.170><c> it</c><00:02:41.410><c> goes</c><00:02:41.620><c> to</c><00:02:41.890><c> B</c>

00:02:42.300 --> 00:02:42.310 align:start position:0%
stays in a itself and also it goes to B
 

00:02:42.310 --> 00:02:44.940 align:start position:0%
stays in a itself and also it goes to B
it<00:02:42.520><c> has</c><00:02:42.700><c> two</c><00:02:42.940><c> transitions</c><00:02:43.540><c> so</c><00:02:44.260><c> that</c><00:02:44.650><c> is</c><00:02:44.770><c> why</c><00:02:44.890><c> I</c>

00:02:44.940 --> 00:02:44.950 align:start position:0%
it has two transitions so that is why I
 

00:02:44.950 --> 00:02:48.080 align:start position:0%
it has two transitions so that is why I
am<00:02:45.100><c> using</c><00:02:45.130><c> this</c><00:02:45.430><c> set</c><00:02:45.880><c> notation</c><00:02:46.240><c> here</c><00:02:46.660><c> a</c><00:02:46.920><c> comma</c>

00:02:48.080 --> 00:02:48.090 align:start position:0%
am using this set notation here a comma
 

00:02:48.090 --> 00:02:52.260 align:start position:0%
am using this set notation here a comma
B<00:02:49.090><c> a</c><00:02:49.620><c> on</c><00:02:50.620><c> getting</c><00:02:50.950><c> input</c><00:02:51.220><c> one</c><00:02:51.400><c> goes</c><00:02:51.610><c> to</c><00:02:51.640><c> both</c><00:02:52.030><c> a</c>

00:02:52.260 --> 00:02:52.270 align:start position:0%
B a on getting input one goes to both a
 

00:02:52.270 --> 00:02:55.320 align:start position:0%
B a on getting input one goes to both a
and<00:02:52.390><c> B</c><00:02:52.990><c> and</c><00:02:53.380><c> B</c><00:02:54.220><c> on</c><00:02:54.370><c> getting</c><00:02:54.640><c> input</c><00:02:54.760><c> 0</c><00:02:55.150><c> where</c>

00:02:55.320 --> 00:02:55.330 align:start position:0%
and B and B on getting input 0 where
 

00:02:55.330 --> 00:02:56.970 align:start position:0%
and B and B on getting input 0 where
does<00:02:55.450><c> it</c><00:02:55.570><c> go</c><00:02:55.720><c> it</c><00:02:55.840><c> goes</c><00:02:56.020><c> nowhere</c><00:02:56.320><c> beyond</c>

00:02:56.970 --> 00:02:56.980 align:start position:0%
does it go it goes nowhere beyond
 

00:02:56.980 --> 00:02:58.680 align:start position:0%
does it go it goes nowhere beyond
getting<00:02:57.190><c> input</c><00:02:57.400><c> 1</c><00:02:57.730><c> where</c><00:02:57.940><c> does</c><00:02:58.090><c> it</c><00:02:58.209><c> go</c><00:02:58.330><c> it</c><00:02:58.510><c> go</c>

00:02:58.680 --> 00:02:58.690 align:start position:0%
getting input 1 where does it go it go
 

00:02:58.690 --> 00:02:59.730 align:start position:0%
getting input 1 where does it go it go
no<00:02:58.870><c> it</c><00:02:59.110><c> goes</c><00:02:59.320><c> nowhere</c>

00:02:59.730 --> 00:02:59.740 align:start position:0%
no it goes nowhere
 

00:02:59.740 --> 00:03:05.280 align:start position:0%
no it goes nowhere
so<00:03:00.390><c> we'll</c><00:03:01.390><c> write</c><00:03:01.900><c> it</c><00:03:02.050><c> as</c><00:03:02.230><c> Phi</c><00:03:03.720><c> B</c><00:03:04.720><c> does</c><00:03:04.900><c> not</c><00:03:05.080><c> go</c>

00:03:05.280 --> 00:03:05.290 align:start position:0%
so we'll write it as Phi B does not go
 

00:03:05.290 --> 00:03:07.650 align:start position:0%
so we'll write it as Phi B does not go
anywhere<00:03:05.650><c> so</c><00:03:06.640><c> now</c><00:03:06.880><c> we</c><00:03:06.940><c> have</c><00:03:07.209><c> the</c><00:03:07.420><c> state</c>

00:03:07.650 --> 00:03:07.660 align:start position:0%
anywhere so now we have the state
 

00:03:07.660 --> 00:03:10.440 align:start position:0%
anywhere so now we have the state
transition<00:03:08.140><c> diagram</c><00:03:08.769><c> for</c><00:03:09.010><c> the</c><00:03:09.160><c> NFA</c><00:03:09.940><c> now</c><00:03:10.300><c> let</c>

00:03:10.440 --> 00:03:10.450 align:start position:0%
transition diagram for the NFA now let
 

00:03:10.450 --> 00:03:13.140 align:start position:0%
transition diagram for the NFA now let
us<00:03:10.570><c> try</c><00:03:11.110><c> to</c><00:03:11.140><c> convert</c><00:03:11.590><c> it</c><00:03:11.739><c> to</c><00:03:11.920><c> the</c><00:03:12.150><c> equivalent</c>

00:03:13.140 --> 00:03:13.150 align:start position:0%
us try to convert it to the equivalent
 

00:03:13.150 --> 00:03:15.960 align:start position:0%
us try to convert it to the equivalent
DFA<00:03:13.840><c> so</c><00:03:14.650><c> for</c><00:03:14.920><c> that</c><00:03:15.040><c> let</c><00:03:15.220><c> us</c><00:03:15.250><c> draw</c><00:03:15.610><c> the</c><00:03:15.640><c> state</c>

00:03:15.960 --> 00:03:15.970 align:start position:0%
DFA so for that let us draw the state
 

00:03:15.970 --> 00:03:18.449 align:start position:0%
DFA so for that let us draw the state
transition<00:03:16.450><c> diagram</c><00:03:16.810><c> for</c><00:03:17.050><c> the</c><00:03:17.310><c> equivalent</c><00:03:18.310><c> in</c>

00:03:18.449 --> 00:03:18.459 align:start position:0%
transition diagram for the equivalent in
 

00:03:18.459 --> 00:03:20.610 align:start position:0%
transition diagram for the equivalent in
DFA<00:03:18.940><c> now</c><00:03:19.540><c> what</c><00:03:19.720><c> we</c><00:03:19.840><c> are</c><00:03:19.930><c> going</c><00:03:20.050><c> to</c><00:03:20.140><c> design</c><00:03:20.470><c> is</c>

00:03:20.610 --> 00:03:20.620 align:start position:0%
DFA now what we are going to design is
 

00:03:20.620 --> 00:03:26.310 align:start position:0%
DFA now what we are going to design is
the<00:03:22.110><c> DFA</c><00:03:23.400><c> so</c><00:03:24.400><c> let</c><00:03:24.550><c> us</c><00:03:24.580><c> try</c><00:03:24.790><c> to</c><00:03:24.850><c> convert</c><00:03:25.330><c> this</c><00:03:25.750><c> to</c>

00:03:26.310 --> 00:03:26.320 align:start position:0%
the DFA so let us try to convert this to
 

00:03:26.320 --> 00:03:29.040 align:start position:0%
the DFA so let us try to convert this to
its<00:03:26.500><c> equivalent</c><00:03:26.830><c> state</c><00:03:27.760><c> transition</c><00:03:28.300><c> table</c>

00:03:29.040 --> 00:03:29.050 align:start position:0%
its equivalent state transition table
 

00:03:29.050 --> 00:03:32.130 align:start position:0%
its equivalent state transition table
for<00:03:29.410><c> DFA</c><00:03:30.430><c> for</c><00:03:31.030><c> that</c><00:03:31.209><c> again</c><00:03:31.480><c> I'll</c><00:03:31.660><c> have</c><00:03:31.870><c> my</c>

00:03:32.130 --> 00:03:32.140 align:start position:0%
for DFA for that again I'll have my
 

00:03:32.140 --> 00:03:36.720 align:start position:0%
for DFA for that again I'll have my
inputs<00:03:32.890><c> 0</c><00:03:33.600><c> &amp;</c><00:03:34.600><c> 1</c><00:03:34.630><c> and</c><00:03:35.320><c> first</c><00:03:36.310><c> of</c><00:03:36.459><c> all</c><00:03:36.610><c> let</c><00:03:36.700><c> me</c>

00:03:36.720 --> 00:03:36.730 align:start position:0%
inputs 0 &amp; 1 and first of all let me
 

00:03:36.730 --> 00:03:41.340 align:start position:0%
inputs 0 &amp; 1 and first of all let me
start<00:03:37.030><c> with</c><00:03:37.180><c> state</c><00:03:38.019><c> a</c><00:03:39.090><c> let</c><00:03:40.090><c> us</c><00:03:40.239><c> make</c><00:03:41.230><c> the</c>

00:03:41.340 --> 00:03:41.350 align:start position:0%
start with state a let us make the
 

00:03:41.350 --> 00:03:42.780 align:start position:0%
start with state a let us make the
transition<00:03:41.769><c> table</c><00:03:41.920><c> by</c><00:03:42.160><c> looking</c><00:03:42.549><c> at</c><00:03:42.640><c> this</c>

00:03:42.780 --> 00:03:42.790 align:start position:0%
transition table by looking at this
 

00:03:42.790 --> 00:03:45.090 align:start position:0%
transition table by looking at this
table<00:03:43.000><c> a</c><00:03:43.360><c> on</c><00:03:43.780><c> getting</c><00:03:44.080><c> input</c><00:03:44.380><c> 0</c><00:03:44.620><c> where</c><00:03:44.830><c> does</c><00:03:44.980><c> it</c>

00:03:45.090 --> 00:03:45.100 align:start position:0%
table a on getting input 0 where does it
 

00:03:45.100 --> 00:03:50.000 align:start position:0%
table a on getting input 0 where does it
go<00:03:45.250><c> it</c><00:03:45.489><c> goes</c><00:03:45.760><c> to</c><00:03:46.030><c> a</c><00:03:46.180><c> itself</c><00:03:46.769><c> goes</c><00:03:47.769><c> to</c><00:03:48.299><c> itself</c>

00:03:50.000 --> 00:03:50.010 align:start position:0%
go it goes to a itself goes to itself
 

00:03:50.010 --> 00:03:53.580 align:start position:0%
go it goes to a itself goes to itself
and<00:03:51.010><c> a</c><00:03:51.850><c> on</c><00:03:52.360><c> getting</c><00:03:52.660><c> input</c><00:03:52.930><c> 1</c><00:03:53.140><c> where</c><00:03:53.320><c> does</c><00:03:53.470><c> it</c>

00:03:53.580 --> 00:03:53.590 align:start position:0%
and a on getting input 1 where does it
 

00:03:53.590 --> 00:03:55.860 align:start position:0%
and a on getting input 1 where does it
go<00:03:53.769><c> on</c><00:03:53.920><c> getting</c><00:03:54.190><c> input</c><00:03:54.400><c> 1</c><00:03:54.700><c> it</c><00:03:54.850><c> goes</c><00:03:55.060><c> to</c><00:03:55.120><c> two</c>

00:03:55.860 --> 00:03:55.870 align:start position:0%
go on getting input 1 it goes to two
 

00:03:55.870 --> 00:03:59.400 align:start position:0%
go on getting input 1 it goes to two
states<00:03:56.230><c> a</c><00:03:56.440><c> and</c><00:03:56.860><c> B</c><00:03:57.190><c> but</c><00:03:57.640><c> this</c><00:03:58.000><c> is</c><00:03:58.209><c> a</c><00:03:58.239><c> DFA</c><00:03:59.049><c> in</c><00:03:59.290><c> a</c>

00:03:59.400 --> 00:03:59.410 align:start position:0%
states a and B but this is a DFA in a
 

00:03:59.410 --> 00:04:02.220 align:start position:0%
states a and B but this is a DFA in a
DFA<00:03:59.950><c> a</c><00:04:00.190><c> state</c><00:04:01.090><c> on</c><00:04:01.269><c> getting</c><00:04:01.600><c> a</c><00:04:01.720><c> particular</c>

00:04:02.220 --> 00:04:02.230 align:start position:0%
DFA a state on getting a particular
 

00:04:02.230 --> 00:04:04.740 align:start position:0%
DFA a state on getting a particular
input<00:04:02.410><c> it</c><00:04:02.799><c> can</c><00:04:02.830><c> go</c><00:04:03.220><c> only</c><00:04:03.400><c> to</c><00:04:03.610><c> one</c><00:04:04.269><c> state</c><00:04:04.600><c> it</c>

00:04:04.740 --> 00:04:04.750 align:start position:0%
input it can go only to one state it
 

00:04:04.750 --> 00:04:07.110 align:start position:0%
input it can go only to one state it
cannot<00:04:04.989><c> go</c><00:04:05.230><c> to</c><00:04:05.290><c> more</c><00:04:05.830><c> than</c><00:04:05.860><c> one</c><00:04:06.040><c> states</c><00:04:06.489><c> so</c><00:04:06.880><c> I</c>

00:04:07.110 --> 00:04:07.120 align:start position:0%
cannot go to more than one states so I
 

00:04:07.120 --> 00:04:10.080 align:start position:0%
cannot go to more than one states so I
cannot<00:04:07.690><c> send</c><00:04:07.989><c> it</c><00:04:08.109><c> to</c><00:04:08.260><c> two</c><00:04:08.470><c> states</c><00:04:08.769><c> a</c><00:04:08.950><c> and</c><00:04:09.010><c> B</c><00:04:09.430><c> so</c>

00:04:10.080 --> 00:04:10.090 align:start position:0%
cannot send it to two states a and B so
 

00:04:10.090 --> 00:04:11.949 align:start position:0%
cannot send it to two states a and B so
what<00:04:10.299><c> I</c><00:04:10.329><c> will</c><00:04:10.510><c> do</c><00:04:10.780><c> here</c><00:04:10.810><c> is</c><00:04:11.079><c> that</c>

00:04:11.949 --> 00:04:11.959 align:start position:0%
what I will do here is that
 

00:04:11.959 --> 00:04:14.350 align:start position:0%
what I will do here is that
I<00:04:11.989><c> will</c><00:04:12.290><c> combine</c><00:04:12.560><c> these</c><00:04:12.980><c> two</c><00:04:13.280><c> states</c><00:04:13.640><c> a</c><00:04:13.819><c> and</c><00:04:14.180><c> B</c>

00:04:14.350 --> 00:04:14.360 align:start position:0%
I will combine these two states a and B
 

00:04:14.360 --> 00:04:16.870 align:start position:0%
I will combine these two states a and B
and<00:04:14.689><c> I</c><00:04:14.840><c> will</c><00:04:14.989><c> make</c><00:04:15.200><c> them</c><00:04:15.409><c> one</c><00:04:15.709><c> state</c><00:04:16.070><c> and</c><00:04:16.340><c> I</c>

00:04:16.870 --> 00:04:16.880 align:start position:0%
and I will make them one state and I
 

00:04:16.880 --> 00:04:23.529 align:start position:0%
and I will make them one state and I
will<00:04:16.940><c> call</c><00:04:17.299><c> it</c><00:04:17.329><c> a</c><00:04:18.549><c> B</c><00:04:20.350><c> all</c><00:04:21.350><c> right</c><00:04:21.590><c> so</c><00:04:21.650><c> a</c><00:04:22.310><c> B</c><00:04:23.210><c> is</c><00:04:23.330><c> not</c>

00:04:23.529 --> 00:04:23.539 align:start position:0%
will call it a B all right so a B is not
 

00:04:23.539 --> 00:04:27.879 align:start position:0%
will call it a B all right so a B is not
two<00:04:23.780><c> States</c><00:04:24.110><c> but</c><00:04:24.410><c> a</c><00:04:24.620><c> B</c><00:04:24.820><c> is</c><00:04:25.820><c> a</c><00:04:25.930><c> single</c><00:04:26.930><c> state</c><00:04:27.199><c> so</c>

00:04:27.879 --> 00:04:27.889 align:start position:0%
two States but a B is a single state so
 

00:04:27.889 --> 00:04:37.260 align:start position:0%
two States but a B is a single state so
a<00:04:28.160><c> B</c><00:04:29.000><c> it</c><00:04:29.750><c> is</c><00:04:29.990><c> a</c><00:04:30.400><c> single</c><00:04:31.400><c> state</c><00:04:33.310><c> single</c><00:04:34.389><c> state</c>

00:04:37.260 --> 00:04:37.270 align:start position:0%
a B it is a single state single state
 

00:04:37.270 --> 00:04:39.640 align:start position:0%
a B it is a single state single state
okay<00:04:38.270><c> so</c><00:04:38.330><c> coming</c><00:04:38.690><c> to</c><00:04:38.810><c> the</c><00:04:38.990><c> next</c><00:04:39.020><c> state</c><00:04:39.410><c> the</c>

00:04:39.640 --> 00:04:39.650 align:start position:0%
okay so coming to the next state the
 

00:04:39.650 --> 00:04:41.260 align:start position:0%
okay so coming to the next state the
next<00:04:39.830><c> state</c><00:04:39.949><c> in</c><00:04:40.190><c> this</c><00:04:40.310><c> transition</c><00:04:40.789><c> table</c><00:04:40.970><c> is</c>

00:04:41.260 --> 00:04:41.270 align:start position:0%
next state in this transition table is
 

00:04:41.270 --> 00:04:44.890 align:start position:0%
next state in this transition table is
state<00:04:42.050><c> B</c><00:04:42.320><c> but</c><00:04:43.039><c> can</c><00:04:43.460><c> we</c><00:04:43.610><c> directly</c><00:04:44.419><c> write</c><00:04:44.600><c> state</c>

00:04:44.890 --> 00:04:44.900 align:start position:0%
state B but can we directly write state
 

00:04:44.900 --> 00:04:45.520 align:start position:0%
state B but can we directly write state
B<00:04:45.110><c> here</c>

00:04:45.520 --> 00:04:45.530 align:start position:0%
B here
 

00:04:45.530 --> 00:04:47.650 align:start position:0%
B here
before<00:04:46.190><c> writing</c><00:04:46.310><c> that</c><00:04:46.610><c> state</c><00:04:47.210><c> B</c><00:04:47.389><c> directly</c>

00:04:47.650 --> 00:04:47.660 align:start position:0%
before writing that state B directly
 

00:04:47.660 --> 00:04:49.870 align:start position:0%
before writing that state B directly
just<00:04:48.470><c> look</c><00:04:48.800><c> at</c><00:04:48.949><c> these</c><00:04:49.100><c> two</c><00:04:49.160><c> states</c><00:04:49.610><c> that</c><00:04:49.699><c> you</c>

00:04:49.870 --> 00:04:49.880 align:start position:0%
just look at these two states that you
 

00:04:49.880 --> 00:04:51.580 align:start position:0%
just look at these two states that you
have<00:04:49.940><c> written</c><00:04:50.180><c> and</c><00:04:50.449><c> see</c><00:04:50.690><c> if</c><00:04:50.900><c> state</c><00:04:51.229><c> B</c><00:04:51.440><c> is</c>

00:04:51.580 --> 00:04:51.590 align:start position:0%
have written and see if state B is
 

00:04:51.590 --> 00:04:53.890 align:start position:0%
have written and see if state B is
reachable<00:04:52.010><c> from</c><00:04:52.130><c> any</c><00:04:52.490><c> of</c><00:04:52.639><c> these</c><00:04:52.820><c> states</c><00:04:53.240><c> we</c>

00:04:53.890 --> 00:04:53.900 align:start position:0%
reachable from any of these states we
 

00:04:53.900 --> 00:04:55.870 align:start position:0%
reachable from any of these states we
see<00:04:54.139><c> that</c><00:04:54.350><c> B</c><00:04:54.680><c> cannot</c><00:04:55.010><c> be</c><00:04:55.190><c> reached</c><00:04:55.400><c> from</c><00:04:55.639><c> here</c>

00:04:55.870 --> 00:04:55.880 align:start position:0%
see that B cannot be reached from here
 

00:04:55.880 --> 00:04:57.760 align:start position:0%
see that B cannot be reached from here
anywhere<00:04:56.270><c> you</c><00:04:56.479><c> don't</c><00:04:56.720><c> see</c><00:04:56.930><c> be</c><00:04:57.139><c> anywhere</c><00:04:57.530><c> so</c>

00:04:57.760 --> 00:04:57.770 align:start position:0%
anywhere you don't see be anywhere so
 

00:04:57.770 --> 00:04:59.980 align:start position:0%
anywhere you don't see be anywhere so
the<00:04:58.490><c> only</c><00:04:58.639><c> state</c><00:04:58.970><c> that</c><00:04:59.000><c> can</c><00:04:59.300><c> be</c><00:04:59.449><c> reached</c><00:04:59.630><c> is</c><00:04:59.840><c> a</c>

00:04:59.980 --> 00:04:59.990 align:start position:0%
the only state that can be reached is a
 

00:04:59.990 --> 00:05:02.710 align:start position:0%
the only state that can be reached is a
and<00:05:00.350><c> a</c><00:05:00.949><c> B</c><00:05:01.220><c> and</c><00:05:01.430><c> we</c><00:05:01.760><c> have</c><00:05:01.789><c> already</c><00:05:02.000><c> written</c><00:05:02.539><c> for</c>

00:05:02.710 --> 00:05:02.720 align:start position:0%
and a B and we have already written for
 

00:05:02.720 --> 00:05:04.900 align:start position:0%
and a B and we have already written for
a<00:05:03.080><c> so</c><00:05:03.680><c> the</c><00:05:03.830><c> next</c><00:05:04.039><c> state</c><00:05:04.280><c> that</c><00:05:04.460><c> we</c><00:05:04.580><c> have</c><00:05:04.760><c> to</c>

00:05:04.900 --> 00:05:04.910 align:start position:0%
a so the next state that we have to
 

00:05:04.910 --> 00:05:07.810 align:start position:0%
a so the next state that we have to
discuss<00:05:05.270><c> is</c><00:05:05.300><c> a</c><00:05:05.630><c> B</c><00:05:06.289><c> not</c><00:05:06.710><c> B</c><00:05:06.740><c> all</c><00:05:07.250><c> right</c><00:05:07.460><c> should</c><00:05:07.699><c> be</c>

00:05:07.810 --> 00:05:07.820 align:start position:0%
discuss is a B not B all right should be
 

00:05:07.820 --> 00:05:12.089 align:start position:0%
discuss is a B not B all right should be
a<00:05:07.849><c> B</c><00:05:08.620><c> so</c><00:05:09.620><c> we</c><00:05:09.830><c> will</c><00:05:09.919><c> discuss</c><00:05:10.310><c> about</c><00:05:10.460><c> state</c><00:05:10.940><c> a</c><00:05:11.150><c> B</c>

00:05:12.089 --> 00:05:12.099 align:start position:0%
a B so we will discuss about state a B
 

00:05:12.099 --> 00:05:15.400 align:start position:0%
a B so we will discuss about state a B
now<00:05:13.099><c> in</c><00:05:13.550><c> order</c><00:05:13.699><c> to</c><00:05:13.820><c> know</c><00:05:14.060><c> where</c><00:05:14.479><c> does</c><00:05:14.690><c> a</c><00:05:14.870><c> B</c><00:05:15.169><c> go</c>

00:05:15.400 --> 00:05:15.410 align:start position:0%
now in order to know where does a B go
 

00:05:15.410 --> 00:05:17.350 align:start position:0%
now in order to know where does a B go
on<00:05:15.530><c> getting</c><00:05:15.740><c> input</c><00:05:15.949><c> 0</c><00:05:16.340><c> and</c><00:05:16.520><c> 1</c><00:05:16.699><c> we</c><00:05:16.910><c> have</c><00:05:17.030><c> to</c><00:05:17.150><c> come</c>

00:05:17.350 --> 00:05:17.360 align:start position:0%
on getting input 0 and 1 we have to come
 

00:05:17.360 --> 00:05:19.960 align:start position:0%
on getting input 0 and 1 we have to come
to<00:05:17.510><c> this</c><00:05:17.630><c> table</c><00:05:17.840><c> and</c><00:05:18.139><c> we</c><00:05:19.130><c> see</c><00:05:19.160><c> that</c><00:05:19.430><c> this</c><00:05:19.639><c> is</c><00:05:19.699><c> a</c>

00:05:19.960 --> 00:05:19.970 align:start position:0%
to this table and we see that this is a
 

00:05:19.970 --> 00:05:23.200 align:start position:0%
to this table and we see that this is a
B<00:05:20.360><c> so</c><00:05:20.660><c> you</c><00:05:20.720><c> have</c><00:05:20.990><c> to</c><00:05:21.110><c> look</c><00:05:21.289><c> at</c><00:05:21.470><c> both</c><00:05:21.800><c> a</c><00:05:22.099><c> and</c><00:05:22.460><c> B</c><00:05:22.970><c> in</c>

00:05:23.200 --> 00:05:23.210 align:start position:0%
B so you have to look at both a and B in
 

00:05:23.210 --> 00:05:27.339 align:start position:0%
B so you have to look at both a and B in
this<00:05:23.479><c> table</c><00:05:23.720><c> and</c><00:05:24.010><c> see</c><00:05:25.010><c> where</c><00:05:25.250><c> a</c><00:05:25.870><c> both</c><00:05:26.870><c> a</c><00:05:27.020><c> and</c><00:05:27.080><c> B</c>

00:05:27.339 --> 00:05:27.349 align:start position:0%
this table and see where a both a and B
 

00:05:27.349 --> 00:05:30.070 align:start position:0%
this table and see where a both a and B
a<00:05:27.380><c> goes</c><00:05:27.560><c> on</c><00:05:27.770><c> getting</c><00:05:28.099><c> input</c><00:05:28.430><c> 0</c><00:05:28.639><c> and</c><00:05:28.880><c> 1</c><00:05:29.120><c> so</c><00:05:29.330><c> in</c>

00:05:30.070 --> 00:05:30.080 align:start position:0%
a goes on getting input 0 and 1 so in
 

00:05:30.080 --> 00:05:32.320 align:start position:0%
a goes on getting input 0 and 1 so in
order<00:05:30.229><c> to</c><00:05:30.380><c> see</c><00:05:30.650><c> where</c><00:05:31.280><c> does</c><00:05:31.460><c> a</c><00:05:31.639><c> B</c><00:05:31.909><c> go</c><00:05:32.180><c> on</c>

00:05:32.320 --> 00:05:32.330 align:start position:0%
order to see where does a B go on
 

00:05:32.330 --> 00:05:34.750 align:start position:0%
order to see where does a B go on
getting<00:05:32.539><c> input</c><00:05:32.900><c> 0</c><00:05:33.229><c> you</c><00:05:33.800><c> have</c><00:05:33.830><c> to</c><00:05:34.159><c> perform</c><00:05:34.520><c> the</c>

00:05:34.750 --> 00:05:34.760 align:start position:0%
getting input 0 you have to perform the
 

00:05:34.760 --> 00:05:37.719 align:start position:0%
getting input 0 you have to perform the
Union<00:05:35.180><c> operation</c><00:05:35.510><c> of</c><00:05:35.840><c> KMP</c><00:05:36.590><c> we</c><00:05:37.280><c> have</c><00:05:37.400><c> already</c>

00:05:37.719 --> 00:05:37.729 align:start position:0%
Union operation of KMP we have already
 

00:05:37.729 --> 00:05:39.370 align:start position:0%
Union operation of KMP we have already
discussed<00:05:38.270><c> Union</c><00:05:38.720><c> operation</c><00:05:39.139><c> in</c><00:05:39.289><c> the</c>

00:05:39.370 --> 00:05:39.380 align:start position:0%
discussed Union operation in the
 

00:05:39.380 --> 00:05:41.170 align:start position:0%
discussed Union operation in the
previous<00:05:39.680><c> lectures</c><00:05:40.070><c> so</c><00:05:40.580><c> I</c><00:05:40.610><c> hope</c><00:05:40.940><c> you</c><00:05:41.060><c> remember</c>

00:05:41.170 --> 00:05:41.180 align:start position:0%
previous lectures so I hope you remember
 

00:05:41.180 --> 00:05:44.379 align:start position:0%
previous lectures so I hope you remember
that<00:05:41.449><c> so</c><00:05:42.169><c> in</c><00:05:42.530><c> order</c><00:05:42.680><c> to</c><00:05:42.830><c> see</c><00:05:43.130><c> where</c><00:05:43.880><c> does</c><00:05:44.030><c> a</c><00:05:44.210><c> big</c>

00:05:44.379 --> 00:05:44.389 align:start position:0%
that so in order to see where does a big
 

00:05:44.389 --> 00:05:47.020 align:start position:0%
that so in order to see where does a big
one<00:05:44.570><c> getting</c><00:05:44.870><c> input</c><00:05:45.020><c> 0</c><00:05:45.380><c> we</c><00:05:45.620><c> perform</c><00:05:46.099><c> the</c><00:05:46.280><c> union</c>

00:05:47.020 --> 00:05:47.030 align:start position:0%
one getting input 0 we perform the union
 

00:05:47.030 --> 00:05:49.330 align:start position:0%
one getting input 0 we perform the union
of<00:05:47.180><c> a</c><00:05:47.360><c> and</c><00:05:47.449><c> B</c><00:05:47.840><c> so</c><00:05:48.110><c> in</c><00:05:48.229><c> union</c><00:05:48.500><c> of</c><00:05:48.590><c> a</c><00:05:48.830><c> and</c><00:05:48.860><c> B</c><00:05:49.099><c> means</c>

00:05:49.330 --> 00:05:49.340 align:start position:0%
of a and B so in union of a and B means
 

00:05:49.340 --> 00:05:52.149 align:start position:0%
of a and B so in union of a and B means
union<00:05:49.729><c> of</c><00:05:49.880><c> a</c><00:05:50.060><c> and</c><00:05:50.750><c> Phi</c><00:05:51.229><c> and</c><00:05:51.530><c> union</c><00:05:51.830><c> of</c><00:05:51.949><c> a</c><00:05:52.130><c> and</c>

00:05:52.149 --> 00:05:52.159 align:start position:0%
union of a and Phi and union of a and
 

00:05:52.159 --> 00:05:58.839 align:start position:0%
union of a and Phi and union of a and
Phi<00:05:52.460><c> is</c><00:05:52.520><c> a</c><00:05:52.900><c> it's</c><00:05:53.900><c> only</c><00:05:54.050><c> a</c><00:05:55.750><c> alright</c><00:05:56.780><c> and</c><00:05:57.849><c> where</c>

00:05:58.839 --> 00:05:58.849 align:start position:0%
Phi is a it's only a alright and where
 

00:05:58.849 --> 00:06:01.810 align:start position:0%
Phi is a it's only a alright and where
does<00:05:58.970><c> a</c><00:05:59.150><c> B</c><00:05:59.300><c> go</c><00:05:59.449><c> and</c><00:05:59.570><c> getting</c><00:05:59.840><c> input</c><00:05:59.990><c> 1</c><00:06:00.380><c> a</c><00:06:00.669><c> B</c><00:06:01.669><c> on</c>

00:06:01.810 --> 00:06:01.820 align:start position:0%
does a B go and getting input 1 a B on
 

00:06:01.820 --> 00:06:03.370 align:start position:0%
does a B go and getting input 1 a B on
getting<00:06:02.120><c> input</c><00:06:02.270><c> 1</c><00:06:02.630><c> I</c><00:06:02.659><c> have</c><00:06:02.870><c> to</c><00:06:02.990><c> perform</c><00:06:03.139><c> the</c>

00:06:03.370 --> 00:06:03.380 align:start position:0%
getting input 1 I have to perform the
 

00:06:03.380 --> 00:06:05.500 align:start position:0%
getting input 1 I have to perform the
Union<00:06:03.650><c> operations</c><00:06:04.070><c> of</c><00:06:04.220><c> a</c><00:06:04.430><c> and</c><00:06:04.550><c> B</c><00:06:04.669><c> on</c><00:06:05.150><c> getting</c>

00:06:05.500 --> 00:06:05.510 align:start position:0%
Union operations of a and B on getting
 

00:06:05.510 --> 00:06:08.290 align:start position:0%
Union operations of a and B on getting
input<00:06:05.810><c> 1</c><00:06:05.960><c> Union</c><00:06:06.229><c> operation</c><00:06:06.620><c> of</c><00:06:06.800><c> a</c><00:06:06.979><c> B</c><00:06:07.729><c> and</c><00:06:07.760><c> Phi</c>

00:06:08.290 --> 00:06:08.300 align:start position:0%
input 1 Union operation of a B and Phi
 

00:06:08.300 --> 00:06:10.180 align:start position:0%
input 1 Union operation of a B and Phi
you<00:06:08.510><c> know</c><00:06:08.750><c> operation</c><00:06:09.050><c> of</c><00:06:09.139><c> a</c><00:06:09.289><c> B</c><00:06:09.470><c> and</c><00:06:09.500><c> 5</c><00:06:09.830><c> will</c><00:06:09.979><c> be</c>

00:06:10.180 --> 00:06:10.190 align:start position:0%
you know operation of a B and 5 will be
 

00:06:10.190 --> 00:06:17.960 align:start position:0%
you know operation of a B and 5 will be
a<00:06:10.370><c> be</c><00:06:13.120><c> he</c><00:06:14.120><c> be</c><00:06:16.539><c> okay</c>

00:06:17.960 --> 00:06:17.970 align:start position:0%
a be he be okay
 

00:06:17.970 --> 00:06:21.500 align:start position:0%
a be he be okay
so<00:06:18.330><c> I</c><00:06:18.570><c> have</c><00:06:18.960><c> written</c><00:06:19.110><c> for</c><00:06:19.320><c> a</c><00:06:19.500><c> B</c><00:06:19.800><c> now</c><00:06:20.340><c> do</c><00:06:21.180><c> I</c><00:06:21.270><c> have</c>

00:06:21.500 --> 00:06:21.510 align:start position:0%
so I have written for a B now do I have
 

00:06:21.510 --> 00:06:23.480 align:start position:0%
so I have written for a B now do I have
to<00:06:21.600><c> write</c><00:06:21.780><c> for</c><00:06:21.990><c> state</c><00:06:22.200><c> B</c><00:06:22.440><c> if</c><00:06:22.680><c> I</c><00:06:23.040><c> look</c><00:06:23.250><c> here</c>

00:06:23.480 --> 00:06:23.490 align:start position:0%
to write for state B if I look here
 

00:06:23.490 --> 00:06:25.490 align:start position:0%
to write for state B if I look here
there<00:06:23.670><c> is</c><00:06:23.790><c> no</c><00:06:24.000><c> way</c><00:06:24.210><c> I</c><00:06:24.240><c> can</c><00:06:24.570><c> reach</c><00:06:24.810><c> state</c><00:06:25.080><c> B</c><00:06:25.290><c> the</c>

00:06:25.490 --> 00:06:25.500 align:start position:0%
there is no way I can reach state B the
 

00:06:25.500 --> 00:06:28.340 align:start position:0%
there is no way I can reach state B the
only<00:06:25.800><c> way</c><00:06:25.920><c> I</c><00:06:25.950><c> can</c><00:06:26.220><c> reach</c><00:06:26.430><c> is</c><00:06:26.610><c> through</c><00:06:26.970><c> a</c><00:06:27.210><c> B</c><00:06:27.900><c> so</c>

00:06:28.340 --> 00:06:28.350 align:start position:0%
only way I can reach is through a B so
 

00:06:28.350 --> 00:06:30.560 align:start position:0%
only way I can reach is through a B so
you<00:06:28.410><c> don't</c><00:06:28.800><c> need</c><00:06:28.980><c> to</c><00:06:29.130><c> write</c><00:06:29.700><c> for</c><00:06:29.730><c> this</c><00:06:29.970><c> state</c><00:06:30.360><c> B</c>

00:06:30.560 --> 00:06:30.570 align:start position:0%
you don't need to write for this state B
 

00:06:30.570 --> 00:06:33.530 align:start position:0%
you don't need to write for this state B
this<00:06:31.230><c> transition</c><00:06:31.800><c> table</c><00:06:32.190><c> for</c><00:06:32.460><c> this</c><00:06:32.940><c> DFA</c><00:06:33.480><c> is</c>

00:06:33.530 --> 00:06:33.540 align:start position:0%
this transition table for this DFA is
 

00:06:33.540 --> 00:06:36.890 align:start position:0%
this transition table for this DFA is
complete<00:06:34.580><c> okay</c><00:06:35.580><c> so</c><00:06:35.910><c> now</c><00:06:36.300><c> let</c><00:06:36.480><c> us</c><00:06:36.600><c> draw</c><00:06:36.870><c> the</c>

00:06:36.890 --> 00:06:36.900 align:start position:0%
complete okay so now let us draw the
 

00:06:36.900 --> 00:06:39.050 align:start position:0%
complete okay so now let us draw the
state<00:06:37.440><c> transition</c><00:06:37.920><c> diagram</c><00:06:38.310><c> for</c><00:06:38.520><c> this</c><00:06:38.610><c> DFA</c>

00:06:39.050 --> 00:06:39.060 align:start position:0%
state transition diagram for this DFA
 

00:06:39.060 --> 00:06:40.790 align:start position:0%
state transition diagram for this DFA
that<00:06:39.210><c> we</c><00:06:39.360><c> have</c><00:06:39.480><c> designed</c><00:06:39.630><c> so</c><00:06:40.320><c> I</c><00:06:40.350><c> have</c><00:06:40.590><c> two</c>

00:06:40.790 --> 00:06:40.800 align:start position:0%
that we have designed so I have two
 

00:06:40.800 --> 00:06:45.250 align:start position:0%
that we have designed so I have two
states<00:06:41.100><c> a</c><00:06:41.250><c> and</c><00:06:41.610><c> a</c><00:06:41.790><c> B</c><00:06:42.090><c> a</c><00:06:43.130><c> which</c><00:06:44.130><c> is</c><00:06:44.280><c> also</c><00:06:44.430><c> my</c>

00:06:45.250 --> 00:06:45.260 align:start position:0%
states a and a B a which is also my
 

00:06:45.260 --> 00:06:48.320 align:start position:0%
states a and a B a which is also my
starting<00:06:46.260><c> state</c><00:06:46.530><c> or</c><00:06:46.770><c> initial</c><00:06:47.160><c> State</c><00:06:47.460><c> and</c><00:06:47.670><c> then</c>

00:06:48.320 --> 00:06:48.330 align:start position:0%
starting state or initial State and then
 

00:06:48.330 --> 00:06:52.550 align:start position:0%
starting state or initial State and then
a<00:06:48.510><c> B</c><00:06:49.020><c> a</c><00:06:49.230><c> B</c><00:06:50.010><c> is</c><00:06:50.070><c> a</c><00:06:50.190><c> single</c><00:06:50.910><c> state</c><00:06:51.150><c> and</c><00:06:51.420><c> also</c><00:06:52.200><c> a</c><00:06:52.230><c> B</c>

00:06:52.550 --> 00:06:52.560 align:start position:0%
a B a B is a single state and also a B
 

00:06:52.560 --> 00:06:56.210 align:start position:0%
a B a B is a single state and also a B
will<00:06:52.740><c> be</c><00:06:52.890><c> my</c><00:06:53.300><c> final</c><00:06:54.300><c> state</c><00:06:54.870><c> we</c><00:06:55.770><c> will</c><00:06:55.890><c> be</c><00:06:56.040><c> my</c>

00:06:56.210 --> 00:06:56.220 align:start position:0%
will be my final state we will be my
 

00:06:56.220 --> 00:06:59.240 align:start position:0%
will be my final state we will be my
final<00:06:56.970><c> state</c><00:06:57.420><c> and</c><00:06:57.600><c> a</c><00:06:58.200><c> on</c><00:06:58.470><c> getting</c><00:06:58.740><c> input</c><00:06:59.010><c> 0</c>

00:06:59.240 --> 00:06:59.250 align:start position:0%
final state and a on getting input 0
 

00:06:59.250 --> 00:07:01.910 align:start position:0%
final state and a on getting input 0
where<00:06:59.430><c> does</c><00:06:59.550><c> it</c><00:06:59.670><c> go</c><00:06:59.820><c> it</c><00:06:59.940><c> goes</c><00:07:00.150><c> to</c><00:07:00.650><c> itself</c><00:07:01.650><c> a</c><00:07:01.800><c> on</c>

00:07:01.910 --> 00:07:01.920 align:start position:0%
where does it go it goes to itself a on
 

00:07:01.920 --> 00:07:05.870 align:start position:0%
where does it go it goes to itself a on
getting<00:07:02.280><c> input</c><00:07:02.870><c> 0</c><00:07:03.870><c> goes</c><00:07:04.410><c> to</c><00:07:04.620><c> a</c><00:07:04.650><c> itself</c><00:07:05.190><c> and</c>

00:07:05.870 --> 00:07:05.880 align:start position:0%
getting input 0 goes to a itself and
 

00:07:05.880 --> 00:07:08.120 align:start position:0%
getting input 0 goes to a itself and
then<00:07:06.150><c> a</c><00:07:06.360><c> on</c><00:07:06.840><c> getting</c><00:07:07.140><c> input</c><00:07:07.440><c> 1</c><00:07:07.650><c> where</c><00:07:07.830><c> does</c><00:07:08.010><c> it</c>

00:07:08.120 --> 00:07:08.130 align:start position:0%
then a on getting input 1 where does it
 

00:07:08.130 --> 00:07:13.910 align:start position:0%
then a on getting input 1 where does it
go<00:07:08.280><c> it</c><00:07:08.400><c> goes</c><00:07:08.580><c> to</c><00:07:08.910><c> a</c><00:07:09.090><c> B</c><00:07:09.780><c> in</c><00:07:10.170><c> on</c><00:07:10.410><c> getting</c><00:07:11.210><c> input</c><00:07:12.920><c> 1</c>

00:07:13.910 --> 00:07:13.920 align:start position:0%
go it goes to a B in on getting input 1
 

00:07:13.920 --> 00:07:16.760 align:start position:0%
go it goes to a B in on getting input 1
it<00:07:14.280><c> goes</c><00:07:14.580><c> to</c><00:07:14.640><c> a</c><00:07:15.060><c> B</c><00:07:15.240><c> and</c><00:07:15.480><c> a</c><00:07:16.080><c> B</c><00:07:16.110><c> on</c><00:07:16.350><c> getting</c><00:07:16.620><c> input</c>

00:07:16.760 --> 00:07:16.770 align:start position:0%
it goes to a B and a B on getting input
 

00:07:16.770 --> 00:07:20.750 align:start position:0%
it goes to a B and a B on getting input
0<00:07:17.430><c> where</c><00:07:17.640><c> does</c><00:07:17.790><c> it</c><00:07:17.910><c> go</c><00:07:18.060><c> it</c><00:07:18.240><c> goes</c><00:07:18.420><c> to</c><00:07:18.780><c> a</c><00:07:18.990><c> a</c><00:07:19.980><c> B</c><00:07:20.610><c> on</c>

00:07:20.750 --> 00:07:20.760 align:start position:0%
0 where does it go it goes to a a B on
 

00:07:20.760 --> 00:07:27.350 align:start position:0%
0 where does it go it goes to a a B on
getting<00:07:21.150><c> input</c><00:07:23.840><c> 0</c><00:07:24.840><c> goes</c><00:07:25.350><c> to</c><00:07:25.380><c> state</c><00:07:26.310><c> a</c><00:07:26.520><c> maybe</c><00:07:27.270><c> on</c>

00:07:27.350 --> 00:07:27.360 align:start position:0%
getting input 0 goes to state a maybe on
 

00:07:27.360 --> 00:07:28.880 align:start position:0%
getting input 0 goes to state a maybe on
getting<00:07:27.660><c> input</c><00:07:27.930><c> 1</c><00:07:28.110><c> where</c><00:07:28.290><c> does</c><00:07:28.410><c> it</c><00:07:28.530><c> go</c>

00:07:28.880 --> 00:07:28.890 align:start position:0%
getting input 1 where does it go
 

00:07:28.890 --> 00:07:33.590 align:start position:0%
getting input 1 where does it go
it<00:07:29.160><c> stays</c><00:07:29.490><c> in</c><00:07:29.520><c> a</c><00:07:29.940><c> B</c><00:07:30.600><c> itself</c><00:07:30.930><c> a</c><00:07:31.169><c> B</c><00:07:31.919><c> on</c><00:07:32.600><c> getting</c>

00:07:33.590 --> 00:07:33.600 align:start position:0%
it stays in a B itself a B on getting
 

00:07:33.600 --> 00:07:39.260 align:start position:0%
it stays in a B itself a B on getting
input<00:07:34.080><c> 1</c><00:07:35.300><c> it</c><00:07:36.300><c> stays</c><00:07:36.690><c> in</c><00:07:36.930><c> a</c><00:07:37.080><c> B</c><00:07:37.620><c> itself</c><00:07:37.980><c> so</c><00:07:38.580><c> now</c><00:07:39.210><c> we</c>

00:07:39.260 --> 00:07:39.270 align:start position:0%
input 1 it stays in a B itself so now we
 

00:07:39.270 --> 00:07:42.620 align:start position:0%
input 1 it stays in a B itself so now we
have<00:07:39.540><c> designed</c><00:07:39.900><c> the</c><00:07:40.520><c> DFA</c><00:07:41.520><c> for</c><00:07:41.700><c> this</c><00:07:41.820><c> NFA</c><00:07:42.240><c> the</c>

00:07:42.620 --> 00:07:42.630 align:start position:0%
have designed the DFA for this NFA the
 

00:07:42.630 --> 00:07:44.270 align:start position:0%
have designed the DFA for this NFA the
restrictive<00:07:43.080><c> it</c><00:07:43.169><c> is</c><00:07:43.260><c> complete</c><00:07:43.650><c> I</c><00:07:43.830><c> have</c>

00:07:44.270 --> 00:07:44.280 align:start position:0%
restrictive it is complete I have
 

00:07:44.280 --> 00:07:46.430 align:start position:0%
restrictive it is complete I have
mentioned<00:07:44.760><c> in</c><00:07:44.850><c> state</c><00:07:45.090><c> a</c><00:07:45.330><c> where</c><00:07:45.660><c> it</c><00:07:45.810><c> goes</c><00:07:46.020><c> on</c>

00:07:46.430 --> 00:07:46.440 align:start position:0%
mentioned in state a where it goes on
 

00:07:46.440 --> 00:07:49.670 align:start position:0%
mentioned in state a where it goes on
getting<00:07:46.710><c> input</c><00:07:46.860><c> 0</c><00:07:47.250><c> and</c><00:07:47.490><c> 1</c><00:07:48.080><c> maybe</c><00:07:49.080><c> also</c><00:07:49.320><c> I</c><00:07:49.470><c> have</c>

00:07:49.670 --> 00:07:49.680 align:start position:0%
getting input 0 and 1 maybe also I have
 

00:07:49.680 --> 00:07:51.850 align:start position:0%
getting input 0 and 1 maybe also I have
mentioned<00:07:49.980><c> where</c><00:07:50.400><c> it</c><00:07:50.520><c> goes</c><00:07:50.669><c> on</c><00:07:50.880><c> getting</c><00:07:51.150><c> input</c>

00:07:51.850 --> 00:07:51.860 align:start position:0%
mentioned where it goes on getting input
 

00:07:51.860 --> 00:07:55.400 align:start position:0%
mentioned where it goes on getting input
0<00:07:52.860><c> and</c><00:07:53.100><c> 1</c><00:07:53.610><c> okay</c><00:07:54.210><c> so</c><00:07:54.240><c> it</c><00:07:54.450><c> is</c><00:07:54.540><c> complete</c><00:07:54.900><c> and</c><00:07:55.200><c> let</c>

00:07:55.400 --> 00:07:55.410 align:start position:0%
0 and 1 okay so it is complete and let
 

00:07:55.410 --> 00:07:57.740 align:start position:0%
0 and 1 okay so it is complete and let
us<00:07:55.530><c> see</c><00:07:55.710><c> if</c><00:07:55.740><c> it</c><00:07:56.100><c> is</c><00:07:56.580><c> going</c><00:07:56.850><c> to</c><00:07:57.150><c> accept</c><00:07:57.540><c> the</c><00:07:57.600><c> set</c>

00:07:57.740 --> 00:07:57.750 align:start position:0%
us see if it is going to accept the set
 

00:07:57.750 --> 00:07:59.690 align:start position:0%
us see if it is going to accept the set
of<00:07:57.870><c> all</c><00:07:58.050><c> strings</c><00:07:58.140><c> over</c><00:07:58.470><c> 0</c><00:07:58.830><c> 1</c><00:07:59.010><c> that</c><00:07:59.130><c> ends</c><00:07:59.310><c> with</c><00:07:59.430><c> 1</c>

00:07:59.690 --> 00:07:59.700 align:start position:0%
of all strings over 0 1 that ends with 1
 

00:07:59.700 --> 00:08:03.620 align:start position:0%
of all strings over 0 1 that ends with 1
we<00:08:00.240><c> see</c><00:08:00.450><c> that</c><00:08:00.600><c> whenever</c><00:08:01.160><c> the</c><00:08:02.180><c> last</c><00:08:03.180><c> symbol</c><00:08:03.419><c> is</c>

00:08:03.620 --> 00:08:03.630 align:start position:0%
we see that whenever the last symbol is
 

00:08:03.630 --> 00:08:06.110 align:start position:0%
we see that whenever the last symbol is
1<00:08:03.870><c> it</c><00:08:04.080><c> comes</c><00:08:04.350><c> to</c><00:08:04.530><c> the</c><00:08:04.680><c> final</c><00:08:05.340><c> state</c><00:08:05.580><c> and</c><00:08:05.820><c> when</c>

00:08:06.110 --> 00:08:06.120 align:start position:0%
1 it comes to the final state and when
 

00:08:06.120 --> 00:08:08.480 align:start position:0%
1 it comes to the final state and when
it<00:08:06.240><c> is</c><00:08:06.360><c> 1</c><00:08:06.990><c> it</c><00:08:07.140><c> stays</c><00:08:07.380><c> in</c><00:08:07.590><c> the</c><00:08:07.710><c> final</c><00:08:08.100><c> state</c><00:08:08.310><c> and</c>

00:08:08.480 --> 00:08:08.490 align:start position:0%
it is 1 it stays in the final state and
 

00:08:08.490 --> 00:08:11.720 align:start position:0%
it is 1 it stays in the final state and
if<00:08:09.000><c> it</c><00:08:09.150><c> is</c><00:08:09.240><c> a</c><00:08:09.270><c> 0</c><00:08:09.600><c> it</c><00:08:09.750><c> goes</c><00:08:09.990><c> to</c><00:08:10.230><c> state</c><00:08:11.100><c> a</c><00:08:11.430><c> which</c><00:08:11.610><c> is</c>

00:08:11.720 --> 00:08:11.730 align:start position:0%
if it is a 0 it goes to state a which is
 

00:08:11.730 --> 00:08:13.460 align:start position:0%
if it is a 0 it goes to state a which is
not<00:08:11.880><c> a</c><00:08:11.910><c> final</c><00:08:12.180><c> state</c><00:08:12.480><c> so</c><00:08:12.510><c> it</c><00:08:12.780><c> will</c><00:08:12.900><c> accept</c><00:08:13.260><c> all</c>

00:08:13.460 --> 00:08:13.470 align:start position:0%
not a final state so it will accept all
 

00:08:13.470 --> 00:08:17.180 align:start position:0%
not a final state so it will accept all
the<00:08:13.650><c> strings</c><00:08:13.919><c> that</c><00:08:14.580><c> ends</c><00:08:14.910><c> with</c><00:08:15.600><c> 1</c><00:08:16.230><c> so</c><00:08:16.890><c> this</c><00:08:17.040><c> is</c>

00:08:17.180 --> 00:08:17.190 align:start position:0%
the strings that ends with 1 so this is
 

00:08:17.190 --> 00:08:19.400 align:start position:0%
the strings that ends with 1 so this is
how<00:08:17.370><c> you</c><00:08:17.430><c> convert</c><00:08:18.270><c> the</c><00:08:18.510><c> NFA</c><00:08:19.110><c> to</c><00:08:19.169><c> its</c>

00:08:19.400 --> 00:08:19.410 align:start position:0%
how you convert the NFA to its
 

00:08:19.410 --> 00:08:21.890 align:start position:0%
how you convert the NFA to its
equivalent<00:08:19.620><c> DFA</c><00:08:20.400><c> and</c><00:08:20.730><c> the</c><00:08:21.270><c> method</c><00:08:21.570><c> that</c><00:08:21.720><c> we</c>

00:08:21.890 --> 00:08:21.900 align:start position:0%
equivalent DFA and the method that we
 

00:08:21.900 --> 00:08:24.140 align:start position:0%
equivalent DFA and the method that we
have<00:08:22.050><c> used</c><00:08:22.290><c> here</c><00:08:22.710><c> in</c><00:08:22.860><c> this</c><00:08:22.950><c> example</c><00:08:23.370><c> and</c><00:08:23.700><c> also</c>

00:08:24.140 --> 00:08:24.150 align:start position:0%
have used here in this example and also
 

00:08:24.150 --> 00:08:26.000 align:start position:0%
have used here in this example and also
in<00:08:24.330><c> the</c><00:08:24.419><c> previous</c><00:08:24.780><c> example</c><00:08:25.260><c> for</c><00:08:25.500><c> converting</c>

00:08:26.000 --> 00:08:26.010 align:start position:0%
in the previous example for converting
 

00:08:26.010 --> 00:08:29.470 align:start position:0%
in the previous example for converting
an<00:08:26.160><c> affair</c><00:08:26.490><c> to</c><00:08:26.610><c> DFA</c><00:08:27.090><c> is</c><00:08:27.930><c> known</c><00:08:28.289><c> as</c><00:08:28.560><c> sub</c>

00:08:29.470 --> 00:08:29.480 align:start position:0%
an affair to DFA is known as sub
 

00:08:29.480 --> 00:08:37.170 align:start position:0%
an affair to DFA is known as sub
construction<00:08:30.260><c> method</c><00:08:30.650><c> is</c><00:08:31.520><c> known</c><00:08:31.700><c> as</c><00:08:33.430><c> subset</c>

00:08:37.170 --> 00:08:37.180 align:start position:0%
 
 

00:08:37.180 --> 00:08:42.880 align:start position:0%
 
construction<00:08:39.520><c> method</c><00:08:41.410><c> so</c><00:08:42.410><c> this</c><00:08:42.590><c> is</c><00:08:42.770><c> the</c>

00:08:42.880 --> 00:08:42.890 align:start position:0%
construction method so this is the
 

00:08:42.890 --> 00:08:44.350 align:start position:0%
construction method so this is the
method<00:08:43.040><c> that</c><00:08:43.280><c> we</c><00:08:43.430><c> followed</c><00:08:43.790><c> in</c><00:08:43.910><c> these</c><00:08:44.180><c> two</c>

00:08:44.350 --> 00:08:44.360 align:start position:0%
method that we followed in these two
 

00:08:44.360 --> 00:08:46.540 align:start position:0%
method that we followed in these two
examples<00:08:45.230><c> for</c><00:08:45.350><c> converting</c><00:08:45.860><c> this</c><00:08:46.010><c> an</c><00:08:46.190><c> affair</c>

00:08:46.540 --> 00:08:46.550 align:start position:0%
examples for converting this an affair
 

00:08:46.550 --> 00:08:48.940 align:start position:0%
examples for converting this an affair
to<00:08:46.730><c> the</c><00:08:46.760><c> equivalent</c><00:08:47.690><c> DFA</c><00:08:48.170><c> so</c><00:08:48.500><c> I</c><00:08:48.530><c> hope</c><00:08:48.800><c> this</c>

00:08:48.940 --> 00:08:48.950 align:start position:0%
to the equivalent DFA so I hope this
 

00:08:48.950 --> 00:08:50.980 align:start position:0%
to the equivalent DFA so I hope this
example<00:08:49.250><c> was</c><00:08:49.760><c> clear</c><00:08:50.090><c> to</c><00:08:50.210><c> you</c><00:08:50.330><c> thank</c><00:08:50.840><c> you</c><00:08:50.900><c> for</c>

00:08:50.980 --> 00:08:50.990 align:start position:0%
example was clear to you thank you for
 

00:08:50.990 --> 00:08:52.360 align:start position:0%
example was clear to you thank you for
watching<00:08:51.410><c> and</c><00:08:51.620><c> see</c><00:08:51.740><c> you</c><00:08:51.830><c> in</c><00:08:51.950><c> the</c><00:08:52.040><c> next</c><00:08:52.250><c> one</c>

00:08:52.360 --> 00:08:52.370 align:start position:0%
watching and see you in the next one
 

00:08:52.370 --> 00:08:53.650 align:start position:0%
watching and see you in the next one
where<00:08:52.580><c> we</c><00:08:52.670><c> will</c><00:08:52.790><c> be</c><00:08:52.940><c> discussing</c><00:08:53.300><c> another</c>

00:08:53.650 --> 00:08:53.660 align:start position:0%
where we will be discussing another
 

00:08:53.660 --> 00:08:55.260 align:start position:0%
where we will be discussing another
example

00:08:55.260 --> 00:08:55.270 align:start position:0%
example
 

00:08:55.270 --> 00:08:57.470 align:start position:0%
example
[Applause]

00:08:57.470 --> 00:08:57.480 align:start position:0%
[Applause]
 

00:08:57.480 --> 00:09:07.659 align:start position:0%
[Applause]
[Music]


WEBVTT
Kind: captions
Language: en

00:00:05.440 --> 00:00:07.829 align:start position:0%
 
hello<00:00:05.720><c> everyone</c><00:00:06.640><c> in</c><00:00:06.799><c> the</c><00:00:07.080><c> last</c><00:00:07.319><c> lecture</c><00:00:07.680><c> we</c>

00:00:07.829 --> 00:00:07.839 align:start position:0%
hello everyone in the last lecture we
 

00:00:07.839 --> 00:00:10.629 align:start position:0%
hello everyone in the last lecture we
have<00:00:08.280><c> seen</c><00:00:08.559><c> a</c><00:00:08.679><c> few</c><00:00:08.960><c> examples</c><00:00:09.480><c> of</c><00:00:09.719><c> NFA</c><00:00:10.360><c> and</c><00:00:10.519><c> we</c>

00:00:10.629 --> 00:00:10.639 align:start position:0%
have seen a few examples of NFA and we
 

00:00:10.639 --> 00:00:12.549 align:start position:0%
have seen a few examples of NFA and we
have<00:00:10.880><c> discussed</c><00:00:11.320><c> in</c><00:00:11.480><c> detail</c><00:00:11.840><c> how</c><00:00:11.960><c> to</c><00:00:12.200><c> design</c>

00:00:12.549 --> 00:00:12.559 align:start position:0%
have discussed in detail how to design
 

00:00:12.559 --> 00:00:14.950 align:start position:0%
have discussed in detail how to design
those<00:00:12.920><c> nfas</c><00:00:13.920><c> and</c><00:00:14.120><c> in</c><00:00:14.280><c> this</c><00:00:14.440><c> lecture</c><00:00:14.719><c> we</c><00:00:14.839><c> will</c>

00:00:14.950 --> 00:00:14.960 align:start position:0%
those nfas and in this lecture we will
 

00:00:14.960 --> 00:00:16.830 align:start position:0%
those nfas and in this lecture we will
be<00:00:15.080><c> seeing</c><00:00:15.360><c> a</c><00:00:15.480><c> few</c><00:00:15.639><c> more</c><00:00:15.879><c> examples</c><00:00:16.560><c> and</c><00:00:16.720><c> we</c>

00:00:16.830 --> 00:00:16.840 align:start position:0%
be seeing a few more examples and we
 

00:00:16.840 --> 00:00:20.349 align:start position:0%
be seeing a few more examples and we
will<00:00:17.080><c> try</c><00:00:17.279><c> to</c><00:00:17.520><c> quickly</c><00:00:18.240><c> design</c><00:00:19.240><c> the</c><00:00:19.439><c> nfas</c><00:00:20.080><c> for</c>

00:00:20.349 --> 00:00:20.359 align:start position:0%
will try to quickly design the nfas for
 

00:00:20.359 --> 00:00:22.790 align:start position:0%
will try to quickly design the nfas for
these<00:00:20.600><c> examples</c><00:00:21.439><c> all</c><00:00:21.600><c> right</c><00:00:21.760><c> so</c><00:00:21.920><c> let's</c><00:00:22.160><c> get</c>

00:00:22.790 --> 00:00:22.800 align:start position:0%
these examples all right so let's get
 

00:00:22.800 --> 00:00:25.269 align:start position:0%
these examples all right so let's get
started<00:00:23.800><c> okay</c><00:00:24.119><c> so</c><00:00:24.400><c> here</c><00:00:24.599><c> we</c><00:00:24.760><c> have</c><00:00:24.960><c> a</c><00:00:25.039><c> few</c>

00:00:25.269 --> 00:00:25.279 align:start position:0%
started okay so here we have a few
 

00:00:25.279 --> 00:00:27.310 align:start position:0%
started okay so here we have a few
languages<00:00:25.880><c> and</c><00:00:26.039><c> our</c><00:00:26.279><c> task</c><00:00:26.519><c> is</c><00:00:26.640><c> to</c><00:00:26.800><c> design</c><00:00:27.160><c> the</c>

00:00:27.310 --> 00:00:27.320 align:start position:0%
languages and our task is to design the
 

00:00:27.320 --> 00:00:29.710 align:start position:0%
languages and our task is to design the
NFA<00:00:27.800><c> for</c><00:00:28.039><c> this</c><00:00:28.240><c> languages</c><00:00:29.160><c> so</c><00:00:29.279><c> let's</c><00:00:29.439><c> see</c><00:00:29.599><c> how</c>

00:00:29.710 --> 00:00:29.720 align:start position:0%
NFA for this languages so let's see how
 

00:00:29.720 --> 00:00:32.229 align:start position:0%
NFA for this languages so let's see how
we<00:00:29.800><c> can</c><00:00:30.080><c> do</c><00:00:30.279><c> this</c><00:00:30.880><c> coming</c><00:00:31.119><c> to</c><00:00:31.240><c> the</c><00:00:31.439><c> first</c><00:00:31.679><c> one</c>

00:00:32.229 --> 00:00:32.239 align:start position:0%
we can do this coming to the first one
 

00:00:32.239 --> 00:00:34.830 align:start position:0%
we can do this coming to the first one
L1<00:00:32.759><c> is</c><00:00:32.920><c> the</c><00:00:33.200><c> set</c><00:00:33.399><c> of</c><00:00:33.520><c> all</c><00:00:33.760><c> strings</c><00:00:34.280><c> that</c><00:00:34.480><c> ends</c>

00:00:34.830 --> 00:00:34.840 align:start position:0%
L1 is the set of all strings that ends
 

00:00:34.840 --> 00:00:38.190 align:start position:0%
L1 is the set of all strings that ends
with<00:00:35.040><c> one</c><00:00:35.600><c> so</c><00:00:35.879><c> how</c><00:00:36.079><c> can</c><00:00:36.200><c> I</c><00:00:36.399><c> design</c><00:00:36.719><c> the</c><00:00:36.960><c> NFA</c><00:00:37.960><c> for</c>

00:00:38.190 --> 00:00:38.200 align:start position:0%
with one so how can I design the NFA for
 

00:00:38.200 --> 00:00:41.150 align:start position:0%
with one so how can I design the NFA for
the<00:00:39.079><c> set</c><00:00:39.320><c> of</c><00:00:39.480><c> all</c><00:00:39.680><c> strings</c><00:00:40.079><c> that</c><00:00:40.280><c> ends</c><00:00:40.680><c> with</c>

00:00:41.150 --> 00:00:41.160 align:start position:0%
the set of all strings that ends with
 

00:00:41.160 --> 00:00:43.709 align:start position:0%
the set of all strings that ends with
one<00:00:41.960><c> so</c><00:00:42.440><c> let</c><00:00:42.559><c> me</c><00:00:42.760><c> start</c><00:00:43.000><c> with</c><00:00:43.120><c> the</c><00:00:43.320><c> starting</c>

00:00:43.709 --> 00:00:43.719 align:start position:0%
one so let me start with the starting
 

00:00:43.719 --> 00:00:46.750 align:start position:0%
one so let me start with the starting
state<00:00:44.079><c> which</c><00:00:44.239><c> I</c><00:00:44.320><c> will</c><00:00:44.520><c> call</c><00:00:44.800><c> State</c><00:00:45.160><c> a</c><00:00:46.120><c> a</c><00:00:46.320><c> is</c><00:00:46.520><c> my</c>

00:00:46.750 --> 00:00:46.760 align:start position:0%
state which I will call State a a is my
 

00:00:46.760 --> 00:00:50.110 align:start position:0%
state which I will call State a a is my
starting<00:00:47.160><c> State</c><00:00:48.079><c> and</c><00:00:48.520><c> a</c><00:00:48.800><c> on</c><00:00:49.079><c> getting</c><00:00:49.440><c> input</c>

00:00:50.110 --> 00:00:50.120 align:start position:0%
starting State and a on getting input
 

00:00:50.120 --> 00:00:51.830 align:start position:0%
starting State and a on getting input
either

00:00:51.830 --> 00:00:51.840 align:start position:0%
either
 

00:00:51.840 --> 00:00:56.470 align:start position:0%
either
zero<00:00:52.840><c> or</c><00:00:53.120><c> one</c><00:00:53.800><c> is</c><00:00:54.000><c> stays</c><00:00:54.280><c> in</c><00:00:54.480><c> a</c><00:00:54.719><c> itself</c><00:00:55.640><c> but</c><00:00:56.320><c> if</c>

00:00:56.470 --> 00:00:56.480 align:start position:0%
zero or one is stays in a itself but if
 

00:00:56.480 --> 00:01:01.430 align:start position:0%
zero or one is stays in a itself but if
the<00:00:56.680><c> final</c><00:00:57.000><c> input</c><00:00:57.359><c> that</c><00:00:57.480><c> I</c><00:00:57.680><c> get</c><00:00:58.039><c> is</c><00:00:58.640><c> a</c><00:00:59.640><c> one</c>

00:01:01.430 --> 00:01:01.440 align:start position:0%
the final input that I get is a one
 

00:01:01.440 --> 00:01:05.149 align:start position:0%
the final input that I get is a one
if<00:01:01.600><c> it</c><00:01:01.719><c> is</c><00:01:01.840><c> a</c><00:01:02.039><c> one</c><00:01:02.800><c> then</c><00:01:03.480><c> a</c><00:01:03.800><c> goes</c><00:01:04.080><c> to</c><00:01:04.320><c> the</c><00:01:04.600><c> last</c>

00:01:05.149 --> 00:01:05.159 align:start position:0%
if it is a one then a goes to the last
 

00:01:05.159 --> 00:01:08.789 align:start position:0%
if it is a one then a goes to the last
state<00:01:05.479><c> or</c><00:01:05.680><c> the</c><00:01:05.880><c> final</c><00:01:06.280><c> state</c><00:01:06.640><c> which</c><00:01:06.799><c> is</c><00:01:07.799><c> State</c>

00:01:08.789 --> 00:01:08.799 align:start position:0%
state or the final state which is State
 

00:01:08.799 --> 00:01:12.469 align:start position:0%
state or the final state which is State
B<00:01:09.680><c> all</c><00:01:09.880><c> right</c><00:01:10.119><c> so</c><00:01:10.680><c> when</c><00:01:10.799><c> it</c><00:01:10.960><c> ends</c><00:01:11.320><c> with</c><00:01:11.520><c> one</c><00:01:12.320><c> it</c>

00:01:12.469 --> 00:01:12.479 align:start position:0%
B all right so when it ends with one it
 

00:01:12.479 --> 00:01:15.630 align:start position:0%
B all right so when it ends with one it
is<00:01:12.960><c> accepted</c><00:01:13.840><c> that</c><00:01:14.000><c> is</c><00:01:14.280><c> how</c><00:01:14.439><c> we</c><00:01:14.600><c> designed</c><00:01:15.000><c> this</c>

00:01:15.630 --> 00:01:15.640 align:start position:0%
is accepted that is how we designed this
 

00:01:15.640 --> 00:01:17.270 align:start position:0%
is accepted that is how we designed this
but<00:01:15.960><c> here</c><00:01:16.320><c> there</c><00:01:16.439><c> is</c><00:01:16.560><c> a</c><00:01:16.759><c> question</c><00:01:17.040><c> that</c><00:01:17.159><c> you</c>

00:01:17.270 --> 00:01:17.280 align:start position:0%
but here there is a question that you
 

00:01:17.280 --> 00:01:19.789 align:start position:0%
but here there is a question that you
can<00:01:17.520><c> ask</c><00:01:18.080><c> why</c><00:01:18.200><c> did</c><00:01:18.360><c> I</c><00:01:18.560><c> write</c><00:01:18.720><c> 01</c><00:01:19.360><c> here</c><00:01:19.560><c> I</c><00:01:19.640><c> could</c>

00:01:19.789 --> 00:01:19.799 align:start position:0%
can ask why did I write 01 here I could
 

00:01:19.799 --> 00:01:22.109 align:start position:0%
can ask why did I write 01 here I could
have<00:01:19.960><c> written</c><00:01:20.680><c> a</c><00:01:20.840><c> on</c><00:01:21.040><c> getting</c><00:01:21.360><c> input</c><00:01:21.799><c> just</c>

00:01:22.109 --> 00:01:22.119 align:start position:0%
have written a on getting input just
 

00:01:22.119 --> 00:01:24.069 align:start position:0%
have written a on getting input just
zero<00:01:22.479><c> it</c><00:01:22.600><c> stays</c><00:01:22.920><c> in</c><00:01:23.119><c> a</c><00:01:23.560><c> and</c><00:01:23.680><c> instead</c><00:01:23.920><c> of</c>

00:01:24.069 --> 00:01:24.079 align:start position:0%
zero it stays in a and instead of
 

00:01:24.079 --> 00:01:25.510 align:start position:0%
zero it stays in a and instead of
writing<00:01:24.400><c> one</c><00:01:24.600><c> here</c><00:01:24.799><c> I</c><00:01:24.880><c> could</c><00:01:25.040><c> have</c><00:01:25.200><c> written</c>

00:01:25.510 --> 00:01:25.520 align:start position:0%
writing one here I could have written
 

00:01:25.520 --> 00:01:28.230 align:start position:0%
writing one here I could have written
one<00:01:25.759><c> only</c><00:01:26.119><c> here</c><00:01:26.640><c> a</c><00:01:26.840><c> on</c><00:01:27.000><c> getting</c><00:01:27.240><c> input</c><00:01:27.640><c> zero</c>

00:01:28.230 --> 00:01:28.240 align:start position:0%
one only here a on getting input zero
 

00:01:28.240 --> 00:01:30.670 align:start position:0%
one only here a on getting input zero
goes<00:01:28.479><c> to</c><00:01:28.680><c> a</c><00:01:29.159><c> and</c><00:01:29.320><c> on</c><00:01:29.479><c> getting</c><00:01:29.680><c> input</c><00:01:30.159><c> one</c><00:01:30.439><c> goes</c>

00:01:30.670 --> 00:01:30.680 align:start position:0%
goes to a and on getting input one goes
 

00:01:30.680 --> 00:01:33.149 align:start position:0%
goes to a and on getting input one goes
to<00:01:30.920><c> final</c><00:01:31.240><c> State</c><00:01:31.520><c> B</c><00:01:32.280><c> why</c><00:01:32.439><c> I</c><00:01:32.560><c> did</c><00:01:32.720><c> not</c><00:01:32.960><c> write</c>

00:01:33.149 --> 00:01:33.159 align:start position:0%
to final State B why I did not write
 

00:01:33.159 --> 00:01:37.230 align:start position:0%
to final State B why I did not write
this<00:01:33.320><c> is</c><00:01:33.560><c> because</c><00:01:34.040><c> if</c><00:01:34.360><c> it</c><00:01:34.560><c> was</c><00:01:35.479><c> only</c><00:01:36.479><c> zero</c><00:01:36.920><c> over</c>

00:01:37.230 --> 00:01:37.240 align:start position:0%
this is because if it was only zero over
 

00:01:37.240 --> 00:01:39.630 align:start position:0%
this is because if it was only zero over
here<00:01:37.759><c> then</c><00:01:37.960><c> the</c><00:01:38.079><c> only</c><00:01:38.280><c> strings</c><00:01:39.159><c> that</c><00:01:39.280><c> would</c><00:01:39.439><c> be</c>

00:01:39.630 --> 00:01:39.640 align:start position:0%
here then the only strings that would be
 

00:01:39.640 --> 00:01:46.030 align:start position:0%
here then the only strings that would be
accepted<00:01:40.040><c> by</c><00:01:40.240><c> this</c><00:01:40.680><c> NFA</c><00:01:41.240><c> would</c><00:01:41.560><c> be</c><00:01:43.000><c> 01</c><00:01:44.000><c> or</c><00:01:44.399><c> 0</c><00:01:45.040><c> 01</c>

00:01:46.030 --> 00:01:46.040 align:start position:0%
accepted by this NFA would be 01 or 0 01
 

00:01:46.040 --> 00:01:50.030 align:start position:0%
accepted by this NFA would be 01 or 0 01
or<00:01:46.640><c> 0</c><00:01:47.040><c> 0</c><00:01:47.360><c> 0</c><00:01:48.040><c> 1</c><00:01:48.880><c> that</c><00:01:49.000><c> means</c><00:01:49.320><c> any</c><00:01:49.520><c> number</c><00:01:49.799><c> of</c>

00:01:50.030 --> 00:01:50.040 align:start position:0%
or 0 0 0 1 that means any number of
 

00:01:50.040 --> 00:01:54.109 align:start position:0%
or 0 0 0 1 that means any number of
zeros<00:01:50.680><c> followed</c><00:01:51.200><c> by</c><00:01:51.399><c> one</c><00:01:52.040><c> and</c><00:01:52.479><c> one</c><00:01:52.759><c> itself</c><00:01:53.719><c> but</c>

00:01:54.109 --> 00:01:54.119 align:start position:0%
zeros followed by one and one itself but
 

00:01:54.119 --> 00:01:55.870 align:start position:0%
zeros followed by one and one itself but
there<00:01:54.240><c> are</c><00:01:54.479><c> even</c><00:01:54.759><c> other</c><00:01:54.960><c> strings</c><00:01:55.360><c> that</c><00:01:55.520><c> ends</c>

00:01:55.870 --> 00:01:55.880 align:start position:0%
there are even other strings that ends
 

00:01:55.880 --> 00:02:00.630 align:start position:0%
there are even other strings that ends
with<00:01:56.280><c> one</c><00:01:56.640><c> like</c><00:01:56.880><c> let's</c><00:01:57.079><c> say</c><00:01:57.719><c> 1</c><00:01:58.360><c> 1</c><00:01:59.000><c> 1</c><00:01:59.240><c> 1</c><00:01:59.439><c> 0</c><00:01:59.680><c> 1</c><00:02:00.320><c> even</c>

00:02:00.630 --> 00:02:00.640 align:start position:0%
with one like let's say 1 1 1 1 0 1 even
 

00:02:00.640 --> 00:02:02.950 align:start position:0%
with one like let's say 1 1 1 1 0 1 even
these<00:02:00.799><c> strings</c><00:02:01.200><c> also</c><00:02:01.520><c> end</c><00:02:01.880><c> with</c><00:02:02.320><c> one</c><00:02:02.560><c> and</c><00:02:02.719><c> even</c>

00:02:02.950 --> 00:02:02.960 align:start position:0%
these strings also end with one and even
 

00:02:02.960 --> 00:02:04.870 align:start position:0%
these strings also end with one and even
these<00:02:03.079><c> strings</c><00:02:03.399><c> should</c><00:02:03.600><c> be</c><00:02:03.799><c> accepted</c><00:02:04.600><c> that</c><00:02:04.719><c> is</c>

00:02:04.870 --> 00:02:04.880 align:start position:0%
these strings should be accepted that is
 

00:02:04.880 --> 00:02:07.789 align:start position:0%
these strings should be accepted that is
why<00:02:05.039><c> I</c><00:02:05.159><c> wrote</c><00:02:05.719><c> a</c><00:02:05.920><c> on</c><00:02:06.119><c> getting</c><00:02:06.439><c> input</c><00:02:06.880><c> 0</c><00:02:07.200><c> and</c><00:02:07.399><c> one</c>

00:02:07.789 --> 00:02:07.799 align:start position:0%
why I wrote a on getting input 0 and one
 

00:02:07.799 --> 00:02:10.150 align:start position:0%
why I wrote a on getting input 0 and one
it<00:02:08.000><c> could</c><00:02:08.160><c> stay</c><00:02:08.399><c> in</c><00:02:08.640><c> a</c><00:02:09.200><c> and</c><00:02:09.319><c> if</c><00:02:09.440><c> it</c><00:02:09.599><c> gets</c><00:02:09.840><c> input</c>

00:02:10.150 --> 00:02:10.160 align:start position:0%
it could stay in a and if it gets input
 

00:02:10.160 --> 00:02:12.110 align:start position:0%
it could stay in a and if it gets input
one<00:02:10.360><c> it</c><00:02:10.520><c> goes</c><00:02:10.879><c> the</c><00:02:11.000><c> last</c><00:02:11.239><c> input</c><00:02:11.560><c> one</c><00:02:11.720><c> it</c><00:02:11.879><c> goes</c>

00:02:12.110 --> 00:02:12.120 align:start position:0%
one it goes the last input one it goes
 

00:02:12.120 --> 00:02:15.670 align:start position:0%
one it goes the last input one it goes
to<00:02:12.599><c> B</c><00:02:12.959><c> in</c><00:02:13.160><c> this</c><00:02:13.360><c> way</c><00:02:13.800><c> all</c><00:02:14.080><c> these</c><00:02:14.280><c> inputs</c><00:02:15.280><c> which</c>

00:02:15.670 --> 00:02:15.680 align:start position:0%
to B in this way all these inputs which
 

00:02:15.680 --> 00:02:18.550 align:start position:0%
to B in this way all these inputs which
ends<00:02:16.040><c> with</c><00:02:16.280><c> one</c><00:02:16.519><c> will</c><00:02:16.720><c> be</c><00:02:17.200><c> accepted</c><00:02:17.680><c> by</c><00:02:17.879><c> this</c>

00:02:18.550 --> 00:02:18.560 align:start position:0%
ends with one will be accepted by this
 

00:02:18.560 --> 00:02:22.589 align:start position:0%
ends with one will be accepted by this
NFA<00:02:19.560><c> okay</c><00:02:20.239><c> now</c><00:02:20.400><c> let's</c><00:02:20.640><c> come</c><00:02:20.760><c> to</c><00:02:20.920><c> the</c><00:02:21.040><c> next</c><00:02:21.599><c> one</c>

00:02:22.589 --> 00:02:22.599 align:start position:0%
NFA okay now let's come to the next one
 

00:02:22.599 --> 00:02:24.630 align:start position:0%
NFA okay now let's come to the next one
L2<00:02:23.080><c> is</c><00:02:23.200><c> the</c><00:02:23.360><c> set</c><00:02:23.560><c> of</c><00:02:23.720><c> all</c><00:02:24.000><c> strings</c><00:02:24.440><c> that</c>

00:02:24.630 --> 00:02:24.640 align:start position:0%
L2 is the set of all strings that
 

00:02:24.640 --> 00:02:26.830 align:start position:0%
L2 is the set of all strings that
contains<00:02:25.280><c> zero</c><00:02:25.680><c> our</c><00:02:25.879><c> only</c><00:02:26.280><c> condition</c><00:02:26.480><c> is</c><00:02:26.640><c> that</c>

00:02:26.830 --> 00:02:26.840 align:start position:0%
contains zero our only condition is that
 

00:02:26.840 --> 00:02:29.550 align:start position:0%
contains zero our only condition is that
it<00:02:26.920><c> should</c><00:02:27.239><c> contain</c><00:02:28.239><c> a</c><00:02:28.440><c> zero</c><00:02:29.080><c> and</c><00:02:29.280><c> the</c>

00:02:29.550 --> 00:02:29.560 align:start position:0%
it should contain a zero and the
 

00:02:29.560 --> 00:02:31.390 align:start position:0%
it should contain a zero and the
position<00:02:30.120><c> of</c><00:02:30.280><c> that</c><00:02:30.440><c> zero</c><00:02:30.680><c> does</c><00:02:30.840><c> not</c><00:02:31.000><c> matter</c><00:02:31.280><c> it</c>

00:02:31.390 --> 00:02:31.400 align:start position:0%
position of that zero does not matter it
 

00:02:31.400 --> 00:02:33.949 align:start position:0%
position of that zero does not matter it
could<00:02:31.560><c> be</c><00:02:31.760><c> anywhere</c><00:02:32.599><c> so</c><00:02:33.239><c> I</c><00:02:33.400><c> start</c><00:02:33.680><c> with</c><00:02:33.800><c> a</c>

00:02:33.949 --> 00:02:33.959 align:start position:0%
could be anywhere so I start with a
 

00:02:33.959 --> 00:02:37.390 align:start position:0%
could be anywhere so I start with a
starting<00:02:34.400><c> State</c><00:02:34.760><c> a</c><00:02:35.599><c> a</c><00:02:35.760><c> is</c><00:02:35.959><c> my</c><00:02:36.160><c> starting</c><00:02:36.560><c> State</c>

00:02:37.390 --> 00:02:37.400 align:start position:0%
starting State a a is my starting State
 

00:02:37.400 --> 00:02:41.670 align:start position:0%
starting State a a is my starting State
and<00:02:37.879><c> a</c><00:02:38.879><c> on</c><00:02:39.200><c> getting</c><00:02:39.760><c> input</c>

00:02:41.670 --> 00:02:41.680 align:start position:0%
and a on getting input
 

00:02:41.680 --> 00:02:47.630 align:start position:0%
and a on getting input
either<00:02:42.680><c> 0o</c><00:02:43.159><c> or</c><00:02:43.400><c> 1</c><00:02:43.840><c> it</c><00:02:44.040><c> can</c><00:02:44.640><c> stay</c><00:02:44.959><c> in</c><00:02:45.239><c> a</c><00:02:46.239><c> but</c><00:02:47.159><c> if</c>

00:02:47.630 --> 00:02:47.640 align:start position:0%
either 0o or 1 it can stay in a but if
 

00:02:47.640 --> 00:02:48.470 align:start position:0%
either 0o or 1 it can stay in a but if
you

00:02:48.470 --> 00:02:48.480 align:start position:0%
you
 

00:02:48.480 --> 00:02:54.270 align:start position:0%
you
see<00:02:49.959><c> a</c><00:02:50.959><c> zero</c><00:02:51.560><c> if</c><00:02:51.680><c> you</c><00:02:51.840><c> see</c><00:02:52.080><c> a</c><00:02:52.360><c> zero</c><00:02:53.360><c> then</c><00:02:54.080><c> it</c>

00:02:54.270 --> 00:02:54.280 align:start position:0%
see a zero if you see a zero then it
 

00:02:54.280 --> 00:02:57.070 align:start position:0%
see a zero if you see a zero then it
goes<00:02:54.599><c> to</c>

00:02:57.070 --> 00:02:57.080 align:start position:0%
 
 

00:02:57.080 --> 00:03:01.390 align:start position:0%
 
the<00:02:58.080><c> final</c><00:02:58.560><c> State</c><00:02:59.159><c> B</c><00:03:00.159><c> and</c><00:03:00.599><c> even</c><00:03:00.800><c> in</c><00:03:00.959><c> the</c><00:03:01.080><c> final</c>

00:03:01.390 --> 00:03:01.400 align:start position:0%
the final State B and even in the final
 

00:03:01.400 --> 00:03:04.589 align:start position:0%
the final State B and even in the final
State<00:03:01.720><c> B</c><00:03:02.440><c> whether</c><00:03:02.720><c> you</c><00:03:02.959><c> get</c><00:03:03.840><c> zero</c><00:03:04.159><c> or</c><00:03:04.360><c> one</c>

00:03:04.589 --> 00:03:04.599 align:start position:0%
State B whether you get zero or one
 

00:03:04.599 --> 00:03:06.830 align:start position:0%
State B whether you get zero or one
after<00:03:04.959><c> that</c><00:03:05.840><c> it</c><00:03:05.959><c> can</c><00:03:06.159><c> stay</c><00:03:06.400><c> in</c><00:03:06.480><c> the</c><00:03:06.599><c> final</c>

00:03:06.830 --> 00:03:06.840 align:start position:0%
after that it can stay in the final
 

00:03:06.840 --> 00:03:09.750 align:start position:0%
after that it can stay in the final
State<00:03:07.159><c> itself</c><00:03:07.799><c> now</c><00:03:07.959><c> why</c><00:03:08.080><c> did</c><00:03:08.200><c> I</c><00:03:08.360><c> do</c><00:03:08.560><c> like</c><00:03:08.760><c> this</c>

00:03:09.750 --> 00:03:09.760 align:start position:0%
State itself now why did I do like this
 

00:03:09.760 --> 00:03:13.869 align:start position:0%
State itself now why did I do like this
if<00:03:09.920><c> it</c><00:03:10.239><c> sees</c><00:03:10.760><c> the</c><00:03:11.159><c> input</c><00:03:11.599><c> zero</c><00:03:12.319><c> it</c><00:03:12.840><c> it</c><00:03:13.000><c> goes</c><00:03:13.280><c> to</c>

00:03:13.869 --> 00:03:13.879 align:start position:0%
if it sees the input zero it it goes to
 

00:03:13.879 --> 00:03:16.350 align:start position:0%
if it sees the input zero it it goes to
B<00:03:14.400><c> and</c><00:03:14.480><c> it</c><00:03:14.599><c> could</c><00:03:14.799><c> also</c><00:03:15.040><c> stay</c><00:03:15.319><c> in</c><00:03:15.440><c> a</c><00:03:15.640><c> itself</c><00:03:16.120><c> but</c>

00:03:16.350 --> 00:03:16.360 align:start position:0%
B and it could also stay in a itself but
 

00:03:16.360 --> 00:03:18.350 align:start position:0%
B and it could also stay in a itself but
in<00:03:16.680><c> only</c><00:03:17.000><c> when</c><00:03:17.120><c> it</c><00:03:17.280><c> comes</c><00:03:17.480><c> to</c><00:03:17.680><c> this</c><00:03:17.840><c> B</c><00:03:18.080><c> it</c><00:03:18.159><c> will</c>

00:03:18.350 --> 00:03:18.360 align:start position:0%
in only when it comes to this B it will
 

00:03:18.360 --> 00:03:20.589 align:start position:0%
in only when it comes to this B it will
be<00:03:18.879><c> accepted</c><00:03:19.319><c> so</c><00:03:19.480><c> the</c><00:03:19.680><c> position</c><00:03:19.959><c> of</c><00:03:20.120><c> my</c><00:03:20.280><c> zero</c>

00:03:20.589 --> 00:03:20.599 align:start position:0%
be accepted so the position of my zero
 

00:03:20.599 --> 00:03:23.350 align:start position:0%
be accepted so the position of my zero
does<00:03:20.760><c> not</c><00:03:20.959><c> matter</c><00:03:21.720><c> it</c><00:03:21.840><c> could</c><00:03:22.040><c> be</c><00:03:22.400><c> anywhere</c><00:03:23.159><c> so</c>

00:03:23.350 --> 00:03:23.360 align:start position:0%
does not matter it could be anywhere so
 

00:03:23.360 --> 00:03:26.030 align:start position:0%
does not matter it could be anywhere so
I<00:03:23.440><c> don't</c><00:03:23.799><c> care</c><00:03:24.080><c> what</c><00:03:24.239><c> is</c><00:03:24.519><c> it</c><00:03:24.680><c> starts</c><00:03:25.120><c> with</c><00:03:25.360><c> what</c>

00:03:26.030 --> 00:03:26.040 align:start position:0%
I don't care what is it starts with what
 

00:03:26.040 --> 00:03:27.830 align:start position:0%
I don't care what is it starts with what
it<00:03:26.159><c> could</c><00:03:26.319><c> start</c><00:03:26.599><c> either</c><00:03:26.799><c> with</c><00:03:27.000><c> zero</c><00:03:27.239><c> or</c><00:03:27.400><c> one</c>

00:03:27.830 --> 00:03:27.840 align:start position:0%
it could start either with zero or one
 

00:03:27.840 --> 00:03:29.470 align:start position:0%
it could start either with zero or one
and<00:03:27.959><c> I</c><00:03:28.040><c> don't</c><00:03:28.319><c> care</c><00:03:28.519><c> it</c><00:03:28.680><c> ends</c><00:03:29.000><c> with</c><00:03:29.200><c> what</c><00:03:29.360><c> it</c>

00:03:29.470 --> 00:03:29.480 align:start position:0%
and I don't care it ends with what it
 

00:03:29.480 --> 00:03:32.869 align:start position:0%
and I don't care it ends with what it
could<00:03:29.799><c> end</c><00:03:30.040><c> with</c><00:03:30.239><c> Z</c><00:03:30.439><c> or</c><00:03:30.599><c> 1</c><00:03:30.920><c> but</c><00:03:31.560><c> once</c><00:03:32.560><c> there</c><00:03:32.720><c> is</c>

00:03:32.869 --> 00:03:32.879 align:start position:0%
could end with Z or 1 but once there is
 

00:03:32.879 --> 00:03:35.630 align:start position:0%
could end with Z or 1 but once there is
a<00:03:33.080><c> zero</c><00:03:33.720><c> then</c><00:03:34.480><c> we</c><00:03:34.680><c> make</c><00:03:34.799><c> sure</c><00:03:35.040><c> that</c><00:03:35.200><c> it</c><00:03:35.319><c> goes</c><00:03:35.480><c> to</c>

00:03:35.630 --> 00:03:35.640 align:start position:0%
a zero then we make sure that it goes to
 

00:03:35.640 --> 00:03:37.949 align:start position:0%
a zero then we make sure that it goes to
the<00:03:35.799><c> final</c><00:03:36.159><c> State</c><00:03:36.799><c> B</c><00:03:37.120><c> and</c><00:03:37.239><c> it</c><00:03:37.360><c> will</c><00:03:37.519><c> be</c>

00:03:37.949 --> 00:03:37.959 align:start position:0%
the final State B and it will be
 

00:03:37.959 --> 00:03:39.910 align:start position:0%
the final State B and it will be
accepted<00:03:38.400><c> so</c><00:03:38.599><c> here</c><00:03:38.760><c> the</c><00:03:38.959><c> position</c><00:03:39.319><c> of</c><00:03:39.519><c> the</c>

00:03:39.910 --> 00:03:39.920 align:start position:0%
accepted so here the position of the
 

00:03:39.920 --> 00:03:43.110 align:start position:0%
accepted so here the position of the
symbol<00:03:40.319><c> zero</c><00:03:40.640><c> does</c><00:03:40.840><c> not</c><00:03:41.720><c> matter</c><00:03:42.720><c> okay</c><00:03:42.959><c> and</c>

00:03:43.110 --> 00:03:43.120 align:start position:0%
symbol zero does not matter okay and
 

00:03:43.120 --> 00:03:45.990 align:start position:0%
symbol zero does not matter okay and
then<00:03:43.400><c> the</c><00:03:43.840><c> third</c><00:03:44.120><c> one</c><00:03:44.599><c> L3</c><00:03:45.080><c> is</c><00:03:45.200><c> the</c><00:03:45.360><c> set</c><00:03:45.560><c> of</c><00:03:45.760><c> all</c>

00:03:45.990 --> 00:03:46.000 align:start position:0%
then the third one L3 is the set of all
 

00:03:46.000 --> 00:03:48.710 align:start position:0%
then the third one L3 is the set of all
strings<00:03:46.599><c> that</c><00:03:46.799><c> starts</c><00:03:47.360><c> with</c>

00:03:48.710 --> 00:03:48.720 align:start position:0%
strings that starts with
 

00:03:48.720 --> 00:03:52.949 align:start position:0%
strings that starts with
one0<00:03:49.720><c> it</c><00:03:49.840><c> should</c><00:03:50.120><c> start</c><00:03:50.439><c> with</c><00:03:50.599><c> one</c><00:03:50.920><c> Z</c><00:03:51.799><c> so</c><00:03:52.799><c> I</c>

00:03:52.949 --> 00:03:52.959 align:start position:0%
one0 it should start with one Z so I
 

00:03:52.959 --> 00:03:55.750 align:start position:0%
one0 it should start with one Z so I
start<00:03:53.360><c> with</c><00:03:53.599><c> my</c><00:03:54.319><c> starting</c><00:03:54.760><c> state</c><00:03:55.120><c> or</c><00:03:55.360><c> initial</c>

00:03:55.750 --> 00:03:55.760 align:start position:0%
start with my starting state or initial
 

00:03:55.760 --> 00:03:58.069 align:start position:0%
start with my starting state or initial
State<00:03:56.200><c> a</c>

00:03:58.069 --> 00:03:58.079 align:start position:0%
State a
 

00:03:58.079 --> 00:04:03.710 align:start position:0%
State a
and<00:03:59.079><c> a</c><00:03:59.400><c> on</c><00:03:59.840><c> getting</c><00:04:00.519><c> input</c><00:04:01.439><c> when</c><00:04:01.599><c> it</c><00:04:01.799><c> gets</c><00:04:02.040><c> the</c>

00:04:03.710 --> 00:04:03.720 align:start position:0%
and a on getting input when it gets the
 

00:04:03.720 --> 00:04:07.030 align:start position:0%
and a on getting input when it gets the
input<00:04:04.720><c> one</c><00:04:05.400><c> I</c><00:04:05.480><c> will</c><00:04:05.640><c> send</c><00:04:05.920><c> it</c><00:04:06.079><c> to</c><00:04:06.280><c> the</c><00:04:06.720><c> next</c>

00:04:07.030 --> 00:04:07.040 align:start position:0%
input one I will send it to the next
 

00:04:07.040 --> 00:04:08.949 align:start position:0%
input one I will send it to the next
state<00:04:07.400><c> which</c><00:04:07.519><c> I</c><00:04:07.599><c> will</c><00:04:07.799><c> call</c><00:04:08.040><c> State</c>

00:04:08.949 --> 00:04:08.959 align:start position:0%
state which I will call State
 

00:04:08.959 --> 00:04:10.789 align:start position:0%
state which I will call State
B

00:04:10.789 --> 00:04:10.799 align:start position:0%
B
 

00:04:10.799 --> 00:04:14.149 align:start position:0%
B
and<00:04:11.799><c> B</c><00:04:12.280><c> on</c><00:04:12.599><c> getting</c>

00:04:14.149 --> 00:04:14.159 align:start position:0%
and B on getting
 

00:04:14.159 --> 00:04:20.270 align:start position:0%
and B on getting
input<00:04:15.479><c> 0</c><00:04:16.479><c> I</c><00:04:16.560><c> will</c><00:04:16.759><c> send</c><00:04:17.040><c> it</c><00:04:17.199><c> to</c><00:04:17.799><c> the</c><00:04:18.799><c> next</c><00:04:19.280><c> state</c>

00:04:20.270 --> 00:04:20.280 align:start position:0%
input 0 I will send it to the next state
 

00:04:20.280 --> 00:04:24.550 align:start position:0%
input 0 I will send it to the next state
which<00:04:20.400><c> is</c><00:04:20.600><c> C</c><00:04:21.120><c> and</c><00:04:21.400><c> which</c><00:04:21.519><c> will</c><00:04:21.720><c> be</c><00:04:22.479><c> the</c>

00:04:24.550 --> 00:04:24.560 align:start position:0%
which is C and which will be the
 

00:04:24.560 --> 00:04:26.350 align:start position:0%
which is C and which will be the
final

00:04:26.350 --> 00:04:26.360 align:start position:0%
final
 

00:04:26.360 --> 00:04:29.189 align:start position:0%
final
State<00:04:27.360><c> okay</c><00:04:27.520><c> it</c><00:04:27.639><c> will</c><00:04:27.800><c> be</c><00:04:27.960><c> the</c><00:04:28.080><c> final</c><00:04:28.400><c> State</c>

00:04:29.189 --> 00:04:29.199 align:start position:0%
State okay it will be the final State
 

00:04:29.199 --> 00:04:31.230 align:start position:0%
State okay it will be the final State
and<00:04:29.720><c> in</c><00:04:29.800><c> the</c><00:04:29.960><c> final</c><00:04:30.280><c> after</c><00:04:30.479><c> I</c><00:04:30.600><c> reach</c><00:04:30.800><c> the</c><00:04:30.960><c> final</c>

00:04:31.230 --> 00:04:31.240 align:start position:0%
and in the final after I reach the final
 

00:04:31.240 --> 00:04:33.870 align:start position:0%
and in the final after I reach the final
State<00:04:31.919><c> I</c><00:04:32.000><c> don't</c><00:04:32.280><c> care</c><00:04:32.479><c> what</c><00:04:32.639><c> I</c><00:04:32.759><c> get</c><00:04:33.000><c> after</c><00:04:33.320><c> that</c>

00:04:33.870 --> 00:04:33.880 align:start position:0%
State I don't care what I get after that
 

00:04:33.880 --> 00:04:36.430 align:start position:0%
State I don't care what I get after that
let<00:04:34.080><c> it</c><00:04:34.280><c> be</c><00:04:34.639><c> zero</c><00:04:35.080><c> or</c><00:04:35.320><c> one</c><00:04:35.680><c> it</c><00:04:35.800><c> stays</c><00:04:36.120><c> in</c><00:04:36.280><c> the</c>

00:04:36.430 --> 00:04:36.440 align:start position:0%
let it be zero or one it stays in the
 

00:04:36.440 --> 00:04:38.990 align:start position:0%
let it be zero or one it stays in the
final<00:04:36.680><c> State</c><00:04:37.000><c> itself</c><00:04:37.680><c> so</c><00:04:37.880><c> our</c><00:04:38.400><c> our</c><00:04:38.560><c> only</c>

00:04:38.990 --> 00:04:39.000 align:start position:0%
final State itself so our our only
 

00:04:39.000 --> 00:04:40.790 align:start position:0%
final State itself so our our only
condition<00:04:39.320><c> here</c><00:04:39.520><c> is</c><00:04:39.720><c> that</c><00:04:40.160><c> it</c><00:04:40.280><c> should</c><00:04:40.520><c> start</c>

00:04:40.790 --> 00:04:40.800 align:start position:0%
condition here is that it should start
 

00:04:40.800 --> 00:04:43.510 align:start position:0%
condition here is that it should start
with<00:04:40.960><c> one</c><00:04:41.240><c> Zer</c><00:04:41.600><c> so</c><00:04:41.800><c> we</c><00:04:42.000><c> make</c><00:04:42.199><c> sure</c><00:04:42.560><c> that</c><00:04:43.400><c> there</c>

00:04:43.510 --> 00:04:43.520 align:start position:0%
with one Zer so we make sure that there
 

00:04:43.520 --> 00:04:45.830 align:start position:0%
with one Zer so we make sure that there
are<00:04:43.720><c> no</c><00:04:43.919><c> other</c><00:04:44.240><c> strings</c><00:04:44.680><c> accepted</c><00:04:45.120><c> here</c><00:04:45.520><c> other</c>

00:04:45.830 --> 00:04:45.840 align:start position:0%
are no other strings accepted here other
 

00:04:45.840 --> 00:04:48.230 align:start position:0%
are no other strings accepted here other
than<00:04:46.160><c> one</c><00:04:46.400><c> in</c><00:04:46.600><c> the</c><00:04:46.840><c> beginning</c><00:04:47.400><c> and</c><00:04:47.720><c> zero</c><00:04:48.080><c> in</c>

00:04:48.230 --> 00:04:48.240 align:start position:0%
than one in the beginning and zero in
 

00:04:48.240 --> 00:04:51.510 align:start position:0%
than one in the beginning and zero in
the<00:04:48.759><c> second</c><00:04:49.160><c> part</c><00:04:49.639><c> so</c><00:04:49.840><c> it</c><00:04:49.960><c> starts</c><00:04:50.280><c> with</c><00:04:50.479><c> 1</c><00:04:50.759><c> Zer</c>

00:04:51.510 --> 00:04:51.520 align:start position:0%
the second part so it starts with 1 Zer
 

00:04:51.520 --> 00:04:53.670 align:start position:0%
the second part so it starts with 1 Zer
and<00:04:52.080><c> if</c><00:04:52.199><c> it</c><00:04:52.320><c> starts</c><00:04:52.600><c> with</c><00:04:52.720><c> one</c><00:04:52.919><c> Z</c><00:04:53.160><c> it</c><00:04:53.280><c> goes</c><00:04:53.440><c> to</c>

00:04:53.670 --> 00:04:53.680 align:start position:0%
and if it starts with one Z it goes to
 

00:04:53.680 --> 00:04:55.990 align:start position:0%
and if it starts with one Z it goes to
the<00:04:53.840><c> final</c><00:04:54.120><c> state</c><00:04:54.360><c> or</c><00:04:54.600><c> accepting</c><00:04:55.000><c> State</c><00:04:55.280><c> C</c>

00:04:55.990 --> 00:04:56.000 align:start position:0%
the final state or accepting State C
 

00:04:56.000 --> 00:04:57.909 align:start position:0%
the final state or accepting State C
after<00:04:56.320><c> that</c><00:04:56.560><c> we</c><00:04:56.680><c> don't</c><00:04:56.960><c> care</c><00:04:57.240><c> what</c><00:04:57.440><c> follows</c>

00:04:57.909 --> 00:04:57.919 align:start position:0%
after that we don't care what follows
 

00:04:57.919 --> 00:04:59.710 align:start position:0%
after that we don't care what follows
after<00:04:58.199><c> that</c><00:04:58.600><c> because</c><00:04:58.880><c> all</c><00:04:59.000><c> the</c><00:04:59.240><c> condition</c><00:04:59.440><c> is</c>

00:04:59.710 --> 00:04:59.720 align:start position:0%
after that because all the condition is
 

00:04:59.720 --> 00:05:01.950 align:start position:0%
after that because all the condition is
should<00:04:59.919><c> start</c><00:05:00.240><c> with</c><00:05:00.639><c> one</c><00:05:00.960><c> Z</c><00:05:01.320><c> so</c><00:05:01.520><c> this</c><00:05:01.639><c> is</c><00:05:01.800><c> how</c>

00:05:01.950 --> 00:05:01.960 align:start position:0%
should start with one Z so this is how
 

00:05:01.960 --> 00:05:04.830 align:start position:0%
should start with one Z so this is how
we<00:05:02.080><c> designed</c><00:05:02.479><c> the</c><00:05:02.960><c> NFA</c><00:05:03.440><c> for</c><00:05:03.680><c> this</c><00:05:04.440><c> now</c><00:05:04.600><c> let's</c>

00:05:04.830 --> 00:05:04.840 align:start position:0%
we designed the NFA for this now let's
 

00:05:04.840 --> 00:05:09.790 align:start position:0%
we designed the NFA for this now let's
come<00:05:05.000><c> to</c><00:05:05.320><c> the</c><00:05:06.320><c> fourth</c><00:05:07.120><c> one</c><00:05:08.120><c> so</c><00:05:08.440><c> L4</c><00:05:09.039><c> is</c><00:05:09.160><c> a</c><00:05:09.400><c> set</c><00:05:09.600><c> of</c>

00:05:09.790 --> 00:05:09.800 align:start position:0%
come to the fourth one so L4 is a set of
 

00:05:09.800 --> 00:05:13.390 align:start position:0%
come to the fourth one so L4 is a set of
all<00:05:10.039><c> strings</c><00:05:10.560><c> that</c><00:05:10.759><c> contains</c><00:05:11.800><c> 01</c><00:05:12.800><c> so</c><00:05:13.080><c> here</c>

00:05:13.390 --> 00:05:13.400 align:start position:0%
all strings that contains 01 so here
 

00:05:13.400 --> 00:05:16.469 align:start position:0%
all strings that contains 01 so here
again<00:05:13.759><c> the</c><00:05:14.039><c> position</c><00:05:14.440><c> of</c><00:05:14.639><c> the</c><00:05:15.360><c> symbol</c><00:05:15.800><c> 01</c><00:05:16.280><c> does</c>

00:05:16.469 --> 00:05:16.479 align:start position:0%
again the position of the symbol 01 does
 

00:05:16.479 --> 00:05:18.309 align:start position:0%
again the position of the symbol 01 does
not<00:05:16.680><c> matter</c><00:05:17.039><c> it</c><00:05:17.160><c> could</c><00:05:17.320><c> be</c><00:05:17.560><c> anywhere</c><00:05:18.039><c> so</c><00:05:18.199><c> how</c>

00:05:18.309 --> 00:05:18.319 align:start position:0%
not matter it could be anywhere so how
 

00:05:18.319 --> 00:05:21.430 align:start position:0%
not matter it could be anywhere so how
do<00:05:18.479><c> we</c><00:05:18.639><c> do</c><00:05:18.840><c> this</c><00:05:19.840><c> so</c><00:05:20.120><c> first</c><00:05:20.600><c> we</c><00:05:20.919><c> again</c><00:05:21.160><c> start</c>

00:05:21.430 --> 00:05:21.440 align:start position:0%
do we do this so first we again start
 

00:05:21.440 --> 00:05:25.150 align:start position:0%
do we do this so first we again start
with<00:05:21.560><c> our</c><00:05:21.759><c> starting</c><00:05:22.120><c> state</c><00:05:22.520><c> which</c><00:05:22.639><c> is</c><00:05:22.800><c> State</c><00:05:23.280><c> a</c>

00:05:25.150 --> 00:05:25.160 align:start position:0%
with our starting state which is State a
 

00:05:25.160 --> 00:05:29.909 align:start position:0%
with our starting state which is State a
and<00:05:26.160><c> I</c><00:05:26.280><c> don't</c><00:05:27.080><c> care</c><00:05:27.400><c> what</c><00:05:27.560><c> it</c><00:05:27.720><c> is</c><00:05:27.960><c> in</c>

00:05:29.909 --> 00:05:29.919 align:start position:0%
and I don't care what it is in
 

00:05:29.919 --> 00:05:34.110 align:start position:0%
and I don't care what it is in
whatever<00:05:30.280><c> I</c><00:05:30.479><c> get</c><00:05:30.680><c> in</c><00:05:30.960><c> state</c><00:05:31.280><c> a</c><00:05:31.520><c> 0</c><00:05:32.400><c> 0</c><00:05:32.960><c> or</c><00:05:33.280><c> one</c><00:05:33.960><c> it</c>

00:05:34.110 --> 00:05:34.120 align:start position:0%
whatever I get in state a 0 0 or one it
 

00:05:34.120 --> 00:05:38.390 align:start position:0%
whatever I get in state a 0 0 or one it
can<00:05:34.360><c> stay</c><00:05:34.759><c> here</c><00:05:35.440><c> but</c><00:05:35.880><c> also</c><00:05:36.360><c> if</c><00:05:36.960><c> a</c><00:05:37.280><c> gets</c><00:05:37.560><c> the</c>

00:05:38.390 --> 00:05:38.400 align:start position:0%
can stay here but also if a gets the
 

00:05:38.400 --> 00:05:39.990 align:start position:0%
can stay here but also if a gets the
input

00:05:39.990 --> 00:05:40.000 align:start position:0%
input
 

00:05:40.000 --> 00:05:43.350 align:start position:0%
input
zero<00:05:41.000><c> if</c><00:05:41.160><c> it</c><00:05:41.319><c> gets</c><00:05:41.520><c> the</c><00:05:41.720><c> input</c><00:05:42.120><c> zero</c><00:05:42.880><c> it</c><00:05:43.080><c> goes</c>

00:05:43.350 --> 00:05:43.360 align:start position:0%
zero if it gets the input zero it goes
 

00:05:43.360 --> 00:05:46.189 align:start position:0%
zero if it gets the input zero it goes
to<00:05:43.600><c> the</c><00:05:43.880><c> state</c><00:05:44.880><c> which</c><00:05:45.000><c> I'll</c><00:05:45.240><c> call</c><00:05:45.479><c> State</c><00:05:45.800><c> B</c><00:05:46.039><c> the</c>

00:05:46.189 --> 00:05:46.199 align:start position:0%
to the state which I'll call State B the
 

00:05:46.199 --> 00:05:52.950 align:start position:0%
to the state which I'll call State B the
next<00:05:46.440><c> state</c><00:05:47.360><c> and</c><00:05:48.360><c> B</c><00:05:49.360><c> on</c><00:05:49.880><c> getting</c><00:05:51.120><c> input</c>

00:05:52.950 --> 00:05:52.960 align:start position:0%
next state and B on getting input
 

00:05:52.960 --> 00:05:56.510 align:start position:0%
next state and B on getting input
one<00:05:53.960><c> it</c><00:05:54.160><c> goes</c><00:05:54.479><c> to</c><00:05:54.720><c> the</c><00:05:55.319><c> next</c><00:05:55.639><c> state</c><00:05:56.120><c> which</c><00:05:56.280><c> is</c>

00:05:56.510 --> 00:05:56.520 align:start position:0%
one it goes to the next state which is
 

00:05:56.520 --> 00:05:59.749 align:start position:0%
one it goes to the next state which is
State<00:05:57.400><c> C</c><00:05:58.360><c> and</c><00:05:58.560><c> here</c><00:05:58.800><c> I</c><00:05:58.880><c> see</c><00:05:59.120><c> that</c><00:05:59.240><c> I</c><00:05:59.360><c> already</c>

00:05:59.749 --> 00:05:59.759 align:start position:0%
State C and here I see that I already
 

00:05:59.759 --> 00:06:02.550 align:start position:0%
State C and here I see that I already
got<00:05:59.960><c> the</c><00:06:00.039><c> input</c><00:06:00.360><c> 0</c><00:06:00.759><c> 1</c><00:06:01.280><c> and</c><00:06:01.400><c> on</c><00:06:01.639><c> that</c><00:06:02.160><c> it</c><00:06:02.319><c> comes</c>

00:06:02.550 --> 00:06:02.560 align:start position:0%
got the input 0 1 and on that it comes
 

00:06:02.560 --> 00:06:05.230 align:start position:0%
got the input 0 1 and on that it comes
to<00:06:02.680><c> C</c><00:06:03.000><c> which</c><00:06:03.120><c> should</c><00:06:03.319><c> be</c><00:06:03.520><c> the</c><00:06:04.440><c> final</c><00:06:04.800><c> State</c><00:06:05.039><c> or</c>

00:06:05.230 --> 00:06:05.240 align:start position:0%
to C which should be the final State or
 

00:06:05.240 --> 00:06:08.270 align:start position:0%
to C which should be the final State or
the<00:06:05.560><c> accepting</c><00:06:06.039><c> State</c><00:06:06.840><c> and</c><00:06:07.400><c> in</c><00:06:07.639><c> see</c><00:06:07.919><c> whatever</c>

00:06:08.270 --> 00:06:08.280 align:start position:0%
the accepting State and in see whatever
 

00:06:08.280 --> 00:06:12.830 align:start position:0%
the accepting State and in see whatever
I<00:06:08.440><c> get</c><00:06:09.319><c> again</c><00:06:09.800><c> whether</c><00:06:10.000><c> it</c><00:06:10.160><c> is</c><00:06:11.000><c> zero</c><00:06:11.680><c> or</c><00:06:11.919><c> one</c><00:06:12.680><c> it</c>

00:06:12.830 --> 00:06:12.840 align:start position:0%
I get again whether it is zero or one it
 

00:06:12.840 --> 00:06:15.230 align:start position:0%
I get again whether it is zero or one it
does<00:06:13.039><c> not</c><00:06:13.319><c> matter</c><00:06:13.880><c> so</c><00:06:14.160><c> here</c><00:06:14.599><c> we</c><00:06:14.720><c> see</c><00:06:14.960><c> that</c><00:06:15.080><c> the</c>

00:06:15.230 --> 00:06:15.240 align:start position:0%
does not matter so here we see that the
 

00:06:15.240 --> 00:06:16.870 align:start position:0%
does not matter so here we see that the
position<00:06:15.599><c> does</c><00:06:15.759><c> not</c><00:06:15.960><c> matter</c><00:06:16.280><c> a</c><00:06:16.440><c> on</c><00:06:16.599><c> getting</c>

00:06:16.870 --> 00:06:16.880 align:start position:0%
position does not matter a on getting
 

00:06:16.880 --> 00:06:19.510 align:start position:0%
position does not matter a on getting
input<00:06:17.199><c> zero</c><00:06:17.440><c> it</c><00:06:17.560><c> could</c><00:06:17.720><c> either</c><00:06:17.919><c> stay</c><00:06:18.160><c> in</c><00:06:18.400><c> a</c><00:06:19.160><c> or</c>

00:06:19.510 --> 00:06:19.520 align:start position:0%
input zero it could either stay in a or
 

00:06:19.520 --> 00:06:22.029 align:start position:0%
input zero it could either stay in a or
it<00:06:19.639><c> could</c><00:06:19.840><c> go</c><00:06:20.000><c> to</c><00:06:20.160><c> B</c><00:06:20.479><c> but</c><00:06:20.639><c> once</c><00:06:20.840><c> it</c><00:06:20.960><c> goes</c><00:06:21.199><c> to</c><00:06:21.360><c> B</c>

00:06:22.029 --> 00:06:22.039 align:start position:0%
it could go to B but once it goes to B
 

00:06:22.039 --> 00:06:24.189 align:start position:0%
it could go to B but once it goes to B
only<00:06:22.280><c> on</c><00:06:22.479><c> getting</c><00:06:22.759><c> input</c><00:06:23.080><c> one</c><00:06:23.360><c> it</c><00:06:23.479><c> can</c><00:06:23.720><c> proceed</c>

00:06:24.189 --> 00:06:24.199 align:start position:0%
only on getting input one it can proceed
 

00:06:24.199 --> 00:06:27.350 align:start position:0%
only on getting input one it can proceed
so<00:06:24.360><c> we</c><00:06:24.479><c> see</c><00:06:24.720><c> that</c><00:06:24.880><c> we</c><00:06:25.039><c> made</c><00:06:25.240><c> sure</c><00:06:25.560><c> that</c><00:06:26.160><c> 01</c><00:06:27.160><c> will</c>

00:06:27.350 --> 00:06:27.360 align:start position:0%
so we see that we made sure that 01 will
 

00:06:27.360 --> 00:06:29.710 align:start position:0%
so we see that we made sure that 01 will
be<00:06:27.560><c> there</c><00:06:27.759><c> somewhere</c><00:06:28.120><c> in</c><00:06:28.240><c> the</c><00:06:28.400><c> string</c><00:06:29.319><c> okay</c><00:06:29.599><c> so</c>

00:06:29.710 --> 00:06:29.720 align:start position:0%
be there somewhere in the string okay so
 

00:06:29.720 --> 00:06:31.670 align:start position:0%
be there somewhere in the string okay so
that<00:06:29.800><c> is</c><00:06:29.919><c> how</c><00:06:30.039><c> we</c><00:06:30.160><c> make</c><00:06:30.400><c> sure</c><00:06:30.759><c> so</c><00:06:31.319><c> does</c><00:06:31.520><c> not</c>

00:06:31.670 --> 00:06:31.680 align:start position:0%
that is how we make sure so does not
 

00:06:31.680 --> 00:06:33.469 align:start position:0%
that is how we make sure so does not
matter<00:06:31.960><c> what</c><00:06:32.080><c> it</c><00:06:32.199><c> is</c><00:06:32.440><c> here</c><00:06:32.800><c> and</c><00:06:32.960><c> it</c><00:06:33.080><c> does</c><00:06:33.240><c> not</c>

00:06:33.469 --> 00:06:33.479 align:start position:0%
matter what it is here and it does not
 

00:06:33.479 --> 00:06:35.550 align:start position:0%
matter what it is here and it does not
matter<00:06:34.199><c> what</c><00:06:34.360><c> we</c><00:06:34.560><c> get</c><00:06:34.759><c> even</c><00:06:35.000><c> after</c><00:06:35.240><c> reaching</c>

00:06:35.550 --> 00:06:35.560 align:start position:0%
matter what we get even after reaching
 

00:06:35.560 --> 00:06:37.270 align:start position:0%
matter what we get even after reaching
the<00:06:35.720><c> final</c><00:06:35.960><c> State</c><00:06:36.319><c> because</c><00:06:36.919><c> here</c><00:06:37.120><c> the</c>

00:06:37.270 --> 00:06:37.280 align:start position:0%
the final State because here the
 

00:06:37.280 --> 00:06:38.870 align:start position:0%
the final State because here the
position<00:06:37.680><c> does</c><00:06:37.840><c> not</c><00:06:38.039><c> matter</c><00:06:38.360><c> the</c><00:06:38.479><c> only</c><00:06:38.720><c> thing</c>

00:06:38.870 --> 00:06:38.880 align:start position:0%
position does not matter the only thing
 

00:06:38.880 --> 00:06:41.589 align:start position:0%
position does not matter the only thing
is<00:06:39.000><c> it</c><00:06:39.080><c> should</c><00:06:39.319><c> contain</c><00:06:39.639><c> 01</c><00:06:40.520><c> anywhere</c><00:06:41.039><c> in</c><00:06:41.199><c> the</c>

00:06:41.589 --> 00:06:41.599 align:start position:0%
is it should contain 01 anywhere in the
 

00:06:41.599 --> 00:06:44.469 align:start position:0%
is it should contain 01 anywhere in the
string<00:06:42.599><c> okay</c><00:06:42.759><c> so</c><00:06:42.960><c> that</c><00:06:43.080><c> is</c><00:06:43.199><c> how</c><00:06:43.360><c> we</c><00:06:43.479><c> designed</c>

00:06:44.469 --> 00:06:44.479 align:start position:0%
string okay so that is how we designed
 

00:06:44.479 --> 00:06:47.070 align:start position:0%
string okay so that is how we designed
this<00:06:45.479><c> okay</c><00:06:45.800><c> and</c><00:06:45.919><c> then</c><00:06:46.080><c> the</c><00:06:46.280><c> last</c><00:06:46.479><c> one</c><00:06:46.759><c> that</c><00:06:46.919><c> we</c>

00:06:47.070 --> 00:06:47.080 align:start position:0%
this okay and then the last one that we
 

00:06:47.080 --> 00:06:49.870 align:start position:0%
this okay and then the last one that we
have<00:06:47.319><c> here</c><00:06:47.560><c> is</c><00:06:48.160><c> L5</c><00:06:48.800><c> which</c><00:06:48.919><c> is</c><00:06:49.039><c> a</c><00:06:49.199><c> set</c><00:06:49.400><c> of</c><00:06:49.599><c> all</c>

00:06:49.870 --> 00:06:49.880 align:start position:0%
have here is L5 which is a set of all
 

00:06:49.880 --> 00:06:52.510 align:start position:0%
have here is L5 which is a set of all
strings<00:06:50.400><c> that</c><00:06:50.599><c> ends</c><00:06:51.039><c> with</c><00:06:51.400><c> one</c><00:06:51.720><c> one</c><00:06:52.280><c> we</c><00:06:52.400><c> have</c>

00:06:52.510 --> 00:06:52.520 align:start position:0%
strings that ends with one one we have
 

00:06:52.520 --> 00:06:54.390 align:start position:0%
strings that ends with one one we have
to<00:06:52.680><c> make</c><00:06:52.840><c> sure</c><00:06:53.080><c> that</c><00:06:53.240><c> it</c><00:06:53.360><c> ends</c><00:06:53.759><c> with</c><00:06:53.919><c> one</c><00:06:54.120><c> one</c>

00:06:54.390 --> 00:06:54.400 align:start position:0%
to make sure that it ends with one one
 

00:06:54.400 --> 00:06:57.430 align:start position:0%
to make sure that it ends with one one
so<00:06:54.639><c> how</c><00:06:54.759><c> do</c><00:06:54.960><c> we</c><00:06:55.479><c> do</c><00:06:55.759><c> this</c><00:06:56.440><c> we</c><00:06:56.599><c> start</c><00:06:56.919><c> with</c><00:06:57.199><c> the</c>

00:06:57.430 --> 00:06:57.440 align:start position:0%
so how do we do this we start with the
 

00:06:57.440 --> 00:07:00.230 align:start position:0%
so how do we do this we start with the
starting<00:06:57.840><c> State</c><00:06:58.199><c> a</c>

00:07:00.230 --> 00:07:00.240 align:start position:0%
starting State a
 

00:07:00.240 --> 00:07:02.909 align:start position:0%
starting State a
and<00:07:01.240><c> it</c><00:07:01.360><c> does</c><00:07:01.560><c> not</c><00:07:01.800><c> matter</c><00:07:02.160><c> what</c><00:07:02.319><c> it</c><00:07:02.479><c> starts</c>

00:07:02.909 --> 00:07:02.919 align:start position:0%
and it does not matter what it starts
 

00:07:02.919 --> 00:07:07.710 align:start position:0%
and it does not matter what it starts
with<00:07:03.160><c> it</c><00:07:03.280><c> could</c><00:07:03.479><c> be</c><00:07:04.120><c> either</c><00:07:04.960><c> zero</c><00:07:05.560><c> or</c><00:07:06.000><c> one</c><00:07:07.000><c> and</c>

00:07:07.710 --> 00:07:07.720 align:start position:0%
with it could be either zero or one and
 

00:07:07.720 --> 00:07:10.350 align:start position:0%
with it could be either zero or one and
a<00:07:08.479><c> on</c><00:07:08.759><c> getting</c>

00:07:10.350 --> 00:07:10.360 align:start position:0%
a on getting
 

00:07:10.360 --> 00:07:12.270 align:start position:0%
a on getting
input

00:07:12.270 --> 00:07:12.280 align:start position:0%
input
 

00:07:12.280 --> 00:07:17.029 align:start position:0%
input
one<00:07:13.280><c> it</c><00:07:13.479><c> goes</c><00:07:13.840><c> to</c><00:07:14.680><c> State</c><00:07:15.599><c> B</c><00:07:15.960><c> the</c><00:07:16.120><c> next</c><00:07:16.400><c> state</c>

00:07:17.029 --> 00:07:17.039 align:start position:0%
one it goes to State B the next state
 

00:07:17.039 --> 00:07:18.390 align:start position:0%
one it goes to State B the next state
because<00:07:17.240><c> I</c><00:07:17.360><c> have</c><00:07:17.479><c> to</c><00:07:17.639><c> get</c><00:07:17.759><c> this</c><00:07:17.919><c> string</c><00:07:18.199><c> one</c>

00:07:18.390 --> 00:07:18.400 align:start position:0%
because I have to get this string one
 

00:07:18.400 --> 00:07:21.469 align:start position:0%
because I have to get this string one
one<00:07:19.080><c> and</c><00:07:19.280><c> B</c><00:07:19.560><c> also</c><00:07:19.840><c> on</c><00:07:20.080><c> getting</c><00:07:20.479><c> input</c><00:07:21.360><c> what</c>

00:07:21.469 --> 00:07:21.479 align:start position:0%
one and B also on getting input what
 

00:07:21.479 --> 00:07:23.550 align:start position:0%
one and B also on getting input what
would<00:07:21.680><c> it</c><00:07:21.879><c> be</c><00:07:22.599><c> it</c><00:07:22.720><c> should</c>

00:07:23.550 --> 00:07:23.560 align:start position:0%
would it be it should
 

00:07:23.560 --> 00:07:28.110 align:start position:0%
would it be it should
be<00:07:24.560><c> input</c><00:07:25.400><c> one</c><00:07:26.039><c> yes</c><00:07:26.560><c> on</c><00:07:26.759><c> getting</c><00:07:27.080><c> input</c><00:07:27.479><c> one</c><00:07:28.000><c> it</c>

00:07:28.110 --> 00:07:28.120 align:start position:0%
be input one yes on getting input one it
 

00:07:28.120 --> 00:07:30.189 align:start position:0%
be input one yes on getting input one it
should<00:07:28.400><c> go</c><00:07:28.599><c> to</c><00:07:28.800><c> the</c><00:07:29.000><c> next</c><00:07:29.280><c> stage</c><00:07:29.759><c> which</c><00:07:29.919><c> is</c>

00:07:30.189 --> 00:07:30.199 align:start position:0%
should go to the next stage which is
 

00:07:30.199 --> 00:07:33.589 align:start position:0%
should go to the next stage which is
State<00:07:31.039><c> C</c><00:07:31.840><c> and</c><00:07:32.039><c> C</c><00:07:32.319><c> should</c><00:07:32.560><c> be</c><00:07:32.759><c> my</c><00:07:33.000><c> final</c><00:07:33.360><c> state</c>

00:07:33.589 --> 00:07:33.599 align:start position:0%
State C and C should be my final state
 

00:07:33.599 --> 00:07:35.070 align:start position:0%
State C and C should be my final state
or

00:07:35.070 --> 00:07:35.080 align:start position:0%
or
 

00:07:35.080 --> 00:07:37.749 align:start position:0%
or
accepting<00:07:36.080><c> State</c><00:07:36.960><c> and</c><00:07:37.120><c> here</c><00:07:37.280><c> I</c><00:07:37.360><c> should</c><00:07:37.599><c> not</c>

00:07:37.749 --> 00:07:37.759 align:start position:0%
accepting State and here I should not
 

00:07:37.759 --> 00:07:40.029 align:start position:0%
accepting State and here I should not
mention<00:07:38.080><c> anything</c><00:07:38.479><c> in</c><00:07:38.639><c> C</c><00:07:39.080><c> anymore</c><00:07:39.599><c> why</c>

00:07:40.029 --> 00:07:40.039 align:start position:0%
mention anything in C anymore why
 

00:07:40.039 --> 00:07:41.909 align:start position:0%
mention anything in C anymore why
because<00:07:40.319><c> it</c><00:07:40.400><c> should</c><00:07:40.639><c> end</c><00:07:40.919><c> with</c><00:07:41.080><c> one</c><00:07:41.280><c> one</c><00:07:41.599><c> when</c>

00:07:41.909 --> 00:07:41.919 align:start position:0%
because it should end with one one when
 

00:07:41.919 --> 00:07:44.070 align:start position:0%
because it should end with one one when
when<00:07:42.080><c> it</c><00:07:42.840><c> when</c><00:07:43.000><c> it</c><00:07:43.120><c> sees</c><00:07:43.440><c> this</c><00:07:43.599><c> one</c><00:07:43.759><c> it</c><00:07:43.879><c> comes</c>

00:07:44.070 --> 00:07:44.080 align:start position:0%
when it when it sees this one it comes
 

00:07:44.080 --> 00:07:45.790 align:start position:0%
when it when it sees this one it comes
to<00:07:44.240><c> B</c><00:07:44.440><c> when</c><00:07:44.520><c> it</c><00:07:44.639><c> sees</c><00:07:44.919><c> the</c><00:07:45.039><c> next</c><00:07:45.199><c> one</c><00:07:45.360><c> it</c><00:07:45.560><c> comes</c>

00:07:45.790 --> 00:07:45.800 align:start position:0%
to B when it sees the next one it comes
 

00:07:45.800 --> 00:07:49.710 align:start position:0%
to B when it sees the next one it comes
to<00:07:46.360><c> C</c><00:07:47.319><c> so</c><00:07:47.840><c> when</c><00:07:48.000><c> it</c><00:07:48.159><c> reaches</c><00:07:48.520><c> C</c><00:07:48.960><c> we</c><00:07:49.199><c> made</c><00:07:49.400><c> sure</c>

00:07:49.710 --> 00:07:49.720 align:start position:0%
to C so when it reaches C we made sure
 

00:07:49.720 --> 00:07:52.830 align:start position:0%
to C so when it reaches C we made sure
that<00:07:50.000><c> the</c><00:07:50.240><c> last</c><00:07:50.680><c> symbols</c><00:07:51.120><c> were</c><00:07:51.680><c> 1</c><00:07:52.159><c> one</c><00:07:52.599><c> so</c><00:07:52.759><c> if</c>

00:07:52.830 --> 00:07:52.840 align:start position:0%
that the last symbols were 1 one so if
 

00:07:52.840 --> 00:07:54.790 align:start position:0%
that the last symbols were 1 one so if
we<00:07:53.000><c> write</c><00:07:53.199><c> anything</c><00:07:53.599><c> more</c><00:07:53.840><c> to</c><00:07:54.080><c> this</c><00:07:54.639><c> that</c>

00:07:54.790 --> 00:07:54.800 align:start position:0%
we write anything more to this that
 

00:07:54.800 --> 00:07:57.629 align:start position:0%
we write anything more to this that
means<00:07:55.120><c> that</c><00:07:55.639><c> it</c><00:07:55.800><c> will</c><00:07:56.000><c> be</c><00:07:56.759><c> something</c><00:07:57.319><c> other</c>

00:07:57.629 --> 00:07:57.639 align:start position:0%
means that it will be something other
 

00:07:57.639 --> 00:08:00.749 align:start position:0%
means that it will be something other
than<00:07:57.800><c> one</c><00:07:58.000><c> one</c><00:07:58.360><c> so</c><00:07:59.240><c> I</c><00:07:59.599><c> got</c><00:07:59.800><c> one</c><00:08:00.080><c> I</c><00:08:00.199><c> got</c><00:08:00.400><c> one</c><00:08:00.639><c> and</c>

00:08:00.749 --> 00:08:00.759 align:start position:0%
than one one so I got one I got one and
 

00:08:00.759 --> 00:08:02.589 align:start position:0%
than one one so I got one I got one and
then<00:08:00.879><c> I</c><00:08:01.000><c> reached</c><00:08:01.280><c> the</c><00:08:01.440><c> final</c><00:08:01.680><c> state</c><00:08:02.039><c> so</c><00:08:02.440><c> we</c>

00:08:02.589 --> 00:08:02.599 align:start position:0%
then I reached the final state so we
 

00:08:02.599 --> 00:08:04.430 align:start position:0%
then I reached the final state so we
made<00:08:02.759><c> sure</c><00:08:03.080><c> that</c><00:08:03.599><c> it</c><00:08:03.720><c> will</c><00:08:03.919><c> accept</c><00:08:04.199><c> all</c><00:08:04.319><c> the</c>

00:08:04.430 --> 00:08:04.440 align:start position:0%
made sure that it will accept all the
 

00:08:04.440 --> 00:08:06.670 align:start position:0%
made sure that it will accept all the
strings<00:08:04.680><c> that</c><00:08:04.879><c> ends</c><00:08:05.240><c> with</c><00:08:05.639><c> one</c><00:08:05.919><c> one</c><00:08:06.360><c> so</c><00:08:06.560><c> this</c>

00:08:06.670 --> 00:08:06.680 align:start position:0%
strings that ends with one one so this
 

00:08:06.680 --> 00:08:10.710 align:start position:0%
strings that ends with one one so this
is<00:08:06.919><c> the</c><00:08:07.759><c> way</c><00:08:07.919><c> we</c><00:08:08.080><c> design</c><00:08:08.479><c> the</c><00:08:08.840><c> NFS</c><00:08:09.360><c> for</c><00:08:09.720><c> this</c>

00:08:10.710 --> 00:08:10.720 align:start position:0%
is the way we design the NFS for this
 

00:08:10.720 --> 00:08:13.950 align:start position:0%
is the way we design the NFS for this
examples<00:08:11.720><c> I</c><00:08:11.840><c> hope</c><00:08:12.000><c> it</c><00:08:12.080><c> was</c><00:08:12.240><c> clear</c><00:08:12.479><c> to</c><00:08:12.639><c> you</c><00:08:13.639><c> okay</c>

00:08:13.950 --> 00:08:13.960 align:start position:0%
examples I hope it was clear to you okay
 

00:08:13.960 --> 00:08:16.749 align:start position:0%
examples I hope it was clear to you okay
so<00:08:14.360><c> since</c><00:08:14.639><c> we</c><00:08:14.759><c> have</c><00:08:14.960><c> discussed</c><00:08:15.360><c> this</c><00:08:15.560><c> nfas</c><00:08:16.159><c> now</c>

00:08:16.749 --> 00:08:16.759 align:start position:0%
so since we have discussed this nfas now
 

00:08:16.759 --> 00:08:19.230 align:start position:0%
so since we have discussed this nfas now
I<00:08:16.840><c> would</c><00:08:17.159><c> give</c><00:08:17.280><c> you</c><00:08:17.440><c> an</c><00:08:17.680><c> assignment</c><00:08:18.240><c> problem</c>

00:08:19.230 --> 00:08:19.240 align:start position:0%
I would give you an assignment problem
 

00:08:19.240 --> 00:08:21.309 align:start position:0%
I would give you an assignment problem
if<00:08:19.360><c> you</c><00:08:19.520><c> were</c><00:08:19.720><c> to</c><00:08:19.879><c> construct</c><00:08:20.319><c> the</c><00:08:20.479><c> equivalent</c>

00:08:21.309 --> 00:08:21.319 align:start position:0%
if you were to construct the equivalent
 

00:08:21.319 --> 00:08:25.510 align:start position:0%
if you were to construct the equivalent
DFAS<00:08:22.319><c> for</c><00:08:22.560><c> the</c><00:08:22.720><c> above</c><00:08:23.159><c> nfas</c><00:08:24.159><c> then</c><00:08:24.639><c> tell</c><00:08:24.879><c> me</c><00:08:25.360><c> how</c>

00:08:25.510 --> 00:08:25.520 align:start position:0%
DFAS for the above nfas then tell me how
 

00:08:25.520 --> 00:08:27.510 align:start position:0%
DFAS for the above nfas then tell me how
many<00:08:25.800><c> minimum</c><00:08:26.199><c> number</c><00:08:26.479><c> of</c><00:08:26.639><c> states</c><00:08:27.120><c> would</c><00:08:27.280><c> you</c>

00:08:27.510 --> 00:08:27.520 align:start position:0%
many minimum number of states would you
 

00:08:27.520 --> 00:08:30.110 align:start position:0%
many minimum number of states would you
use<00:08:28.159><c> for</c><00:08:28.520><c> the</c><00:08:28.680><c> construction</c><00:08:29.199><c> of</c><00:08:29.560><c> each</c><00:08:29.720><c> of</c><00:08:29.879><c> the</c>

00:08:30.110 --> 00:08:30.120 align:start position:0%
use for the construction of each of the
 

00:08:30.120 --> 00:08:33.829 align:start position:0%
use for the construction of each of the
DFAS<00:08:31.120><c> so</c><00:08:31.759><c> here</c><00:08:31.919><c> we</c><00:08:32.039><c> have</c><00:08:32.200><c> constructed</c><00:08:32.880><c> the</c><00:08:33.279><c> NFS</c>

00:08:33.829 --> 00:08:33.839 align:start position:0%
DFAS so here we have constructed the NFS
 

00:08:33.839 --> 00:08:36.709 align:start position:0%
DFAS so here we have constructed the NFS
for<00:08:34.039><c> the</c><00:08:34.200><c> languages</c><00:08:34.680><c> L1</c><00:08:35.039><c> to</c><00:08:35.240><c> L5</c><00:08:36.039><c> now</c><00:08:36.279><c> try</c><00:08:36.479><c> to</c>

00:08:36.709 --> 00:08:36.719 align:start position:0%
for the languages L1 to L5 now try to
 

00:08:36.719 --> 00:08:39.870 align:start position:0%
for the languages L1 to L5 now try to
construct<00:08:37.240><c> the</c><00:08:37.800><c> DFA</c><00:08:38.440><c> for</c><00:08:38.719><c> this</c><00:08:39.240><c> languages</c><00:08:39.719><c> the</c>

00:08:39.870 --> 00:08:39.880 align:start position:0%
construct the DFA for this languages the
 

00:08:39.880 --> 00:08:43.550 align:start position:0%
construct the DFA for this languages the
equivalent<00:08:40.440><c> DFAS</c><00:08:41.440><c> and</c><00:08:41.959><c> tell</c><00:08:42.159><c> me</c><00:08:42.719><c> how</c><00:08:43.000><c> many</c>

00:08:43.550 --> 00:08:43.560 align:start position:0%
equivalent DFAS and tell me how many
 

00:08:43.560 --> 00:08:46.230 align:start position:0%
equivalent DFAS and tell me how many
minimum<00:08:44.039><c> number</c><00:08:44.320><c> of</c><00:08:44.519><c> states</c><00:08:45.160><c> would</c><00:08:45.360><c> you</c><00:08:45.600><c> use</c>

00:08:46.230 --> 00:08:46.240 align:start position:0%
minimum number of states would you use
 

00:08:46.240 --> 00:08:50.070 align:start position:0%
minimum number of states would you use
to<00:08:46.760><c> construct</c><00:08:47.320><c> the</c><00:08:47.800><c> DFS</c><00:08:48.519><c> for</c><00:08:48.800><c> these</c><00:08:49.560><c> above</c>

00:08:50.070 --> 00:08:50.080 align:start position:0%
to construct the DFS for these above
 

00:08:50.080 --> 00:08:53.190 align:start position:0%
to construct the DFS for these above
languages<00:08:51.080><c> so</c><00:08:51.360><c> try</c><00:08:51.560><c> to</c><00:08:51.720><c> do</c><00:08:51.959><c> this</c><00:08:52.279><c> and</c><00:08:52.880><c> try</c><00:08:53.080><c> to</c>

00:08:53.190 --> 00:08:53.200 align:start position:0%
languages so try to do this and try to
 

00:08:53.200 --> 00:08:54.870 align:start position:0%
languages so try to do this and try to
leave<00:08:53.399><c> your</c><00:08:53.600><c> answer</c><00:08:53.880><c> in</c><00:08:54.040><c> the</c><00:08:54.240><c> comment</c><00:08:54.560><c> section</c>

00:08:54.870 --> 00:08:54.880 align:start position:0%
leave your answer in the comment section
 

00:08:54.880 --> 00:08:56.910 align:start position:0%
leave your answer in the comment section
below<00:08:55.640><c> and</c><00:08:56.040><c> thank</c><00:08:56.200><c> you</c><00:08:56.279><c> for</c><00:08:56.480><c> watching</c><00:08:56.760><c> this</c>

00:08:56.910 --> 00:08:56.920 align:start position:0%
below and thank you for watching this
 

00:08:56.920 --> 00:09:01.310 align:start position:0%
below and thank you for watching this
lecture<00:08:57.279><c> and</c><00:08:57.440><c> see</c><00:08:57.600><c> you</c><00:08:57.680><c> in</c><00:08:57.800><c> the</c><00:08:57.920><c> next</c><00:08:58.120><c> one</c>

00:09:01.310 --> 00:09:01.320 align:start position:0%
 
 

00:09:01.320 --> 00:09:11.489 align:start position:0%
 
[Music]

